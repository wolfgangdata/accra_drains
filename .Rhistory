}
rownames(pts.drain.int) <- c(1:31)
plot(sewage, col = "blue", axes=TRUE)
points(pts.drain.int)
pts.drain.int
pts.drain.int$drain <- c(1:31)
pts.drain.int
sewage
sewage.prj
pts.drain.beg <- data.frame("lon" = c(-NA), "lat" = c(NA))
for (i in 1:length(endpoints)) {
if (i == 15 | i == 25){
pts.drain.beg[i, ] <- tail(data.frame(endpoints[i]), 1)
} else {
pts.drain.beg[i, ] <- head(data.frame(endpoints[i]), 1)
}
}
pts.drain.int.prj <- spTransform(pts.drain.int, CRS("+init=epsg:32630"))
pts.drain.beg.prj <- spTransform(pts.drain.beg, CRS("+init=epsg:32630"))
pts.drain.beg$drain <- c(1:31)
rownames(pts.drain.beg) <- c(1:31)
pts.drain.int.prj <- spTransform(pts.drain.int, CRS("+init=epsg:32630"))
pts.drain.int.sp <- SpatialPointsDataFrame(pts.drain.int[c("lon", "lat")],
data.frame(ID=seq(1:nrow(pts.drain.int))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
pts.drain.int.prj <- spTransform(pts.drain.int.sp, CRS("+init=epsg:32630"))
pts.drain.beg.sp <- SpatialPointsDataFrame(pts.drain.beg[c("lon", "lat")],
data.frame(ID=seq(1:nrow(pts.drain.beg))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
pts.drain.beg.prj <- spTransform(pts.drain.beg.sp, CRS("+init=epsg:32630"))
gDistance(pts.drain.beg.prj[1, ], pts.drain.beg.prj[1, ])
pts.drain.int.prj[1,]
gDistance(pts.drain.int.prj[1, ], pts.drain.beg.prj[1, ])
sewage.length <- c()
for (i in 1:length(sewage.prj)){
d <- gDistance(pts.drain.int.prj[i, ], pts.drain.beg.prj[i, ]) #distance between beg and end point of drain
circles.prj <- gBuffer(pts.drain.int.prj[i,], width=d, byid=TRUE)
sewage.length[i] <- line.length(sewage.prj, circles.prj)
}
sewage.length
sewage.length <- c()
for (i in 1:length(sewage.prj)){
d <- gDistance(pts.drain.int.prj[i, ], pts.drain.beg.prj[i, ]) #distance between beg and end point of drain
circles.prj <- gBuffer(pts.drain.int.prj[i,], width=d, byid=TRUE)
sewage.length[i] <- line.length(sewage.prj[i,], circles.prj)
}
sewage.length
gBuffer(pts.drain.int.prj[i,], width=d, byid=TRUE)
d
sewage.length <- data.frame("length" = c(-NA), "drain" = c(NA))
for (i in 1:length(sewage.prj)){
d <- gDistance(pts.drain.int.prj[i, ], pts.drain.beg.prj[i, ]) #distance between beg and end point of drain
circles.prj <- gBuffer(pts.drain.int.prj[i,], width=d, byid=TRUE)
sewage.length[i, ] <- line.length(sewage.prj[i, ], circles.prj)
}
sewage.length
sewage.length <- data.frame("length" = c(-NA), "drain" = c(NA))
for (i in 1:length(sewage.prj)){
d <- gDistance(pts.drain.int.prj[i, ], pts.drain.beg.prj[i, ]) #distance between beg and end point of drain
circles.prj <- gBuffer(pts.drain.int.prj[i,], width=d, byid=TRUE)
sewage.length[i, ] <- c(line.length(sewage.prj[i, ], circles.prj), i)
}
sewage.length
sewage.length.df <- data.frame("length" = c(-NA), "drain" = c(NA))
for (i in 1:length(sewage.prj)){
d <- gDistance(pts.drain.int.prj[i, ], pts.drain.beg.prj[i, ]) #distance between beg and end point of drain
circles.prj <- gBuffer(pts.drain.int.prj[i,], width=d, byid=TRUE)
sewage.length.df[i, ] <- c(line.length(sewage.prj[i, ], circles.prj), i)
}
sewage.length.df
dist2sewagedf <- data.frame("distance" = c(-NA),"lon" = c(-NA), "lat" = c(NA), "ID2" = c(NA))
pts.neigh.drain.sp
pts.neighb.sp <- SpatialPointsDataFrame(neighbcoord[, c("lon", "lat")],
data.frame(ID=seq(1:nrow(neighbcoord))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
dist2sewagedf <- data.frame("distance" = c(-NA),"lon" = c(-NA), "lat" = c(NA), "ID2" = c(NA))
for (i in 1:length(neighbcoord[ ,1])) {
dist2sewagedf[i, ] <- rbind(dist2Line(neighbcoord[i, c("lon", "lat")], sewage)) #coordinates of intersection
}
neighbcoord
neighbcoord[ ,1]
length(neighbcoord[ ,1])
1:length(neighbcoord)
length(neighbcoord)
1:NROW(neighbcoord)
1:length(neighbcoord ,1])
length(neighbcoord[ ,1])
pts.neigh.drain.sp$ID2
pts.neighb.sp <- SpatialPointsDataFrame(neighbcoord[, c("lon", "lat")],
data.frame(ID=seq(1:nrow(neighbcoord))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
dist2sewagedf <- data.frame("distance" = c(-NA),"lon" = c(-NA), "lat" = c(NA), "ID2" = c(NA))
for (i in 1:length(neighbcoord[ ,1])) {
dist2sewagedf[i, ] <- rbind(dist2Line(neighbcoord[i, c("lon", "lat")], sewage)) #coordinates of intersection
}
dist2sewagedf
pts.neigh.drain <- SpatialPointsDataFrame(dist2sewagedf.adj[c("lon", "lat")],
data.frame(ID=seq(1:nrow(dist2sewagedf.adj)), ID2 = dist2sewagedf.adj$ID2),
proj4string=CRS("+proj=longlat +datum=WGS84"))
pts.neigh.drain.sp <- spTransform(pts.neigh.drain, CRS( "+init=epsg:32630" ))
dist2sewagedf.adj <- dist2sewagedf %>% filter(!distance > 1500)
pts.neigh.drain <- SpatialPointsDataFrame(dist2sewagedf.adj[c("lon", "lat")],
data.frame(ID=seq(1:nrow(dist2sewagedf.adj)), ID2 = dist2sewagedf.adj$ID2),
proj4string=CRS("+proj=longlat +datum=WGS84"))
pts.neigh.drain.sp <- spTransform(pts.neigh.drain, CRS( "+init=epsg:32630" ))
pts.neigh.drain.sp$ID2 #intersect with which drain id
pts.neigh.drain.sp
sewage.length.df
p02 <- sewage.length.df %>% filter(drain == 1)
p02
p03 <- sewage.length.df %>% filter(drain == c(1, 2))
p03 <- sewage.length.df %>% filter(drain == 1 & 2)
p03
p03 <- sewage.length.df %>% filter(drain == 1 | 2)
p03
p03 <- sewage.length.df %>% filter(drain == 1 && 2)
p03 <- sewage.length.df %>% filter(drain %in% c(1, 2))
p04 <- sewage.length.df %>% filter(drain %in% c(1:3))
p13 <- sewage.length.df %>% filter(drain %in% c(1))
p17 <- sewage.length.df %>% filter(drain %in% c(1:4, 16))
p17
p02 <- sewage.length.df %>% filter(drain %in% c(1))
p01 <- sewage.length.df %>% filter(drain %in% c())
p01
View(p01)
ifelse(drain %in% c(28:31), 3, NA)
sewage.length.df$levels <- sewage.length.df %>% ifelse(drain %in% c(1:12), 1,
ifelse(drain %in% c(13:27), 2,
ifelse(drain %in% c(28:31), 3, NA)))
sewage.length.df$levels <- sewage.length.df %>% ifelse(., drain %in% c(1:12), 1,
ifelse(drain %in% c(13:27), 2,
ifelse(drain %in% c(28:31), 3, NA)))
sewage.length.df$levels <- sewage.length.df %>% ifelse(., drain %in% c(1:12), 1,
ifelse(., drain %in% c(13:27), 2,
ifelse(., drain %in% c(28:31), 3, NA)))
sewage.length.df$levels <- sewage.length.df %>% ifelse(drain == c(1:12), 1,
ifelse(drain == c(13:27), 2,
ifelse(drain == c(28:31), 3, NA)))
c(1:12)
sewage.length.df$levels <- sewage.length.df %>% ifelse(drain == c(1:12), 1, NA)
sewage.length.df$levels <- ifelse(sewage.length.df$drain == c(1:12), 1, NA)
sewage.length.df$levels <- ifelse(sewage.length.df$drain = c(1:12), 1, NA)
sewage.length.df$levels <- if(sewage.length.df$drain == c(1:12), 1, NA)
sewage.length.df$drain == c(1:12)
sewage.length.df$drain == c(1,12)
a <- c(1,2)
sewage.length.df$levels <- ifelse(sewage.length.df$drain == a, 1, NA)
sewage.length.df$drain
sewage.length.df$drain == 1
sewage.length.df$drain == 1:12
ifelse(sewage.length.df$drain == 1:12, 1, NA)
ifelse(sewage.length.df$drain == 1:12, 1,
ifelse(drain == 13:27, 2,
ifelse(drain == 28:31, 3, NA)))
sewage.length.df$levels <-
ifelse(sewage.length.df$drain == 1:12, 1,
ifelse(sewage.length.df$drain == 13:27, 2,
ifelse(sewage.length.df$drain == 28:31, 3, NA)))
sewage.length.df$drain
ifelse(sewage.length.df$drain == 1:12, 1,
ifelse(sewage.length.df$drain == 13:27, 2,
ifelse(sewage.length.df$drain == 28:31, 3, )))
ifelse(sewage.length.df$drain == 1:12, 1,
ifelse(sewage.length.df$drain == 13:27, 2,
ifelse(sewage.length.df$drain == 28:31, 3 )))
data.frame("drain"=c(1:12, 13:27))
data.frame("drain"=c(1:12, 13:27), "level"=c(1,2))
data.frame((1:12, 1), c(13:27,2))
data.frame( c(1:12, 1), c(13:27,2))
data.frame("drain"=c(1:12, 13:27, 28:31), "level"=c(rep(1,1:12),rep(2,13:27), rep(3,28:31))
sewage.length.df$levels <-
ifelse(sewage.length.df$drain == 1:12, 1,
ifelse(sewage.length.df$drain == 13:27, 2,
ifelse(sewage.length.df$drain == 28:31, 3, NA)))
################################################################################################################
# neighborhoods
pts.neighb.sp <- SpatialPointsDataFrame(neighbcoord[, c("lon", "lat")],
data.frame(ID=seq(1:nrow(neighbcoord))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
# distance to sewage (shortest way to line), ID2: feature line intersects with = drain id
dist2sewagedf <- data.frame("distance" = c(-NA),"lon" = c(-NA), "lat" = c(NA), "ID2" = c(NA))
#ID2 is the feature (drain part) it intersects with
for (i in 1:length(neighbcoord[ ,1])) {
dist2sewagedf[i, ] <- rbind(dist2Line(neighbcoord[i, c("lon", "lat")], sewage)) #coordinates of intersection
}
data.frame("drain"=c(1:12, 13:27, 28:31), "level"=c(rep(1,1:12),rep(2,13:27), rep(3,28:31)))
length(1:12))
length(1:12)
rep(1,length(1:12)
)
a <- c(1:12)
b <- c(13:27)
c <- c(28:31)
a <- c(1:12)
b <- c(13:27)
c <- c(28:31)
data.frame("drain"=c(a,b,c), "level"=c(rep(1,length(a)),rep(2,length(b)), rep(3,length(c))))
levels <- data.frame("drain"=c(a,b,c), "level"=c(rep(1,length(a)),rep(2,length(b)), rep(3,length(c))))
sewage.length.df <- left_join(sewage.length.df, levels, by="drain")
View(sewage.length.df)
sewage.length.df <- data.frame("length" = c(-NA), "drain" = c(NA))
for (i in 1:length(sewage.prj)){
d <- gDistance(pts.drain.int.prj[i, ], pts.drain.beg.prj[i, ]) #distance between beg and end point of drain
circles.prj <- gBuffer(pts.drain.int.prj[i,], width=d, byid=TRUE)
sewage.length.df[i, ] <- c(line.length(sewage.prj[i, ], circles.prj), i)
}
sewage.length.df
sewage.length.df <- left_join(sewage.length.df, levels, by="drain")
sewage.length.df
ifelse(sewage.length.df$drain == a, 1, 2)
ifelse(sewage.length.df$drain == a, 1, NA)
ifelse(sewage.length.df$drain == a, 1,
ifelse(sewage.length.df$drain == b, 2,
ifelse(sewage.length.df$drain == c, 3,NA)))
ifelse(sewage.length.df$drain == a, 1,
ifelse(sewage.length.df$drain == b, 2,
ifelse(sewage.length.df$drain == c, 3)))
ifelse(sewage.length.df$drain == a, 1,
ifelse(sewage.length.df$drain == b, 2,
ifelse(sewage.length.df$drain == c, 3, NA), NA), NA)
ifelse(sewage.length.df$drain == a, 1
ifelse(sewage.length.df$drain == b, 2
ifelse(sewage.length.df$drain == c, 3, NA), NA), NA)
ifelse(sewage.length.df$drain == a, 1
ifelse(sewage.length.df$drain == b, 2
ifelse(sewage.length.df$drain == c, 3, NA)))
ifelse(sewage.length.df$drain == a, "1",
ifelse(sewage.length.df$drain == b, "2",
ifelse(sewage.length.df$drain == c, "3", NA), NA), NA)
ifelse(sewage.length.df$drain == a, "1",
ifelse(sewage.length.df$drain == b, "2",
ifelse(sewage.length.df$drain == c, "3", NA)))
c(a,b,c)
sewage.length.df
ifelse(sewage.length.df$drain == a, "1",
ifelse(sewage.length.df$drain == b, "2",
ifelse(sewage.length.df$drain == c, "3", NA)))
ifelse(sewage.length.df$drain = a, "1",
ifelse(sewage.length.df$drain = b, "2",
ifelse(sewage.length.df$drain = c, "3", NA)))
sewage.length.df$drain
ifelse(sewage.length.df$drain == b, "2",NA)
ifelse(sewage.length.df$drain == 13:27, "2", NA)
13:27
ifelse(sewage.length.df$drain == c(13:27), "2", NA)
ifelse(sewage.length.df$drain  >=13| <27), "2", NA)
ifelse(sewage.length.df$drain  >=13 | <= 27), "2", NA)
ifelse(sewage.length.df$drain  >=13 || < 27), "2", NA)
ifelse(sewage.length.df$drain  >=13 & <= 27), "2", NA)
sewage.length.df %>% mutate(levels = case_when(.$drain == a, "1"))
sewage.length.df %>% mutate(levels = case_when(.$drain == <13, "1"))
sewage.length.df %>% mutate(levels = case_when(.$drain %in% a , "1"))
sewage.length.df %>% mutate(levels = case_when(.$drain %in% 12 , "1"))
sewage.length.df %>% mutate(levels = case_when(.$drain %in% 12 ~ "1"))
sewage.length.df %>% mutate(levels = case_when(.$drain %in% a ~ "1"))
sewage.length.df %>% mutate(levels = case_when(.$drain %in% a ~ "1",
.$drain %in% b ~ "2",
.$drain %in% c ~ "3"))
sewage.length.df <- data.frame("length" = c(-NA), "drain" = c(NA))
for (i in 1:length(sewage.prj)){
d <- gDistance(pts.drain.int.prj[i, ], pts.drain.beg.prj[i, ]) #distance between beg and end point of drain
circles.prj <- gBuffer(pts.drain.int.prj[i,], width=d, byid=TRUE)
sewage.length.df[i, ] <- c(line.length(sewage.prj[i, ], circles.prj), i)
}
sewage.length.df
sewage.length.df <- sewage.length.df %>% mutate(levels = case_when(.$drain %in% c(1:12) ~ "1",
.$drain %in% c(13:27) ~ "2",
.$drain %in% c(28:31) ~ "3"))
sewage.length.df
sewage.length.df
p01 <- sewage.length.df %>% filter(drain %in% c( ))
p02 <- sewage.length.df %>% filter(drain %in% c(1))
p02
sewage.length.df <- sewage.length.df %>% mutate(level = case_when(.$drain %in% c(1:12) ~ "1",
.$drain %in% c(13:27) ~ "2",
.$drain %in% c(28:31) ~ "3"))
sewage.length.df
sewage.length.df <- data.frame("length" = c(-NA), "drain" = c(NA))
for (i in 1:length(sewage.prj)){
d <- gDistance(pts.drain.int.prj[i, ], pts.drain.beg.prj[i, ]) #distance between beg and end point of drain
circles.prj <- gBuffer(pts.drain.int.prj[i,], width=d, byid=TRUE)
sewage.length.df[i, ] <- c(line.length(sewage.prj[i, ], circles.prj), i)
}
sewage.length.df <- sewage.length.df %>% mutate(level = case_when(.$drain %in% c(1:12) ~ "1",
.$drain %in% c(13:27) ~ "2",
.$drain %in% c(28:31) ~ "3"))
sewage.length.df
p01 <- sewage.length.df %>% filter(drain %in% c( ))
p02 <- sewage.length.df %>% filter(drain %in% c(1))
p02
p03 <- sewage.length.df %>% filter(drain %in% c(1:2))
p03
p04 <- sewage.length.df %>% filter(drain %in% c(1:3))
p05 <- sewage.length.df %>% filter(drain %in% c(1:4))
p06 <- sewage.length.df %>% filter(drain %in% c(1:5))
p07 <- sewage.length.df %>% filter(drain %in% c(1:6))
p08 <- sewage.length.df %>% filter(drain %in% c(1:7))
p09 <- sewage.length.df %>% filter(drain %in% c(1:8))
p10 <- sewage.length.df %>% filter(drain %in% c(1:9))
p11 <- sewage.length.df %>% filter(drain %in% c(1:10))
p12 <- sewage.length.df %>% filter(drain %in% c(1:11))
p13 <- sewage.length.df %>% filter(drain %in% c(1))
p14 <- sewage.length.df %>% filter(drain %in% c(1:2))
p15 <- sewage.length.df %>% filter(drain %in% c(1:3))
p16 <- sewage.length.df %>% filter(drain %in% c(1:4))
p17 <- sewage.length.df %>% filter(drain %in% c(1:4, 16))
p18 <- sewage.length.df %>% filter(drain %in% c(1:4, 16:17))
p19 <- sewage.length.df %>% filter(drain %in% c(1:4, 16:18))
p20 <- sewage.length.df %>% filter(drain %in% c(1:5))
p21 <- sewage.length.df %>% filter(drain %in% c(1:5, 20))
p22 <- sewage.length.df %>% filter(drain %in% c(1:6))
p23 <- sewage.length.df %>% filter(drain %in% c(1:7))
p24 <- sewage.length.df %>% filter(drain %in% c(1:8))
p25 <- sewage.length.df %>% filter(drain %in% c(1:9))
p26 <- sewage.length.df %>% filter(drain %in% c(1:10))
p27 <- sewage.length.df %>% filter(drain %in% c(1:11))
p28 <- sewage.length.df %>% filter(drain %in% c(1:5, 20))
p29 <- sewage.length.df %>% filter(drain %in% c(1:4, 16))
p30 <- sewage.length.df %>% filter(drain %in% c(1:4, 16:17))
p31 <- sewage.length.df %>% filter(drain %in% c(1:4, 16:18))
p31
sewage.length.df <- data.frame("length" = c(-NA), "drain" = c(NA))
for (i in 1:length(sewage.prj)){
d <- gDistance(pts.drain.int.prj[i, ], pts.drain.beg.prj[i, ]) #distance between beg and end point of drain
circles.prj <- gBuffer(pts.drain.int.prj[i,], width=d, byid=TRUE)
sewage.length.df[i, ] <- c(line.length(sewage.prj[i, ], circles.prj), i)
}
a <- c(1:12)
b <- c(13:27)
c <- c(28:31)
levels <- data.frame("drain"=c(a,b,c), "level"=c(rep(1,length(a)),rep(2,length(b)), rep(3,length(c))))
sewage.length.df <- left_join(sewage.length.df, levels, by="drain")
sewage.length.df
levels
sewage.length.df
sewage.length.df
dist2sewagedf <- data.frame("distance" = c(NA),"lon" = c(NA), "lat" = c(NA), "ID2" = c(NA))
for (i in 1:length(neighbcoord[ ,1])) {
dist2sewagedf[i, ] <- rbind(dist2Line(neighbcoord[i, c("lon", "lat")], sewage)) #coordinates of intersection
}
dist2sewagedf
dist2sewagedf[1,]
debugSource('H:/GitHub/accra_drains/accra_map_calc_github.R', echo=TRUE)
dist2sewagedf[1,]
dist2sewagedf$ID2[1, ]
dist2sewagedf$ID2[1]
testpoint <- dist2sewagedf$ID2[1]
pts.drain.int
filter(pts.drain.int$drain == testpoint)
filter(pts.drain.int, drain == testpoint)
pts.drain.int$drain == testpoint
pts.drain.int[pts.drain.int$drain, ] == testpoint
pts.drain.int[pts.drain.int$drain == testpoint, ]
sewage.part.length.df <- data.frame("length" = c(NA), "drain" = c(NA))
pts.drain.int.prj[testpoint, ]
pts.neigh.drain[1, ]
d <- gDistance(pts.drain.int.prj[14, ], pts.neigh.drain[1, ]) #d of beg and end point of drain
gDistance(pts.drain.int.prj[14, ], pts.neigh.drain.sp[1, ])
d <- gDistance(pts.drain.int.prj[14, ], pts.neigh.drain.sp[1, ]) #d of beg and end point of drain
circles.prj <- gBuffer(pts.drain.int.prj[14,], width=d, byid=TRUE)
sewage.part.length.df[1, ] <- c(line.length(sewage.prj[14, ], circles.prj), 1)
sewage.part.length.df
pts.neigh.drain.sp[1, ]
pts.drain.int.prj[14, ]
pts.drain.int[pts.drain.int$drain == testpoint, ]
dist2sewagedf$ID2[1]
sewage.part.length.df <- data.frame("length" = c(NA), "drain" = c(NA), "iteration" = c(NA))
for (i in 1:length(sewage.prj)){
d <- gDistance(pts.drain.int.prj[dist2sewagedf$ID2[i], ], pts.neigh.drain.sp[i, ]) #d of beg and end point of drain
circles.prj <- gBuffer(pts.drain.int.prj[dist2sewagedf$ID2[i],], width=d, byid=TRUE)
sewage.part.length.df[i, ] <- c(line.length(sewage.prj[dist2sewagedf$ID2[i], ], circles.prj), dist2sewagedf$ID2[i], i)
}
sewage.part.length.df
plot(sewage)
plot(sewage.prj)
dist2sewagedf$ID2[1]
points(dist2sewagedf[1,], add=T)
dist2sewagedf[1,]
points(dist2sewagedf[1,])
points(dist2sewagedf[1,], cex=1)
points(dist2sewagedf[1,], cex=1)
points(dist2sewagedf[1,], col="red", cex=1)
plot(sewage)
points(dist2sewagedf[1,], col="red", cex=1)
dist2sewagedf
pts.neigh.drain.sp
points(pts.neigh.drain.sp[1,], col="red", cex=1)
points(pts.neigh.drain.sp, col="red", cex=1)
plot(sewage, col = "blue", axes=TRUE)
points(pts.neigh.drain.sp, col="red", cex=1)
plot(sewage, col = "blue", axes=TRUE)
points(pts.neighb.sp, col="red", cex=1)
points(pts.neigh.drain, col="red", cex=1)
points(pts.neigh.drain, col="orange", cex=1)
points(pts.neigh.drain[1,], col="orange", cex=1)
plot(sewage, col = "blue", axes=TRUE)
points(pts.neigh.drain[1,], col="orange", cex=1)
pts.neigh.drain[1,]
sewage.part.length.df
sewage.part.length.df <- left_join(sewage.part.length.df, drain.levels, by="drain")
a <- c(1:12)
b <- c(13:27)
c <- c(28:31)
drain.levels <- data.frame("drain"=c(a,b,c),
"level"=c(rep(1,length(a)),rep(2,length(b)), rep(3,length(c))))
sewage.part.length.df <- left_join(sewage.part.length.df, drain.levels, by="drain")
sewage.part.length.df
sewage.part.length.df[1, ]
nr <- sewage.part.length.df$drain[1]
paste0("p", nr)
name <- paste0("p", nr)
data.frame[[name]]
deparse(name)
parse(name)
eval(parse(name))
get(name)
sewage.part.length.df[1]
sewage.part.length.df[1,]
sewage.part.length.df$iteration <- NULL
sewage.part.length.df[1,]
get(name)
rbind(get(name), sewage.part.length.df[1,])
sewage.part.length.df
nr=1
name <- paste0("p", nr)
sewage.t.length.df <- rbind(get(name), sewage.part.length.df[1, ])
01:length(sewage.part.length.df)
sewage.part.length.df
01:length(sewage.part.length.df[, 1])
paste0("p", str_pad(n, 2, pad = "0"))
library(stringr)
name <- paste0("p", str_pad(n, 2, pad = "0"))
paste0("p", str_pad(n, 2, pad = "0"))
name <- sprintf("%02d",nr)
i=2
nr <- sewage.part.length.df$drain[i]
sewage.part.length.df
name <- sprintf("%02d",nr)
name <- paste0(p, sprintf("%02d", nr))
name <- paste0("p", sprintf("%02d", nr))
sewage.t.length.df <- rbind(get(name), sewage.part.length.df[i, ])
sewage.t.length.df$iteration <- i
sewage.t.length.df
df <- data.frame(matrix(NA, nrow=1, ncol=4))
df <- rbind(df, sewage.t.length.df)
df <- data.frame(matrix(NA, nrow=1, ncol=4))
df <- rbind(df, sewage.t.length.df)
colnames(sewage.t.length.df)
colnames(df) <- c("length", "drain", "level", "iteration")
df <- rbind(df, sewage.t.length.df)
i=3
nr <- sewage.part.length.df$drain[i]
name <- paste0("p", sprintf("%02d", nr))
sewage.t.length.df <- rbind(get(name), sewage.part.length.df[i, ])
sewage.t.length.df$iteration <- i
sewage.t.length.df
df <- rbind(df, sewage.t.length.df)
View(df)
sewage.part.length.df$iteration <- NULL
df <- data.frame(matrix(nrow=1, ncol=4))
colnames(df) <- c("length", "drain", "level", "iteration")
sewage.part.length.df
for (i in 1:length(sewage.part.length.df[, 1])){
nr <- sewage.part.length.df$drain[i]
name <- paste0("p", sprintf("%02d", nr))
sewage.t.length.df <- rbind(get(name), sewage.part.length.df[i, ])
sewage.t.length.df$iteration <- i
df <- rbind(df, sewage.t.length.df)
}
df
View(df)
df <- data.frame("length"=c(NA), "drain"=c(NA), "level"=c(NA), "iteration"=c(NA))
for (i in 1:length(sewage.part.length.df[, 1])){
nr <- sewage.part.length.df$drain[i]
name <- paste0("p", sprintf("%02d", nr))
sewage.t.length.df <- rbind(get(name), sewage.part.length.df[i, ])
sewage.t.length.df$iteration <- i
df <- rbind(df, sewage.t.length.df)
}
df
View(df)
df %>% group_by(iteration) %>% sum(lengt)
df %>% group_by(iteration) %>% sum(length)
View(df)
df <- data.frame("length"=c(), "drain"=c(), "level"=c(), "iteration"=c())
for (i in 1:length(sewage.part.length.df[, 1])){
nr <- sewage.part.length.df$drain[i]
name <- paste0("p", sprintf("%02d", nr))
sewage.t.length.df <- rbind(get(name), sewage.part.length.df[i, ])
sewage.t.length.df$iteration <- i
df <- rbind(df, sewage.t.length.df)
}
View(df)
df %>% group_by(iteration) %>% sum(length)
df %>% group_by(iteration) %>% summarise_each(length)
df %>% group_by(iteration) %>% summarise(length)
df %>% group_by(iteration) %>% summarise(., length)
df %>% group_by(iteration) %>% summarise_each(length=sum(length))
df %>% group_by(iteration) %>% summarise(length=sum(length))
df
sewage.part.length.df
pts.neigh.drain
dist2sewage
dist2sewagedf
testpoint <- dist2sewagedf$ID2[18] #14
pts.drain.int[pts.drain.int$drain == testpoint, ]
plot(sewage, col = "blue", axes=TRUE)
points(pts.neigh.drain[18,], col="orange", cex=1)
View(df)
df %>% group_by(iteration) %>% summarise(length=sum(length))
df1 <- df %>% group_by(iteration) %>% summarise(length=sum(length))
View(df1)
