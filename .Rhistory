mswabdefec_lncon, data = modeling2)
summary(fit)
View(swabdef)
library(waffle)
library(extrafont)
install.packages("Rttf2pt1")
install.packages("Rttf2pt1")
install.packages("Rttf2pt1")
install.packages("Rttf2pt1")
library(extrafont)
waffle(parts/10, rows=3, colors=c("#969696", "#1879bf", "#009bda"),
use_glyph="medkit", size=8)
library(waffle)
library(extrafont)
waffle(parts/10, rows=3, colors=c("#969696", "#1879bf", "#009bda"),
use_glyph="medkit", size=8)
parts <- c(`Un-breached\nUS Population`=(318-11-79), `Premera`=11, `Anthem`=79)
waffle(parts/10, rows=3, colors=c("#969696", "#1879bf", "#009bda"),
use_glyph="medkit", size=8)
fit <- lm(hrec_lncon ~ neighbor + hr_sex + mpartec_lncon + mwaterec_lncon +
mswabec_lncon, data = modeling2)
summary(fit)
fit <- lm(hrec_lncon ~ neighbor + hr_sex  + mswabdefec_lncon, data = modeling2)
summary(fit)
fit <- lm(hrec_lncon ~ neighbor + hr_sex  + mswabdef1ec_lncon, data = modeling2)
summary(fit)
fit <- lm(hrec_lncon ~ neighbor + hr_sex + mpartec_lncon + mwaterec_lncon +
mswabec_lncon, data = modeling2)
summary(fit)
modeling22 <- modeling2[complete.cases(modeling2$mswabdefec_lncon), ]
View(modeling22)
fit <- lm(hrec_lncon ~ neighbor + hr_sex  + mswabdefec_lncon, data = modeling2)
summary(fit)
fit <- lm(hrec_lncon ~ neighbor + hr_sex  + mswabdef1ec_lncon, data = modeling2)
summary(fit)
View(swabdef1)
View(swabdef)
fit <- glm(hrec_lncon ~ neighbor + hr_sex  + mswabdefec_lncon, data = modeling2)
summary(fit)
fit <- gmm(hrec_lncon ~ neighbor + hr_sex  + mswabdefec_lncon, data = modeling2)
df.envir$ec_conc_adj <- df.envir$ec_conc/df.envir$sw_area
View(df.envir)
df.envir$ec_lnconc_adj <- ln(df.envir$ec_conc_adj)
df.envir$ec_lnconc_adj <- log10(df.envir$ec_conc_adj)
View(df.envir)
df.envir$ec_conc_adj <- (df.envir$ec_conc/df.envir$sw_area) * 100
df.envir$ec_lnconc_adj <- log10(df.envir$ec_conc_adj)
df.envir <- read.xlsx("C:/users/wmairin/Downloads/handrinse.xlsx", 1)
hr <- df.envir %>%  filter(samtype == 8) %>% select(locid, hrec_conc_adj = ec_conc_adj, environ, neighbor, hr_sex, hr_agecat) %>% subset(!is.na(locid))
part <- df.envir %>%  filter(samtype == 2) %>% select(locid, partec_conc_adj = ec_conc_adj) %>% subset(!is.na(locid))
water <- df.envir %>%  filter(samtype == 4) %>% select(locid, waterec_conc_adj = ec_conc_adj) %>% subset(!is.na(locid))
View(df.envir)
df.envir$ec_conc_adj <- (df.envir$ec_conc/df.envir$sw_area)
hr <- df.envir %>%  filter(samtype == 8) %>% select(locid, hrec_conc_adj = ec_conc_adj, environ, neighbor, hr_sex, hr_agecat) %>% subset(!is.na(locid))
part <- df.envir %>%  filter(samtype == 2) %>% select(locid, partec_conc_adj = ec_conc_adj) %>% subset(!is.na(locid))
water <- df.envir %>%  filter(samtype == 4) %>% select(locid, waterec_conc_adj = ec_conc_adj) %>% subset(!is.na(locid))
swab <- df.envir %>%  filter(samtype == 9) %>% select(locid, swabec_conc_adj = ec_conc_adj) %>% subset(!is.na(locid))
swabirreg <- df.envir %>%  filter(samtype == 9 & sw_av == 1) %>% select(locid, swabirregec_conc_adj = ec_conc_adj) %>% subset(!is.na(locid))
swabreg <- df.envir %>%  filter(samtype == 9 & sw_av == 0) %>% select(locid, swabregec_conc_adj = ec_conc_adj) %>% subset(!is.na(locid))
swabdef <- df.envir %>%  filter(samtype == 9 & sw_def == 1) %>% select(locid, swabdefec_conc_adj = ec_conc_adj) %>% subset(!is.na(locid))
swabdef1 <- df.envir %>%  filter(samtype == 9 & sw_def == 0) %>% select(locid, swabdef1ec_conc_adj = ec_conc_adj) %>% subset(!is.na(locid))
mpart <- part %>% group_by(locid) %>% summarise_each(funs(mpartec_conc_adj = mean(., na.rm=TRUE)))
mwater <- water %>% group_by(locid) %>% summarise_each(funs(mwaterec_conc_adj = mean(., na.rm=TRUE)))
mswab <- swab %>% group_by(locid) %>% summarise_each(funs(mswabec_conc_adj = mean(., na.rm=TRUE)))
mswabirreg <- swabirreg %>% group_by(locid) %>% summarise_each(funs(mswabirregec_conc_adj = mean(., na.rm=TRUE)))
mswabreg <- swabreg %>% group_by(locid) %>% summarise_each(funs(mswabregec_conc_adj = mean(., na.rm=TRUE)))
mswabdef <- swabdef %>% group_by(locid) %>% summarise_each(funs(mswabdefec_conc_adj = mean(., na.rm=TRUE)))
mswabdef1 <- swabdef1 %>% group_by(locid) %>% summarise_each(funs(mswabdef1ec_conc_adj = mean(., na.rm=TRUE)))
modeling2 <- full_join(hr, mpart, by = "locid")
modeling2 <- full_join(modeling2, mwater, by = "locid")
modeling2 <- full_join(modeling2, mswab, by = "locid")
modeling2 <- full_join(modeling2, mswabirreg, by = "locid")
modeling2 <- full_join(modeling2, mswabreg, by = "locid")
modeling2 <- full_join(modeling2, mswabdef, by = "locid")
modeling2 <- full_join(modeling2, mswabdef1, by = "locid")
fit <- gmm(hrec_conc_adj ~ neighbor + hr_sex  + mswabdefec_conc_adj, data = modeling2)
fit <- lm(hrec_conc_adj ~ neighbor + hr_sex  + mswabdefec_conc_adj, data = modeling2)
View(df.envir)
fit <- lm(hrec_lncon ~ neighbor + hr_sex + mpartec_lncon + mwaterec_lncon +
mswabec_lncon, data = modeling2)
hr <- df.envir %>%  filter(samtype == 8) %>% select(locid, hrec_lncon = ec_lncon, environ, neighbor, hr_sex, hr_agecat) %>% subset(!is.na(locid))
part <- df.envir %>%  filter(samtype == 2) %>% select(locid, partec_lncon = ec_lncon) %>% subset(!is.na(locid))
water <- df.envir %>%  filter(samtype == 4) %>% select(locid, waterec_lncon = ec_lncon) %>% subset(!is.na(locid))
swab <- df.envir %>%  filter(samtype == 9) %>% select(locid, swabec_lncon = ec_lncon) %>% subset(!is.na(locid))
swabirreg <- df.envir %>%  filter(samtype == 9 & sw_av == 1) %>% select(locid, swabirregec_lncon = ec_lncon) %>% subset(!is.na(locid))
swabreg <- df.envir %>%  filter(samtype == 9 & sw_av == 0) %>% select(locid, swabregec_lncon = ec_lncon) %>% subset(!is.na(locid))
swabdef <- df.envir %>%  filter(samtype == 9 & sw_def == 1) %>% select(locid, swabdefec_lncon = ec_lncon) %>% subset(!is.na(locid))
swabdef1 <- df.envir %>%  filter(samtype == 9 & sw_def == 0) %>% select(locid, swabdef1ec_lncon = ec_lncon) %>% subset(!is.na(locid))
mpart <- part %>% group_by(locid) %>% summarise_each(funs(mpartec_lncon = mean(., na.rm=TRUE)))
mwater <- water %>% group_by(locid) %>% summarise_each(funs(mwaterec_lncon = mean(., na.rm=TRUE)))
mswab <- swab %>% group_by(locid) %>% summarise_each(funs(mswabec_lncon = mean(., na.rm=TRUE)))
mswabirreg <- swabirreg %>% group_by(locid) %>% summarise_each(funs(mswabirregec_lncon = mean(., na.rm=TRUE)))
mswabreg <- swabreg %>% group_by(locid) %>% summarise_each(funs(mswabregec_lncon = mean(., na.rm=TRUE)))
mswabdef <- swabdef %>% group_by(locid) %>% summarise_each(funs(mswabdefec_lncon = mean(., na.rm=TRUE)))
mswabdef1 <- swabdef1 %>% group_by(locid) %>% summarise_each(funs(mswabdef1ec_lncon = mean(., na.rm=TRUE)))
modeling2 <- full_join(hr, mpart, by = "locid")
modeling2 <- full_join(modeling2, mwater, by = "locid")
modeling2 <- full_join(modeling2, mswab, by = "locid")
modeling2 <- full_join(modeling2, mswabirreg, by = "locid")
modeling2 <- full_join(modeling2, mswabreg, by = "locid")
modeling2 <- full_join(modeling2, mswabdef, by = "locid")
modeling2 <- full_join(modeling2, mswabdef1, by = "locid")
fit <- lm(hrec_lncon ~ neighbor + hr_sex + mpartec_lncon + mwaterec_lncon +
mswabec_lncon, data = modeling2)
summary(fit)
hr <- df.envir %>%  filter(samtype == 8) %>% select(locid, hrec_lncon = ec_conc_adj, environ, neighbor, hr_sex, hr_agecat) %>% subset(!is.na(locid))
hr <- df.envir %>%  filter(samtype == 8) %>% select(locid, hrec_conc_adj = ec_conc_adj, environ, neighbor, hr_sex, hr_agecat) %>% subset(!is.na(locid))
part <- df.envir %>%  filter(samtype == 2) %>% select(locid, partec_conc_adj = ec_conc_adj) %>% subset(!is.na(locid))
swab <- df.envir %>%  filter(samtype == 9) %>% select(locid, swabec_conc_adj = ec_conc_adj) %>% subset(!is.na(locid))
swabirreg <- df.envir %>%  filter(samtype == 9 & sw_av == 1) %>% select(locid, swabirregec_conc_adj = ec_conc_adj) %>% subset(!is.na(locid))
water <- df.envir %>%  filter(samtype == 4) %>% select(locid, waterec_conc_adj = ec_conc_adj) %>% subset(!is.na(locid))
swabreg <- df.envir %>%  filter(samtype == 9 & sw_av == 0) %>% select(locid, swabregec_conc_adj = ec_conc_adj) %>% subset(!is.na(locid))
swabdef <- df.envir %>%  filter(samtype == 9 & sw_def == 1) %>% select(locid, swabdefec_conc_adj = ec_conc_adj) %>% subset(!is.na(locid))
swabdef1 <- df.envir %>%  filter(samtype == 9 & sw_def == 0) %>% select(locid, swabdef1ec_conc_adj = ec_conc_adj) %>% subset(!is.na(locid))
mpart <- part %>% group_by(locid) %>% summarise_each(funs(mpartec_conc_adj = mean(., na.rm=TRUE)))
mwater <- water %>% group_by(locid) %>% summarise_each(funs(mwaterec_conc_adj = mean(., na.rm=TRUE)))
mswab <- swab %>% group_by(locid) %>% summarise_each(funs(mswabec_conc_adj = mean(., na.rm=TRUE)))
mswabirreg <- swabirreg %>% group_by(locid) %>% summarise_each(funs(mswabirregec_conc_adj = mean(., na.rm=TRUE)))
mswabreg <- swabreg %>% group_by(locid) %>% summarise_each(funs(mswabregec_conc_adj = mean(., na.rm=TRUE)))
mswabdef <- swabdef %>% group_by(locid) %>% summarise_each(funs(mswabdefec_conc_adj = mean(., na.rm=TRUE)))
mswabdef1 <- swabdef1 %>% group_by(locid) %>% summarise_each(funs(mswabdef1ec_conc_adj = mean(., na.rm=TRUE)))
modeling2 <- full_join(hr, mpart, by = "locid")
modeling2 <- full_join(modeling2, mwater, by = "locid")
modeling2 <- full_join(modeling2, mswab, by = "locid")
modeling2 <- full_join(modeling2, mswabirreg, by = "locid")
modeling2 <- full_join(modeling2, mswabreg, by = "locid")
modeling2 <- full_join(modeling2, mswabdef, by = "locid")
modeling2 <- full_join(modeling2, mswabdef1, by = "locid")
View(modeling2)
df.envir <- read.xlsx("C:/users/wmairin/Downloads/handrinse.xlsx", 1)
swab <- df.envir %>%  filter(samtype == 9) %>%
mutate(ec_conc_adj = ec_conc/sw_area)
View(swab)
swab <- df.envir %>%  filter(samtype == 9) %>%
mutate(ec_conc_adj = ec_conc/sw_area) %>%
select(locid, swabec_lncon = ec_lncon) %>% subset(!is.na(locid))
View(swab)
hr <- df.envir %>%  filter(samtype == 8) %>% select(locid, hrec_lncon = ec_conc_adj, environ, neighbor, hr_sex, hr_agecat) %>% subset(!is.na(locid))
part <- df.envir %>%  filter(samtype == 2) %>% select(locid, partec_lncon = ec_conc_adj) %>% subset(!is.na(locid))
hr <- df.envir %>%  filter(samtype == 8) %>% select(locid, hrec_lncon = ec_lncon, environ, neighbor, hr_sex, hr_agecat) %>% subset(!is.na(locid))
part <- df.envir %>%  filter(samtype == 2) %>% select(locid, partec_lncon = ec_lncon) %>% subset(!is.na(locid))
water <- df.envir %>%  filter(samtype == 4) %>% select(locid, waterec_lncon = ec_lncon) %>% subset(!is.na(locid))
swab <- df.envir %>%  filter(samtype == 9) %>%
mutate(ec_conc_adj = ec_conc/sw_area) %>%
select(locid, swabec_lncon = ec_conc_adj) %>% subset(!is.na(locid))
mpart <- part %>% group_by(locid) %>% summarise_each(funs(mpartec_lncon = mean(., na.rm=TRUE)))
mwater <- water %>% group_by(locid) %>% summarise_each(funs(mwaterec_lncon = mean(., na.rm=TRUE)))
mswab <- swab %>% group_by(locid) %>% summarise_each(funs(mswabec_lncon = mean(., na.rm=TRUE)))
modeling2 <- full_join(hr, mpart, by = "locid")
modeling2 <- full_join(modeling2, mwater, by = "locid")
modeling2 <- full_join(modeling2, mswab, by = "locid")
fit <- lm(hrec_lncon ~ neighbor + hr_sex + mpartec_lncon + mwaterec_lncon +
mswabec_lncon, data = modeling22)
fit <- lm(hrec_lncon ~ neighbor + hr_sex + mpartec_lncon + mwaterec_lncon +
mswabec_lncon, data = modeling2)
summary(fit)
View(modeling2)
fit <- lm(hrec_lncon ~ neighbor + mswabec_lncon, data = modeling22)
summary(fit)
fit <- lm(hrec_lncon ~ neighbor + mswabec_lncon, data = modeling2)
summary(fit)
fit <- lm(hrec_lncon ~ mswabec_lncon, data = modeling2)
summary(fit)
swab <- df.envir %>%  filter(samtype == 9) %>%
mutate(ec_conc_adj = (ec_conc/sw_area)*100) %>%
select(locid, swabec_lncon = ec_conc_adj) %>% subset(!is.na(locid))
mpart <- part %>% group_by(locid) %>% summarise_each(funs(mpartec_lncon = mean(., na.rm=TRUE)))
mwater <- water %>% group_by(locid) %>% summarise_each(funs(mwaterec_lncon = mean(., na.rm=TRUE)))
mswab <- swab %>% group_by(locid) %>% summarise_each(funs(mswabec_lncon = mean(., na.rm=TRUE)))
modeling2 <- full_join(hr, mpart, by = "locid")
modeling2 <- full_join(modeling2, mwater, by = "locid")
modeling2 <- full_join(modeling2, mswab, by = "locid")
fit <- lm(hrec_lncon ~ neighbor + hr_sex + mpartec_lncon + mwaterec_lncon +
mswabec_lncon, data = modeling2)
summary(fit)
fit <- lm(hrec_lncon ~ neighbor + mswabec_lncon, data = modeling2)
summary(fit)
swab <- df.envir %>%  filter(samtype == 9) %>%
mutate(ec_conc_adj = ec_conc/sw_area) %>%
select(locid, swabec_lncon = ec_conc_adj) %>% subset(!is.na(locid))
mpart <- part %>% group_by(locid) %>% summarise_each(funs(mpartec_lncon = mean(., na.rm=TRUE)))
mwater <- water %>% group_by(locid) %>% summarise_each(funs(mwaterec_lncon = mean(., na.rm=TRUE)))
mswab <- swab %>% group_by(locid) %>% summarise_each(funs(mswabec_lncon = mean(., na.rm=TRUE)))
modeling2 <- full_join(hr, mpart, by = "locid")
modeling2 <- full_join(modeling2, mwater, by = "locid")
modeling2 <- full_join(modeling2, mswab, by = "locid")
fit <- lm(hrec_lncon ~ neighbor + hr_sex + mpartec_lncon + mwaterec_lncon +
mswabec_lncon, data = modeling2)
summary(fit)
fit <- lm(hrec_lncon ~ neighbor + hr_sex + mswabec_lncon, data = modeling2)
summary(fit)
fit <- lm(hrec_lncon ~ neighbor + mswabec_lncon, data = modeling2)
summary(fit)
View(df.envir)
library(dplyr)
library(xlsx)
df.envir <- read.xlsx("C:/users/wmairin/Downloads/handrinse.xlsx", 1)
hr <- df.envir %>%  filter(samtype == 8) %>% select(locid, hrec_lncon = ec_lncon, environ, neighbor, hr_sex, hr_agecat) %>% subset(!is.na(locid))
part <- df.envir %>%  filter(samtype == 2) %>% select(locid, partec_lncon = ec_lncon) %>% subset(!is.na(locid))
water <- df.envir %>%  filter(samtype == 4) %>% select(locid, waterec_lncon = ec_lncon) %>% subset(!is.na(locid))
swab <- df.envir %>%  filter(samtype == 9) %>%
mutate(ec_conc_adj = ec_conc/sw_area) %>%
select(locid, swabec_lncon = ec_conc_adj) %>% subset(!is.na(locid))
mpart <- part %>% group_by(locid) %>% summarise_each(funs(mpartec_lncon = mean(., na.rm=TRUE)))
mwater <- water %>% group_by(locid) %>% summarise_each(funs(mwaterec_lncon = mean(., na.rm=TRUE)))
mswab <- swab %>% group_by(locid) %>% summarise_each(funs(mswabec_lncon = mean(., na.rm=TRUE)))
View(mswab)
hr <- df.envir %>%  filter(samtype == 8) %>% select(locid, hrec_lncon = ec_lncon, environ, neighbor, hr_sex, hr_agecat) %>% subset(!is.na(locid))
part <- df.envir %>%  filter(samtype == 2) %>% select(locid, partec_lncon = ec_lncon) %>% subset(!is.na(locid))
water <- df.envir %>%  filter(samtype == 4) %>% select(locid, waterec_lncon = ec_lncon) %>% subset(!is.na(locid))
swab <- df.envir %>%  filter(samtype == 9) %>%
mutate(ec_conc_adj = ec_conc/sw_area) %>%
select(locid, swabec_lncon = ec_conc_adj) %>% subset(!is.na(locid))
mpart <- part %>% group_by(locid) %>% summarise_each(funs(mpartec_lncon = mean(., na.rm=TRUE)))
mwater <- water %>% group_by(locid) %>% summarise_each(funs(mwaterec_lncon = mean(., na.rm=TRUE)))
mswab <- swab %>% group_by(locid) %>% summarise_each(funs(mswabec_con = mean(., na.rm=TRUE)))
modeling2 <- full_join(hr, mpart, by = "locid")
modeling2 <- full_join(modeling2, mwater, by = "locid")
modeling2 <- full_join(modeling2, mswab, by = "locid")
View(modeling2)
hr <- df.envir %>%  filter(samtype == 8) %>% select(locid, hrec_con = ec_con, environ, neighbor, hr_sex, hr_agecat) %>% subset(!is.na(locid))
hr <- df.envir %>%  filter(samtype == 8) %>% select(locid, hrec_conc = ec_conc, environ, neighbor, hr_sex, hr_agecat) %>% subset(!is.na(locid))
hr <- df.envir %>%  filter(samtype == 8) %>% select(locid, hrec_conc = ec_conc, environ, neighbor, hr_sex, hr_agecat) %>% subset(!is.na(locid))
part <- df.envir %>%  filter(samtype == 2) %>% select(locid, partec_conc = ec_conc) %>% subset(!is.na(locid))
water <- df.envir %>%  filter(samtype == 4) %>% select(locid, waterec_conc = ec_conc) %>% subset(!is.na(locid))
swab <- df.envir %>%  filter(samtype == 9) %>%
mutate(ec_conc_adj = ec_conc/sw_area) %>%
select(locid, swabec_conc = ec_conc_adj) %>% subset(!is.na(locid))
mpart <- part %>% group_by(locid) %>% summarise_each(funs(mpartec_conc = mean(., na.rm=TRUE)))
mwater <- water %>% group_by(locid) %>% summarise_each(funs(mwaterec_conc = mean(., na.rm=TRUE)))
mswab <- swab %>% group_by(locid) %>% summarise_each(funs(mswabec_conc = mean(., na.rm=TRUE)))
modeling2 <- full_join(hr, mpart, by = "locid")
modeling2 <- full_join(modeling2, mwater, by = "locid")
modeling2 <- full_join(modeling2, mswab, by = "locid")
modeling2$hrec_conc
fit <- lm(hrec_lncon ~ neighbor + hr_sex + mpartec_lncon + mwaterec_lncon +
mswabec_lncon, data = modeling2)
fit <- lm(hrec_conc ~ neighbor + hr_sex + mpartec_conc + mwaterec_conc +
mswabec_conc, data = modeling2)
summary(fit)
version()
version
fit <- lm(hrec_conc ~ neighbor + hr_sex + mpartec_conc + mwaterec_conc +
mswabec_conc, data = modeling2)
summary(fit)
install.packages("benchmarkme")
library(benchmarkme)
install.packages("benchmarkmeData")
install.packages("benchmarkme")
install.packages("benchmarkme")
install.packages("benchmarkme")
library(benchmarkme)
res <- benchmark_io(runs = 1, size = 5)
fit <- lm(hrec_conc ~ neighbor + hr_sex + mpartec_conc + mwaterec_conc +
mswabec_conc, data = modeling2)
summary(fit)
fit <- lm(hrec_conc ~ neighbor + hr_sex + mswabec_conc, data = modeling2)
summary(fit)
fit <- lm(hrec_conc ~ neighbor + mswabec_conc, data = modeling2)
summary(fit)
fit <- lm(hrec_conc ~ neighbor + hr_sex + mpartec_conc + mwaterec_conc +
mswabec_conc, data = modeling2)
summary(fit)
View(modeling2)
fit <- lm(hrec_conc ~ neighbor + hr_sex + mpartec_conc + mwaterec_conc +
mswabec_conc, data = modeling2)
summary(fit)
fit <- lm(hrec_conc ~ neighbor + hr_sex + mswabec_conc, data = modeling2)
summary(fit)
fit <- lm(hrec_conc ~ neighbor + mswabec_conc, data = modeling2)
summary(fit)
View(modeling2)
fit <- glm(hrec_conc ~ neighbor + hr_sex + mpartec_conc + mwaterec_conc +
mswabec_conc, data = modeling2)
summary(fit)
View(modeling2)
install.packages("rgdal")
setwd("H:\Work\accra_ghana_neighborhoods\accra_shapefiles_individual")
library(rgdal)
setwd("H:\Work\accra_ghana_neighborhoods\accra_shapefiles_individual")
neighb <- readOGR(".","abbossey_okai")
library("rgdal", lib.loc="~/R/R-3.4.0/library")
detach("package:rgdal", unload=TRUE)
library("rgdal", lib.loc="~/R/R-3.4.0/library")
install.packages("sp")
install.packages("sp")
library(rgdal)
setwd("H:\Work\accra_ghana_neighborhoods\accra_shapefiles_individual")
neighb <- readOGR(".","abbossey_okai")
neighb <- readOGR(dsn = getwd(), laye r= "abbossey_okai")
neighb <- readOGR(dsn = getwd(), layer= "abbossey_okai")
library(raster)
install.packages("raster")
library(raster)
setwd("H:\Work\accra_ghana_neighborhoods\accra_shapefiles_individual")
neighb <- readOGR(dsn = getwd(), layer= "abbossey_okai")
paste0(getwd(), "abbossey_okai.shp")
setwd("H:\Work\accra_ghana_neighborhoods\accra_shapefiles_individual\")
neighb <- readOGR(dsn = getwd(), layer= "abbossey_okai")
neighb <- shapefile(paste0(getwd(), "abbossey_okai.shp"))
setwd("H:\Work\accra_ghana_neighborhoods\accra_shapefiles_individual\")
neighb <- readOGR(dsn = getwd(), layer= "abbossey_okai")
neighb <- shapefile(paste0(getwd(), "abbossey_okai.shp"))
setwd("H:\Work\accra_ghana_neighborhoods\accra_shapefiles_individual")
setwd("H:\Work\accra_ghana_neighborhoods\accra_shapefiles_individual")
neighb <- shapefile("H:\Work\accra_ghana_neighborhoods\accra_shapefiles_individual\abbossey_okai.shp")
setwd("H:\Work\accra_ghana_neighborhoods\accra_shapefiles_individual")
detach("package:raster", unload=TRUE)
setwd("H:\Work\accra_ghana_neighborhoods\accra_shapefiles_individual")
glimpse_colors <- function(colors_string){
n <- length(colors_string)
hist(1:n, breaks = 0:n, col = colors_string)
}
library(RColorBrewer)
pal <- brewer.pal(n = 9, name = 'BrBG')
glimpse_colors(pal)
pal <- brewer.pal(n = 19, name = 'BrBG')
glimpse_colors(pal)
pal
pal <- brewer.pal(n = 19, name = 'PiYG')
pal <- brewer.pal(n = 19, name = ' PRGn')
pal <- brewer.pal(n = 19, name = ' BrBG')
pal <- brewer.pal(n = 19, name = 'PRGn')
pal <- brewer.pal(n = 19, name = 'PiYG')
glimpse_colors(pal)
pal <- brewer.pal(n = 19, name = 'BrBG')
glimpse_colors(pal)
pal <- brewer.pal(n = 11, name = 'BrBG')
glimpse_colors(pal)
n <- length(colors_string)
hist(1:n, breaks = 0:n, col = colors_string)
glimpse_colors <- function(colors_string){
n <- length(colors_string)
hist(1:n, breaks = 0:n, col = colors_string)
}
library(RColorBrewer)
pal <- brewer.pal(n = 11, name = 'PuOr')
glimpse_colors(pal)
packages <- c("dplyr", "rgdal", "raster", "rgeos", "geosphere", "deSolve")
lapply(packages, library, character.only = TRUE)
setwd("H:/GitHub/accra_drains/")
sewage <- spTransform(sewage, CRS("+proj=longlat +datum=WGS84"))
sewage <- shapefile(paste0(getwd(), "/shapefiles/waterways/", "accra_waterw_con_ed_level_4.shp"))
sewage <- sewage[order(sewage@data$id2), ]
sewage.prj <- spTransform(sewage, CRS("+init=epsg:32630"))
neighbcoord <- read.csv(paste0(getwd(), "/data/", "points_coordinates_output.csv"), sep = ",")
neighb <- read.csv(paste0(getwd(), "/data/", "neighborhoods_all_clean.csv"), sep = ",")
source(paste0(getwd(), "/", "01_helper_functions.R"))
source(paste0(getwd(), "/", "02_calc_options.R"))
source(paste0(getwd(), "/", "03_length_calc.R"))
df <- point2end(neighbcoord)
df <- df[with(df, order(iteration, -drain)), ]
write.csv(df, paste0(getwd(), "/data/", "drains_order.csv"), row.names = F)
source(paste0(getwd(), "/", "04_endemic_model.R"))
sewage <- shapefile(paste0(getwd(), "/shapefiles/waterways/", "accra_waterw_con_ed_level_4.shp"))
sewage <- spTransform(sewage, CRS("+proj=longlat +datum=WGS84"))
sewage <- sewage[order(sewage@data$id2), ]
sewage.prj <- spTransform(sewage, CRS("+init=epsg:32630"))
neighb <- read.csv(paste0(getwd(), "/data/", "neighborhoods_all_clean.csv"), sep = ",")
neighbcoord <- read.csv(paste0(getwd(), "/data/", "points_coordinates_output.csv"), sep = ",")
source(paste0(getwd(), "/", "01_helper_functions.R"))
source(paste0(getwd(), "/", "02_calc_options.R"))
source(paste0(getwd(), "/", "03_length_calc.R"))
df <- point2end(neighbcoord)
source(paste0(getwd(), "/", "04_endemic_model.R"))
v <- 10000
df$time <- df$length / v * 24
v.d0 <- 1000
dist2sewagedf$time <- (dist2sewagedf$distance / v.d0)  * 24
pathog.neighb <- c()
pathog.neighb.list <- list()
n.pop <- neighb$p_total
for (i in 1:length(n.pop)){
pathog.neighb <- patho.count(N.pop=n.pop[i], beta=0.04, recovery=1/30, death=0.001,
birth=0.001, days=1000, N.shed=10^7, r=5, p=1/3)
pathog.neighb.list[[i]] <- pathog.neighb
}
N0df <- matrix(unlist(pathog.neighb.list), ncol = nrow(neighb), byrow = F) #N0
liquid.waste <- neighb$waste_liquid_sewage
adjust.fac.matrix <- matrix(ncol = length(N0df[1, ]), nrow = 1000)
for (i in 1:length(N0df[1, ])) {
adjust.fac.matrix[, i] <- rbeta(length(N0df[, i]), 1, 5)
}
data.list <- list()
for (u in 1:length(N0df[1, ])) {
drains <- df[df$iteration == u, ]
ndrains <- nrow(drains) # df$drain[df$iteration == u]
ncolumns <- sum(nrow(drains)+2)
t0 <- dist2sewagedf$time[u]
data <- data.frame(matrix(ncol=ncolumns, nrow=1000))
# number of drains + neighborhood concentration --- defines number of columns
for (i in 1:sum(nrow(drains)+2)){ #one neighborhood
if (i == 1){
data[, i] <- N0df[, u]
}
if (i == 2){
data[, i] <- N_next(N0df[, u], t0,
liquid.waste[u], adj_fac = adjust.fac.matrix[, u])
}
if (i > 2){
data[, i] <- N_next(N0df[, u], t0 + sum(drains$time[1:sum(i-2)]),
liquid.waste[u], adj_fac = adjust.fac.matrix[, u])
}
}
colnames(data) <- c("N0", paste("N", 1:(nrow(drains)+1), sep=""))
data.list[[u]] <- data
###
}
pathog.drains <- data.frame()
for (u in 1:length(N0df[1, ])){
dat <- data.list[[u]]
# dat <- data.list[[u]][,-c(1,2)] #delete N0 and N1
dat <- data.frame(t(dat))
dat$point <- rownames(dat)
dat$drain <- c(0, 0, df$drain[df$iteration == u])
dat$time <- c(0, dist2sewagedf$time[u], df$time[df$iteration == u])
dat$meters <- c(0, dist2sewagedf$distance[u], df$length[df$iteration == u])
dat$iteration <- u
dat <- dat %>%
dplyr::select(drain, point, time, meters, iteration, everything())
pathog.drains <- rbind(pathog.drains, dat)
}
rownames(pathog.drains) <- NULL
pathog.drains$time <- round(pathog.drains$time, 2)
pathog.drains$meters <- round(pathog.drains$meters, 2)
View(pathog.drains)
write.csv(pathog.drains, paste0(getwd(), "/data/", "pahtogens_drain_all_new.csv"), row.names = F)
#***********************************************************************************************
# Case Numbers
#***********************************************************************************************
#  [1] create 1-0 matrix, indicating infection or no infection per day per station
#***********************************************************************************************
library(dplyr)
library(reshape2)
library(ggplot2)
library(RColorBrewer)
setwd("H:/GitHub/accra_drains/")
# load/ manipulate data
plot.stations <- read.csv(paste0(getwd(), "/data/", "plot_stations_new_all.csv"))
plot.stations1 <- plot.stations
minimum <- 10^7
plot.stations$infect <- as.numeric(plot.stations$value >= minimum)
# tst <- plot.stations[plot.stations$station == "A",]
# tst <- tst[tst$variable <= 200,]
# tst <- tst[tst$infect == 1,]
#
# ggplot(data=tst, aes(x=variable, y=value)) +
#         geom_line() +
#         geom_point()
# plot.stations$variable <- NULL
# plot.stations1$value <- NULL
#***********************************************************************************************
# positive infection each day fore each station
rows <- nrow(plot.stations1[plot.stations1$station == "A",])
df <- data.frame(matrix(nrow=rows, ncol=5))
df[,1] <- as.numeric(plot.stations1$value[plot.stations1$station == "A"] > minimum)
df[,2] <- as.numeric(plot.stations1$value[plot.stations1$station == "B"] > minimum)
df[,3] <- as.numeric(plot.stations1$value[plot.stations1$station == "C"] > minimum)
df[,4] <- as.numeric(plot.stations1$value[plot.stations1$station == "D"] > minimum)
df[,5] <- as.numeric(plot.stations1$value[plot.stations1$station == "E"] > minimum)
colnames(df) <- c("A", "B", "C", "D", "E")
#***********************************************************************************************
# count how many times within 1000 days there is a positve sample
df$id <- 1:nrow(df)
df1 <- melt(df, id="id")
df1 <- df1 %>% filter(value ==1) %>% group_by(variable) %>% summarise(count=n(),
perc=n()/1000)
ggplot(df1, aes(x=variable, y=count)) +
geom_bar(aes(fill = variable), alpha=.9, stat="identity") +
geom_text(aes(label=count), vjust=-.2) +
# geom_text(aes(label=scales::percent(perc)), vjust=-.2) +
theme_bw() +
scale_fill_brewer(palette="Set2", name="Stations") +
labs(title = "Positive Samples (1000 Days)",
x = "Stations", y = "Positive Samples") +
theme(plot.title=element_text(face="bold",size=25, hjust = 0.5), #title
strip.text = element_text(size=12), #font size of facet wrap titles
axis.text=element_text(size=12), #font size of labels
axis.title=element_text(size=16))
ggsave(filename = paste0(getwd(), "/plots_misc/", "cases_pos_1000.png"),
plot = last_plot(), width = 8, height = 6, units = 'in', dpi = 400)
#***********************************************************************************************
# determining sample frequency sensitivity
# take sample every nth day and check if sample is positive
df$id <- NULL
sample.intervals <- c(1,7,14,21,30,60)
df.interval <- data.frame(matrix(nrow=200, ncol=6))
colnames(df.interval) <- c("A", "B", "C", "D", "E", "interval")
i=14
dat <- df[seq(0, nrow(df), i), ]
View(dat)
nrow(dat)
df.interval <- data.frame(matrix(nrow=200, ncol=7))
colnames(df.interval) <- c("A", "B", "C", "D", "E", "interval", "samples")
for (i in 1:200){
dat <- df[seq(0, nrow(df), i), ]
df.interval[i,] <- c(round(colSums(dat) / nrow(dat),2), i, nrow(dat))
}
df.interval <- df.interval %>% filter(interval %in% sample.intervals)
View(df.interval)
i=14
dat <- df[seq(0, nrow(df), i), ]
dat
colSums(dat)
df.interval[i,] <- c(round(colSums(dat) / 1000,2), i, nrow(dat))
dff1 <- melt(dff1, id="Interval")
ggplot(data=dff1, aes(x=Interval, y=value, color = variable)) +
geom_hline(yintercept = 0.75, col = "black", linetype = 2) +
geom_line() +
geom_smooth(method = "lm") +
facet_wrap(~variable) +
theme_bw()
