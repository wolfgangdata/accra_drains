summary(fit)
version()
version
fit <- lm(hrec_conc ~ neighbor + hr_sex + mpartec_conc + mwaterec_conc +
mswabec_conc, data = modeling2)
summary(fit)
install.packages("benchmarkme")
library(benchmarkme)
install.packages("benchmarkmeData")
install.packages("benchmarkme")
install.packages("benchmarkme")
install.packages("benchmarkme")
library(benchmarkme)
res <- benchmark_io(runs = 1, size = 5)
fit <- lm(hrec_conc ~ neighbor + hr_sex + mpartec_conc + mwaterec_conc +
mswabec_conc, data = modeling2)
summary(fit)
fit <- lm(hrec_conc ~ neighbor + hr_sex + mswabec_conc, data = modeling2)
summary(fit)
fit <- lm(hrec_conc ~ neighbor + mswabec_conc, data = modeling2)
summary(fit)
fit <- lm(hrec_conc ~ neighbor + hr_sex + mpartec_conc + mwaterec_conc +
mswabec_conc, data = modeling2)
summary(fit)
View(modeling2)
fit <- lm(hrec_conc ~ neighbor + hr_sex + mpartec_conc + mwaterec_conc +
mswabec_conc, data = modeling2)
summary(fit)
fit <- lm(hrec_conc ~ neighbor + hr_sex + mswabec_conc, data = modeling2)
summary(fit)
fit <- lm(hrec_conc ~ neighbor + mswabec_conc, data = modeling2)
summary(fit)
View(modeling2)
fit <- glm(hrec_conc ~ neighbor + hr_sex + mpartec_conc + mwaterec_conc +
mswabec_conc, data = modeling2)
summary(fit)
View(modeling2)
install.packages("rgdal")
setwd("H:\Work\accra_ghana_neighborhoods\accra_shapefiles_individual")
library(rgdal)
setwd("H:\Work\accra_ghana_neighborhoods\accra_shapefiles_individual")
neighb <- readOGR(".","abbossey_okai")
library("rgdal", lib.loc="~/R/R-3.4.0/library")
detach("package:rgdal", unload=TRUE)
library("rgdal", lib.loc="~/R/R-3.4.0/library")
install.packages("sp")
install.packages("sp")
library(rgdal)
setwd("H:\Work\accra_ghana_neighborhoods\accra_shapefiles_individual")
neighb <- readOGR(".","abbossey_okai")
neighb <- readOGR(dsn = getwd(), laye r= "abbossey_okai")
neighb <- readOGR(dsn = getwd(), layer= "abbossey_okai")
library(raster)
install.packages("raster")
library(raster)
setwd("H:\Work\accra_ghana_neighborhoods\accra_shapefiles_individual")
neighb <- readOGR(dsn = getwd(), layer= "abbossey_okai")
paste0(getwd(), "abbossey_okai.shp")
setwd("H:\Work\accra_ghana_neighborhoods\accra_shapefiles_individual\")
neighb <- readOGR(dsn = getwd(), layer= "abbossey_okai")
neighb <- shapefile(paste0(getwd(), "abbossey_okai.shp"))
setwd("H:\Work\accra_ghana_neighborhoods\accra_shapefiles_individual\")
neighb <- readOGR(dsn = getwd(), layer= "abbossey_okai")
neighb <- shapefile(paste0(getwd(), "abbossey_okai.shp"))
setwd("H:\Work\accra_ghana_neighborhoods\accra_shapefiles_individual")
setwd("H:\Work\accra_ghana_neighborhoods\accra_shapefiles_individual")
neighb <- shapefile("H:\Work\accra_ghana_neighborhoods\accra_shapefiles_individual\abbossey_okai.shp")
setwd("H:\Work\accra_ghana_neighborhoods\accra_shapefiles_individual")
detach("package:raster", unload=TRUE)
setwd("H:\Work\accra_ghana_neighborhoods\accra_shapefiles_individual")
glimpse_colors <- function(colors_string){
n <- length(colors_string)
hist(1:n, breaks = 0:n, col = colors_string)
}
library(RColorBrewer)
pal <- brewer.pal(n = 9, name = 'BrBG')
glimpse_colors(pal)
pal <- brewer.pal(n = 19, name = 'BrBG')
glimpse_colors(pal)
pal
pal <- brewer.pal(n = 19, name = 'PiYG')
pal <- brewer.pal(n = 19, name = ' PRGn')
pal <- brewer.pal(n = 19, name = ' BrBG')
pal <- brewer.pal(n = 19, name = 'PRGn')
pal <- brewer.pal(n = 19, name = 'PiYG')
glimpse_colors(pal)
pal <- brewer.pal(n = 19, name = 'BrBG')
glimpse_colors(pal)
pal <- brewer.pal(n = 11, name = 'BrBG')
glimpse_colors(pal)
n <- length(colors_string)
hist(1:n, breaks = 0:n, col = colors_string)
glimpse_colors <- function(colors_string){
n <- length(colors_string)
hist(1:n, breaks = 0:n, col = colors_string)
}
library(RColorBrewer)
pal <- brewer.pal(n = 11, name = 'PuOr')
glimpse_colors(pal)
packages <- c("dplyr", "rgdal", "raster", "rgeos", "geosphere")
lapply(packages, library, character.only = TRUE)
setwd("H:/GitHub/accra_drains/")
source(paste0(getwd(), "/", "helper_length_calc.R"))
sewage <- shapefile(paste0(getwd(), "/shapefiles/waterways/", "accra_waterw_con_ed_level_4.shp"))
sewage <- spTransform(sewage, CRS("+proj=longlat +datum=WGS84"))
sewage <- sewage[order(sewage@data$id2), ]
sewage.prj <- spTransform(sewage, CRS("+init=epsg:32630"))
neighbcoord <- read.csv(paste0(getwd(), "/data/", "points_coordinates_output.csv"), sep = ",")
linepoints <- lapply(slot(sewage, "lines"),
function(x) lapply(slot(x, "Lines"), function(y) slot(y, "coords")))
pts.drain.end <- data.frame("lon" = c(NA), "lat" = c(NA))
for (i in 1:length(linepoints)) {
if (i == 15 | i == 25){
pts.drain.end[i, ] <- head(data.frame(linepoints[i]), 1)
} else {
pts.drain.end[i, ] <- tail(data.frame(linepoints[i]), 1)
}
}
pts.drain.end$drain <- c(1:31)
rownames(pts.drain.end) <- c(1:31)
pts.drain.end
pts.drain.beg <- data.frame("lon" = c(-NA), "lat" = c(NA))
for (i in 1:length(linepoints)) {
if (i == 15 | i == 25){
pts.drain.beg[i, ] <- tail(data.frame(linepoints[i]), 1)
} else {
pts.drain.beg[i, ] <- head(data.frame(linepoints[i]), 1)
}
}
linepoints
pts.drain.beg <- data.frame("lon" = c(-NA), "lat" = c(NA))
for (i in 1:length(linepoints)) {
if (i == 15 | i == 25){
pts.drain.beg[i, ] <- tail(data.frame(linepoints[i]), 1)
} else {
pts.drain.beg[i, ] <- head(data.frame(linepoints[i]), 1)
}
}
pts.drain.beg$drain <- c(1:31)
rownames(pts.drain.beg) <- c(1:31)
pts.drain.beg
linepoints
pts.drain.end.sp <- SpatialPointsDataFrame(pts.drain.end[c("lon", "lat")],
data.frame(ID=seq(1:nrow(pts.drain.end))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
pts.drain.end.prj <- spTransform(pts.drain.end.sp, CRS("+init=epsg:32630"))
pts.drain.beg.sp <- SpatialPointsDataFrame(pts.drain.beg[c("lon", "lat")],
data.frame(ID=seq(1:nrow(pts.drain.beg))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
pts.drain.beg.prj <- spTransform(pts.drain.beg.sp, CRS("+init=epsg:32630"))
sewage.length.df <- data.frame("length" = c(NA), "drain" = c(NA))
for (i in 1:length(sewage.prj)){
d <- gDistance(pts.drain.end.prj[i, ], pts.drain.beg.prj[i, ]) #d of beg and end point of drain
circles.prj <- gBuffer(pts.drain.end.prj[i,], width=d, byid=TRUE)
sewage.length.df[i, ] <- c(line.length(sewage.prj[i, ], circles.prj), i)
}
a <- c(1:12)
b <- c(13:27)
c <- c(28:31)
drain.levels <- data.frame("drain"=c(a,b,c),
"level"=c(rep(1,length(a)),rep(2,length(b)), rep(3,length(c))))
drain.levels
sewage.length.df <- left_join(sewage.length.df, drain.levels, by="drain")
sewage.length.df
pts.neighb.sp <- SpatialPointsDataFrame(neighbcoord[, c("lon", "lat")],
data.frame(ID=seq(1:nrow(neighbcoord))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
dist2sewagedf <- data.frame("distance" = c(NA),"lon" = c(NA), "lat" = c(NA), "ID2" = c(NA))
for (i in 1:length(neighbcoord[ ,1])) {
dist2sewagedf[i, ] <- rbind(dist2Line(neighbcoord[i, c("lon", "lat")], sewage)) #coordinates of intersection
}
dist2sewagedf.adj <- dist2sewagedf %>% filter(!distance > 1500)
pts.neigh.drain <- SpatialPointsDataFrame(dist2sewagedf.adj[c("lon", "lat")],
data.frame(ID=seq(1:nrow(dist2sewagedf.adj)), ID2 = dist2sewagedf.adj$ID2),
proj4string=CRS("+proj=longlat +datum=WGS84"))
pts.neigh.drain.sp <- spTransform(pts.neigh.drain, CRS( "+init=epsg:32630" ))
p01 <- sewage.length.df %>% filter(drain %in% c( ))
p02 <- sewage.length.df %>% filter(drain %in% c(1))
p03 <- sewage.length.df %>% filter(drain %in% c(1:2))
p04 <- sewage.length.df %>% filter(drain %in% c(1:3))
p05 <- sewage.length.df %>% filter(drain %in% c(1:4))
p06 <- sewage.length.df %>% filter(drain %in% c(1:5))
p07 <- sewage.length.df %>% filter(drain %in% c(1:6))
p08 <- sewage.length.df %>% filter(drain %in% c(1:7))
p09 <- sewage.length.df %>% filter(drain %in% c(1:8))
p10 <- sewage.length.df %>% filter(drain %in% c(1:9))
p11 <- sewage.length.df %>% filter(drain %in% c(1:10))
p12 <- sewage.length.df %>% filter(drain %in% c(1:11))
p13 <- sewage.length.df %>% filter(drain %in% c(1))
p14 <- sewage.length.df %>% filter(drain %in% c(1:2))
p15 <- sewage.length.df %>% filter(drain %in% c(1:3))
p16 <- sewage.length.df %>% filter(drain %in% c(1:4))
p17 <- sewage.length.df %>% filter(drain %in% c(1:4, 16))
p18 <- sewage.length.df %>% filter(drain %in% c(1:4, 16:17))
p19 <- sewage.length.df %>% filter(drain %in% c(1:4, 16:18))
p20 <- sewage.length.df %>% filter(drain %in% c(1:5))
p21 <- sewage.length.df %>% filter(drain %in% c(1:5, 20))
p22 <- sewage.length.df %>% filter(drain %in% c(1:6))
p23 <- sewage.length.df %>% filter(drain %in% c(1:7))
p24 <- sewage.length.df %>% filter(drain %in% c(1:8))
p25 <- sewage.length.df %>% filter(drain %in% c(1:9))
p26 <- sewage.length.df %>% filter(drain %in% c(1:10))
p27 <- sewage.length.df %>% filter(drain %in% c(1:11))
p28 <- sewage.length.df %>% filter(drain %in% c(1:5, 20))
p29 <- sewage.length.df %>% filter(drain %in% c(1:4, 16))
p30 <- sewage.length.df %>% filter(drain %in% c(1:4, 16:17))
p31 <- sewage.length.df %>% filter(drain %in% c(1:4, 16:18))
pts.drain.end[pts.drain.end$drain == testpoint, ]
plot(sewage, col = "blue", axes=TRUE)
points(pts.neigh.drain[18,], col="orange", cex=1)
sewage.part.length.df <- data.frame("length" = c(NA), "drain" = c(NA), "iteration" = c(NA))
for (i in 1:length(sewage.prj)){
d <- gDistance(pts.drain.end.prj[dist2sewagedf$ID2[i], ], pts.neigh.drain.sp[i, ])
circles.prj <- gBuffer(pts.drain.end.prj[dist2sewagedf$ID2[i],], width=d, byid=TRUE)
sewage.part.length.df[i, ] <- c(line.length(sewage.prj[dist2sewagedf$ID2[i], ], circles.prj), dist2sewagedf$ID2[i], i)
}
sewage.part.length.df <- left_join(sewage.part.length.df, drain.levels, by="drain")
sewage.part.length.df
sewage.part.length.df$iteration <- NULL
df <- data.frame("length"=c(), "drain"=c(), "level"=c(), "iteration"=c())
sewage.total.df <- data.frame("length"=c(), "drain"=c(), "level"=c(), "iteration"=c())
for (i in 1:length(sewage.part.length.df[, 1])){
nr <- sewage.part.length.df$drain[i]
name <- paste0("p", sprintf("%02d", nr))
sewage.t.length.df <- rbind(get(name), sewage.part.length.df[i, ])
sewage.t.length.df$iteration <- i
sewage.total.df <- rbind(sewage.total.df, sewage.t.length.df)
}
sewage.total.df
df1 <- sewage.total.df %>% group_by(iteration) %>% summarise(length=sum(length))
View(df1)
View(sewage.t.length.df)
plot(sewage, col = "blue", axes=TRUE)
points(pts.neighb.sp, col="red", cex=1)
points(pts.neigh.drain, col="green", cex=1)
plot(sewage, col = "blue", axes=TRUE)
points(pts.neigh.drain, col="green", cex=1)
points(pts.neighb.sp, col="red", cex=1)
points(endpoint.proj, cex=1)
plot(sewage, col = "blue", axes=TRUE)
points(pts.neighb.sp, col="red", cex=1)
points(pts.neigh.drain, col="green", cex=1)
points(pts.drain.end.sp, col="green", cex=1)
points(pts.drain.end.sp, col="brown", cex=1)
plot(sewage, col = "blue", axes=TRUE)
points(pts.drain.end.sp, col="brown", cex=1)
points(pts.drain.beg.sp, col="orange", cex=1)
points(pts.neigh.drain, col="green", cex=1)
plot(sewage, col = "blue", axes=TRUE)
points(pts.neighb.sp, col="red", cex=1)
points(pts.neigh.drain, col="green", cex=1) #closest point to drain
points(pts.drain.beg.sp, col="orange", cex=1)
points(pts.drain.end.sp, col="brown", cex=1)
plot(sewage, col = "blue", axes=TRUE)
points(pts.neighb.sp, col="red", cex=2)
points(pts.neighb.sp, col="red", cex=1)
plot(sewage, col = "blue", axes=TRUE)
plot(sewage, col = "blue", axes=TRUE)
points(pts.neighb.sp, col="red", pch=0, cex=1)
points(pts.neighb.sp, col="red", pch=18, cex=1)
points(pts.neighb.sp, col="red", pch=18, cex=0)
plot(sewage, col = "blue", axes=TRUE)
points(pts.neighb.sp, col="red", pch=18, cex=0)
points(pts.neighb.sp, col="red", pch=18, cex=1)
plot(sewage, col = "blue", axes=TRUE)
points(pts.neighb.sp, col="red", pch=18)
plot(sewage, col = "blue", axes=TRUE)
points(pts.neighb.sp, col="red", pch=20, cex=1)
points(pts.neigh.drain, col="green", pch=10,cex=1) #closest point to drain
points(pts.drain.beg.sp, col="orange", pch=10,cex=1)
points(pts.drain.beg.sp, col="orange", pch=20,cex=1)
points(pts.drain.beg.sp, col="orange", pch=1, cex=1)
plot(sewage, col = "blue", axes=TRUE)
points(pts.drain.beg.sp, col="orange", pch=1, cex=1)
points(pts.drain.end.sp, col="brown", pch=5, cex=1)
plot(sewage[sewage$level==1, ], col = "blue", axes=TRUE)
plot(sewage[sewage$level==2, ], col = "green", axes=TRUE, add=TRUE)
plot(sewage[sewage$level==3, ], col = "brown", axes=TRUE, add=TRUE)
pts.neigh.drain <- SpatialPointsDataFrame(dist2sewagedf[c("lon", "lat")],
data.frame(ID=seq(1:nrow(dist2sewagedf)), ID2 = dist2sewagedf$ID2),
proj4string=CRS("+proj=longlat +datum=WGS84"))
pts.neigh.drain.sp <- spTransform(pts.neigh.drain, CRS( "+init=epsg:32630" ))
p01 <- sewage.length.df %>% filter(drain %in% c( ))
p02 <- sewage.length.df %>% filter(drain %in% c(1))
p03 <- sewage.length.df %>% filter(drain %in% c(1:2))
sewage.part.length.df <- data.frame("length" = c(NA), "drain" = c(NA), "iteration" = c(NA))
for (i in 1:length(sewage.prj)){
d <- gDistance(pts.drain.end.prj[dist2sewagedf$ID2[i], ], pts.neigh.drain.sp[i, ])
circles.prj <- gBuffer(pts.drain.end.prj[dist2sewagedf$ID2[i],], width=d, byid=TRUE)
sewage.part.length.df[i, ] <- c(line.length(sewage.prj[dist2sewagedf$ID2[i], ], circles.prj), dist2sewagedf$ID2[i], i)
}
sewage.part.length.df <- left_join(sewage.part.length.df, drain.levels, by="drain")
View(sewage.part.length.df)
dist2sewagedf
neighbcoord
dist2sewagedf <- data.frame("distance" = c(NA),"lon" = c(NA), "lat" = c(NA), "ID2" = c(NA))
for (i in 1:length(neighbcoord[ ,1])) {
dist2sewagedf[i, ] <- rbind(dist2Line(neighbcoord[i, c("lon", "lat")], sewage)) #coordinates of intersection
}
View(dist2sewagedf)
pts.neigh.drain <- SpatialPointsDataFrame(dist2sewagedf[c("lon", "lat")],
data.frame(ID=seq(1:nrow(dist2sewagedf)), ID2 = dist2sewagedf$ID2),
proj4string=CRS("+proj=longlat +datum=WGS84"))
pts.neigh.drain.sp <- spTransform(pts.neigh.drain, CRS( "+init=epsg:32630" ))
1:length(sewage.prj)
sewage.part.length.df <- data.frame("length" = c(NA), "drain" = c(NA), "iteration" = c(NA))
for (i in 1:length(sewage.prj)){
d <- gDistance(pts.drain.end.prj[dist2sewagedf$ID2[i], ], pts.neigh.drain.sp[i, ])
circles.prj <- gBuffer(pts.drain.end.prj[dist2sewagedf$ID2[i],], width=d, byid=TRUE)
sewage.part.length.df[i, ] <- c(line.length(sewage.prj[dist2sewagedf$ID2[i], ], circles.prj), dist2sewagedf$ID2[i], i)
}
sewage.part.length.df <- left_join(sewage.part.length.df, drain.levels, by="drain")
sewage.part.length.df$iteration <- NULL
sewage.total.df <- data.frame("length"=c(), "drain"=c(), "level"=c(), "iteration"=c())
View(dist2sewagedf)
double(dist2sewagedf)
duplicated(dist2sewagedf, incomparables = FALSE, ...)
duplicated(dist2sewagedf, incomparables = FALSE)
df <- dist2sewagedf
View(df)
df$distance <- NULL
duplicated(df, incomparables = FALSE)
sum(duplicated(df, incomparables = FALSE))
neighbcoord
pts.neigh.drain
nr <- sewage.part.length.df$drain[1]
name <- paste0("p", sprintf("%02d", nr))
sewage.t.length.df <- rbind(get(name), sewage.part.length.df[1, ])
sewage.t.length.df
sewage.total.df
sewage.t.length.df$iteration <- 1
sewage.total.df <- rbind(sewage.total.df, sewage.t.length.df)
sewage.total.df
sewage.t.length.df
sewage.part.length.df
sewage.part.length.df <- data.frame("length" = c(NA), "drain" = c(NA), "iteration" = c(NA))
for (i in 1:length(sewage.prj)){
d <- gDistance(pts.drain.end.prj[dist2sewagedf$ID2[i], ], pts.neigh.drain.sp[i, ])
circles.prj <- gBuffer(pts.drain.end.prj[dist2sewagedf$ID2[i],], width=d, byid=TRUE)
sewage.part.length.df[i, ] <- c(line.length(sewage.prj[dist2sewagedf$ID2[i], ], circles.prj), dist2sewagedf$ID2[i], i)
}
sewage.part.length.df
sewage.length.df
dist2sewagedf
1:length(pts.neigh.drain)
i=1
pts.drain.end.prj[dist2sewagedf$ID2[i], ]
pts.drain.end.prj
pts.neigh.drain.sp
pts.neigh.drain.sp[i, ]
gDistance(pts.drain.end.prj[pts.neigh.drain.sp$ID2[i], ], pts.neigh.drain.sp[i, ])
gDistance(pts.drain.end.prj[dist2sewagedf$ID2[i], ], pts.neigh.drain.sp[i, ])
d <- gDistance(pts.drain.end.prj[pts.neigh.drain.sp$ID2[i], ], pts.neigh.drain.sp[i, ])
pts.drain.end.prj[dist2sewagedf$ID2[i],]
pts.drain.end.prj[pts.neigh.drain.sp$ID2[i],]
circles.prj <- gBuffer(pts.drain.end.prj[pts.neigh.drain.sp$ID2[i],], width=d, byid=TRUE)
c(line.length(sewage.prj[pts.neigh.drain.sp$ID2[i], ], circles.prj),
pts.neigh.drain.sp$ID2[i], i)
sewage.part.length.df <- data.frame("length" = c(NA), "drain" = c(NA), "iteration" = c(NA))
for (i in 1:length(pts.neigh.drain)){
d <- gDistance(pts.drain.end.prj[pts.neigh.drain.sp$ID2[i], ], pts.neigh.drain.sp[i, ])
circles.prj <- gBuffer(pts.drain.end.prj[pts.neigh.drain.sp$ID2[i],], width=d, byid=TRUE)
sewage.part.length.df[i, ] <- c(line.length(sewage.prj[pts.neigh.drain.sp$ID2[i], ], circles.prj),
pts.neigh.drain.sp$ID2[i], i)
}
sewage.part.length.df
sewage.part.length.df <- left_join(sewage.part.length.df, drain.levels, by="drain")
sewage.part.length.df
sewage.part.length.df$iteration <- NULL
sewage.part.length.df
1:length(sewage.part.length.df[, 1])
sewage.total.df <- data.frame("length"=c(), "drain"=c(), "level"=c(), "iteration"=c())
for (i in 1:length(sewage.part.length.df[, 1])){
nr <- sewage.part.length.df$drain[i]
name <- paste0("p", sprintf("%02d", nr))
sewage.t.length.df <- rbind(get(name), sewage.part.length.df[i, ])
sewage.t.length.df$iteration <- i
sewage.total.df <- rbind(sewage.total.df, sewage.t.length.df)
}
sewage.total.df
View(sewage.total.df)
points(pts.neighb.sp[pts.neigh.drain.sp$ID==71], col="red", pch=20, cex=1)
points(pts.neighb.sp[pts.neigh.drain.sp$ID==71, ], col="red", pch=20, cex=1)
points(pts.neigh.drain[pts.neigh.drain$ID==71, ], col="green", pch=10, cex=1) #closest point to drain
View(sewage.total.df)
plot(sewage[sewage$id2==1, ], col = "green", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==1, ], col = "black", axes=TRUE, add=TRUE)
plot(sewage, col = "lightblue", axes=TRUE)
points(pts.neighb.sp[pts.neigh.drain.sp$ID==71, ], col="red", pch=20, cex=1)
points(pts.neigh.drain[pts.neigh.drain$ID==71, ], col="green", pch=10, cex=1) #closest point to drain
plot(sewage[sewage$id2==1, ], col = "black", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==1, ], col = "blue", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==1, ], col = "black", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==2, ], col = "blue", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==3, ], col = "black", axes=TRUE, add=TRUE)
circles.prj
sewage.part.length.df
View(sewage.total.df)
linepoints
linepoints[3]
pts.neigh.drain[pts.neigh.drain$ID==71, ]
points(-0.2179323, 5.560829)
pt <- c(-0.2179323, 5.560829)
gI <- gIntersection(linepoints[3], pt, byid=c(TRUE, TRUE))
pts.neigh.drain
pts.neigh.drain[71]
pts.neigh.drain[71,]
linepoints[3]
pt.sp <- SpatialPointsDataFrame(c(-0.2179323, 5.560829),
data.frame(ID=seq(1:nrow(1))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
pt.sp <- SpatialPointsDataFrame(pt[c("lon", "lat")],
data.frame(ID=seq(1:nrow(pt))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
pt <- data.frame("lon" = c(-0.2179323), "lat" = c(5.560829))
pt.sp <- SpatialPointsDataFrame(pt[c("lon", "lat")],
data.frame(ID=seq(1:nrow(pt))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
pt.prj <- spTransform(pt.sp, CRS("+init=epsg:32630"))
pt.sp
pts.neigh.drain[71,]
linepoints[3]
line <- as.Data.frame(linepoints[3])
line <- as.data.frame(linepoints[3])
View(line)
colnames(line) <- c("lon", "lat")
line.sp <- SpatialLinesDataFrame(line[c("lon", "lat")],
data.frame(ID=seq(1:nrow(line))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
line
line.sp <- SpatialLinesDataFrame(line[c("lon", "lat")],
proj4string=CRS("+proj=longlat +datum=WGS84"))
line.sp <- SpatialLinesDataFrame(line[c("lon", "lat")])
SpatialLinesLengths(sewage)
SpatialLinesLengths(sewage.prj)
View(sewage.length.df)
data.frame(ID=seq(1:nrow(line)))
line[c("lon", "lat")]
SpatialLinesDataFrame(line[c("lon", "lat")],
data.frame(ID=seq(1:nrow(line))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
SpatialLinesDataFrame(line[c("lon", "lat")],
data.frame(ID=seq(1:nrow(line))) )
data.frame(ID=seq(1:nrow(line)))
line[c("lon", "lat")],
data.frame(ID=seq(1:nrow(line)))
line[c("lon", "lat")]
line.sp <- SpatialLinesDataFrame(line )
line.prj <- spTransform(line, CRS("+init=epsg:32630"))
line.sp <- SpatialLinesDataFrame(line[c("lon", "lat")],
data.frame(ID=seq(1:nrow(line))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
line.sp <- SpatialLinesDataFrame(linepoints[3][c("lon", "lat")],
data.frame(ID=seq(1:nrow(linepoints[3]))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
linepoints[3]
line.sp <- SpatialLinesDataFrame(linepoints[3],
data.frame(ID=seq(1:nrow(linepoints[3]))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
list(line)
line <- list(line)
line <- list(line)
line.sp <- SpatialLinesDataFrame(line[c("lon", "lat")],
data.frame(ID=seq(1:nrow(line))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
SpatialLinesLengths(sewage.prj, byid = T)
sewage.prj
line <- as.data.frame(sewage[3])
View(line)
sewage[3]
sewage
line <- as.data.frame(sewage$id2[3])
View(line)
sewage$id2[3]
line <- as.data.frame(sewage$id2==3)
View(line)
line <- as.data.frame(sewage[sewage$id2==3, ])
View(line)
sewage[sewage$id2==3, ]
line <- (sewage[sewage$id2==3, ])
line.sp <- SpatialLinesDataFrame(line[c("lon", "lat")],
data.frame(ID=seq(1:nrow(line))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
gI <- gIntersection(line, pt.sp, byid=c(TRUE, TRUE))
gI
gIntersection(line, pt.sp, byid=c(TRUE, TRUE))
gIntersection(sewage, pt.sp, byid=c(TRUE, TRUE))
SpatialLinesLengths(sewage.prj, byid = T)
SpatialLinesLengths(sewage.prj)
sewage.length.df$test2 <- SpatialLinesLengths(sewage.prj)
View(sewage.length.df)
sewage.length.df$test3 <- sewage.length.df$test2 - sewage.length.df$length
library(raster)
?spLines
sewage[sewage$id2==3, ]
gIntersection(sewage, pt.sp)
gIntersection(line, pt.sp)
neighbcoord
alongTrackDistance(c(0,0),c(60,60),c(50,40))
points(sewage[sewage$id2==3, ])
plot(sewage[sewage$id2==3, ])
sewage[sewage$id2==3
sewage[sewage$id2==3, ]
xy <- as.data.frame(sewage[sewage$id2==3, ], xy=TRUE)
View(xy)
sewage[sewage$id2==3, ]
xy <- as.data.frame(sewage[sewage$id2==3, ])
sewage[1]
xy <- as.data.frame(sewage[1], xy=TRUE)
View(xy)
xy <- as.data.frame(sewage[1,], xy=TRUE)
View(xy)
