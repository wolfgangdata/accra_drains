sewage[3,]
intersec.points[1,]
sewage
plot(sewage[id==3], col = "blue", axes=TRUE)
plot(sewage[sewage$id==3], col = "blue", axes=TRUE)
plot(sewage[sewage$id==3, ], col = "blue", axes=TRUE)
points(intersec.points[1,], col="green", cex=1)
intersec.points[1,]
plot(sewage[sewage$id==6, ], col = "blue", axes=TRUE)
points(intersec.points[1,], col="green", cex=1)
gIntersects(intersec.points[1,], sewage[sewage$id==6, ])
gIntersects(sewage[sewage$id==6, ], sewage[sewage$id==60, ])
plot(waterways)
myLine <- plot(waterways)
myPSP <- as.psp(myLine)
library(spatstat)
install.packages("spatstat")
library("spatstat.utils", lib.loc="~/R/R-3.4.0/library")
myLine <- plot(waterways)
myPSP <- as.psp(myLine)
myLine <- (waterways)
myPSP <- as.psp(myLine)
install.packages("spatstat")
install.packages("spatstat")
library("spatstat", lib.loc="~/R/R-3.4.0/library")
myPSP <- as.psp(myLine)
myPSP <- as.psp(myLine)
library("spatstat.utils", lib.loc="~/R/R-3.4.0/library")
myPSP <- as.psp(myLine)
myPoints <- pointsOnLines(myPSP, 10000)
library(rgdal)
library(raster)
library(rgeos)
library(geosphere)
library(dplyr)
setwd("H:/GitHub/accra_drains/")
sewage <- shapefile(paste0(getwd(), "/shapefiles/waterways/", "accra_ghana_osm_waterways_con_edited.shp"))
sewage <- spTransform(sewage, CRS("+proj=longlat +datum=WGS84"))
neighbcoord <- read.csv(paste0(getwd(), "/data/", "points_coordinates_output.csv"), sep = ",")
ama <- shapefile(paste0(getwd(), "/shapefiles/neighborhood/", "AMA_projected.shp"))
ama <- spTransform(ama, CRS("+proj=longlat +datum=WGS84"))
line.length <- function(the.lines.projected, the.circles.projected) {
if (gIntersects(the.lines.projected, the.circles.projected)) {
lines_crp <- crop(the.lines.projected, the.circles.projected)
lines_crp_length <- gLength(lines_crp)
return(lines_crp_length)
} else {
return(0)
}
}
dat0 <- neighbcoord
the.points.sp <- SpatialPointsDataFrame(dat0[, c("lon", "lat")], data.frame(ID=seq(1:nrow(dat0))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
dat0 <- neighbcoord
the.points.sp <- SpatialPointsDataFrame(dat0[, c("lon", "lat")], data.frame(ID=seq(1:nrow(dat0))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
the.sewage.projected <- spTransform(sewage, CRS( "+init=epsg:32630" ))
sewage.length <- c()
for (i in 1:length(the.points.sp[ ,1])) {
the.points.projected <- spTransform(the.points.sp[i, ], CRS( "+init=epsg:32630" ))
the.circles.projected <- gBuffer(the.points.projected, width=100, byid=TRUE)
sewage.length[i] <- line.length(the.sewage.projected, the.circles.projected)
}
dist2sewagedf <- data.frame(matrix(NA, nrow=1, ncol=4))
colnames(dist2sewagedf) <- c("distance", "lon", "lat", "ID")
for (i in 1:length(dat0[ ,1])) {
dist2sewagedf[i, ] <- rbind(dist2Line(dat0[i, c("lon", "lat")], sewage)) #coordinates of intersection
}
dist2sewage <- dist2sewagedf$distance
dist2sewagedf.adj <- dist2sewagedf %>% filter(!distance > 1500)
intersec.points <- SpatialPointsDataFrame(dist2sewagedf.adj[c("lon", "lat")],
data.frame(ID=seq(1:nrow(dist2sewagedf.adj))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
intersec.points.sp <- spTransform(intersec.points, CRS( "+init=epsg:32630" ))
endpoint <- data.frame("lon" = c(-0.221109), "lat" = c(5.530075))
endpoint.proj <- SpatialPointsDataFrame(endpoint[c("lon", "lat")],
data.frame(ID=seq(1:nrow(endpoint))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
endpoint.proj.sp <- spTransform(endpoint.proj, CRS( "+init=epsg:32630" ))
plot(sewage, col = "blue", axes=TRUE)
points(the.points.sp, col="red", cex=1)
points(intersec.points, col="green", cex=1)
plot(sewage$id == 2, col = "blue", axes=TRUE)
plot(sewage$id == 2, col = "blue", axes=TRUE)
plot(sewage[sewage$id==6, ], col = "blue", axes=TRUE)
points(intersec.points[1,], col="green", cex=1)
gIntersects(intersec.points[1,], sewage[sewage$id==6, ])
gIntersects(sewage[sewage$id==6, ], sewage[sewage$id==60, ])
sewage@data
points(intersec.points, col="green", cex=1)
plot(ama, col="lightgrey")
plot(waterways, col = "blue", add = TRUE)
plot(sewage, col = "blue", add = TRUE)
plot(the.points.sp)
drains <- waterways[waterways$type == "drain", ]
library(rgdal)
library(raster)
library(rgeos)
library(geosphere)
library(dplyr)
setwd("H:/GitHub/accra_drains/")
sewage <- shapefile(paste0(getwd(), "/shapefiles/waterways/", "accra_waterw_con_ed_level.shp"))
sewage <- spTransform(sewage, CRS("+proj=longlat +datum=WGS84"))
plot(sewage[sewage$id==6, ], col = "blue", axes=TRUE)
plot(sewage[sewage$id2==6, ], col = "blue", axes=TRUE)
points(intersec.points[1,], col="green", cex=1)
plot(sewage[sewage$level==1, ], col = "blue", axes=TRUE)
plot(sewage[sewage$level==2, ], col = "green", axes=TRUE)
plot(sewage[sewage$level==1, ], col = "blue", axes=TRUE)
plot(sewage[sewage$level==2, ], col = "green", axes=TRUE, add=TRUE)
plot(sewage[sewage$level==3, ], col = "brown", axes=TRUE, add=TRUE)
sewage <- shapefile(paste0(getwd(), "/shapefiles/waterways/", "accra_waterw_con_ed_level.shp"))
sewage <- spTransform(sewage, CRS("+proj=longlat +datum=WGS84"))
neighbcoord <- read.csv(paste0(getwd(), "/data/", "points_coordinates_output.csv"), sep = ",")
ama <- shapefile(paste0(getwd(), "/shapefiles/neighborhood/", "AMA_projected.shp"))
ama <- spTransform(ama, CRS("+proj=longlat +datum=WGS84"))
View(neighbcoord)
line.length <- function(the.lines.projected, the.circles.projected) {
if (gIntersects(the.lines.projected, the.circles.projected)) {
lines_crp <- crop(the.lines.projected, the.circles.projected)
lines_crp_length <- gLength(lines_crp)
return(lines_crp_length)
} else {
return(0)
}
}
dat0 <- neighbcoord
the.points.sp <- SpatialPointsDataFrame(dat0[, c("lon", "lat")], data.frame(ID=seq(1:nrow(dat0))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
the.sewage.projected <- spTransform(sewage, CRS( "+init=epsg:32630" ))
sewage.length <- c()
for (i in 1:length(the.points.sp[ ,1])) {
the.points.projected <- spTransform(the.points.sp[i, ], CRS( "+init=epsg:32630" ))
the.circles.projected <- gBuffer(the.points.projected, width=100, byid=TRUE)
sewage.length[i] <- line.length(the.sewage.projected, the.circles.projected)
}
sewage.length
dist2sewagedf <- data.frame(matrix(NA, nrow=1, ncol=4))
colnames(dist2sewagedf) <- c("distance", "lon", "lat", "ID")
for (i in 1:length(dat0[ ,1])) {
dist2sewagedf[i, ] <- rbind(dist2Line(dat0[i, c("lon", "lat")], sewage)) #coordinates of intersection
}
View(dist2sewagedf)
View(dist2sewagedf)
dist2Line(dat0[i, c("lon", "lat")], sewage)
plot(sewage[sewage$id2==1, ], col = "blue", axes=TRUE)
plot(sewage[sewage$id2==1, ], col = "blue", axes=TRUE, xlim=c(0.3,0.15), ylim=c(5.54,5.66))
plot(sewage[sewage$id2==1, ], col = "blue", axes=TRUE, xlim=c(-0.3,-0.15), ylim=c(5.54,5.66))
plot(sewage[sewage$id2==1, ], col = "blue", axes=TRUE, xlim=c(-0.3,-0.15), ylim=c(5.53,5.66))
plot(sewage[sewage$level==1, ], col = "blue", axes=TRUE, xlim=c(-0.3,-0.15), ylim=c(5.53,5.66))
plot(sewage[sewage$level==1, ], col = "blue", axes=TRUE, xlim=c(-0.3,-0.15), ylim=c(5.53,5.67))
plot(sewage[sewage$level==2, ], col = "green", axes=TRUE, add=TRUE)
plot(sewage[sewage$level==3, ], col = "brown", axes=TRUE, add=TRUE)
plot(sewage[sewage$level==1, ], col = "blue", axes=TRUE, xlim=c(-0.26,-0.16), ylim=c(5.53,5.67))
plot(sewage[sewage$level==2, ], col = "green", axes=TRUE, add=TRUE)
plot(sewage[sewage$level==3, ], col = "brown", axes=TRUE, add=TRUE)
plot(sewage[sewage$level==1, ], col = "blue", axes=TRUE, xlim=c(-0.25,-0.16), ylim=c(5.52,5.68))
plot(sewage[sewage$level==1, ], col = "blue", axes=TRUE)
plot(sewage[sewage$level==2, ], col = "green", axes=TRUE, add=TRUE)
plot(sewage[sewage$level==3, ], col = "brown", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==2, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==1, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$level==1, ], col = "blue", axes=TRUE)
plot(sewage[sewage$id2==1, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$level==2, ], col = "green", axes=TRUE, add=TRUE)
sewage <- shapefile(paste0(getwd(), "/shapefiles/waterways/", "accra_waterw_con_ed_level_2.shp"))
sewage <- spTransform(sewage, CRS("+proj=longlat +datum=WGS84"))
plot(sewage[sewage$level==1, ], col = "blue", axes=TRUE)
plot(sewage[sewage$id2==1, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$level==2, ], col = "green", axes=TRUE, add=TRUE)
plot(sewage[sewage$level==3, ], col = "brown", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==2, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==3, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==4, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==5, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==6, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==7, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==8, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==9, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==10, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==11, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==12, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==13, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==14, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==15, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==16, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==17, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==18, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==19, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==20, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==21, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==22, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==23, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==24, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==25, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==26, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==27, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==30, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==30, ], col = "blue", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==31, ], col = "blue", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==32, ], col = "blue", axes=TRUE, add=TRUE)
sewage <- shapefile(paste0(getwd(), "/shapefiles/waterways/", "accra_waterw_con_ed_level_3.shp"))
sewage <- spTransform(sewage, CRS("+proj=longlat +datum=WGS84"))
plot(sewage[sewage$level==1, ], col = "blue", axes=TRUE)
sewage <- shapefile(paste0(getwd(), "/shapefiles/waterways/", "accra_waterw_con_ed_level_3.shp"))
sewage <- spTransform(sewage, CRS("+proj=longlat +datum=WGS84"))
plot(sewage[sewage$level==1, ], col = "blue", axes=TRUE)
plot(sewage[sewage$level==2, ], col = "green", axes=TRUE, add=TRUE)
plot(sewage[sewage$level==3, ], col = "brown", axes=TRUE, add=TRUE)
plot(sewage[sewage$level==1, ], col = "blue", axes=TRUE)
plot(sewage[sewage$id2==1, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==32, ], col = "blue", axes=TRUE, add=TRUE)
sewage <- shapefile(paste0(getwd(), "/shapefiles/waterways/", "accra_waterw_con_ed_level_3.shp"))
sewage <- spTransform(sewage, CRS("+proj=longlat +datum=WGS84"))
sewage <- shapefile(paste0(getwd(), "/shapefiles/waterways/", "accra_waterw_con_ed_level_3.shp"))
sewage <- spTransform(sewage, CRS("+proj=longlat +datum=WGS84"))
sewage <- shapefile(paste0(getwd(), "/shapefiles/waterways/", "accra_waterw_con_ed_level_2.shp"))
sewage <- spTransform(sewage, CRS("+proj=longlat +datum=WGS84"))
sewage <- shapefile(paste0(getwd(), "/shapefiles/waterways/", "accra_waterw_con_ed_level_3.shp"))
sewage <- spTransform(sewage, CRS("+proj=longlat +datum=WGS84"))
plot(sewage[sewage$level==1, ], col = "blue", axes=TRUE)
plot(sewage[sewage$level==2, ], col = "green", axes=TRUE, add=TRUE)
plot(sewage[sewage$level==3, ], col = "brown", axes=TRUE, add=TRUE)
plot(sewage[sewage$level==1, ], col = "blue", axes=TRUE)
plot(sewage[sewage$id2==1, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==32, ], col = "blue", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==31, ], col = "blue", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==31, ], col = "orange", axes=TRUE, add=TRUE)
dat0 <- neighbcoord
the.points.sp <- SpatialPointsDataFrame(dat0[, c("lon", "lat")], data.frame(ID=seq(1:nrow(dat0))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
points(the.points.sp, col="red", cex=1)
dist2sewagedf <- data.frame(matrix(NA, nrow=1, ncol=4))
sewage <- sewage[order(id2), ]
sewage <- sewage[order(data$id2), ]
sewage <- sewage[order(sewage@data$id2), ]
sewage <- shapefile(paste0(getwd(), "/shapefiles/waterways/", "accra_waterw_con_ed_level_4.shp"))
sewage <- spTransform(sewage, CRS("+proj=longlat +datum=WGS84"))
sewage <- sewage[order(sewage@data$id2), ]
plot(sewage[sewage$level==1, ], col = "blue", axes=TRUE)
plot(sewage[sewage$level==2, ], col = "green", axes=TRUE, add=TRUE)
plot(sewage[sewage$level==3, ], col = "brown", axes=TRUE, add=TRUE)
endpoint.proj <- SpatialPointsDataFrame(endpoint[c("lon", "lat")],
data.frame(ID=seq(1:nrow(endpoint))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
the.sewage.projected <- spTransform(sewage, CRS( "+init=epsg:32630" ))
dist2sewagedf <- data.frame(matrix(NA, nrow=1, ncol=4))
colnames(dist2sewagedf) <- c("distance", "lon", "lat", "ID")
dist2sewage <- dist2sewagedf$distance
dist2sewagedf.adj <- dist2sewagedf %>% filter(!distance > 1500)
intersec.points <- SpatialPointsDataFrame(dist2sewagedf.adj[c("lon", "lat")],
data.frame(ID=seq(1:nrow(dist2sewagedf.adj))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
setwd("H:/GitHub/accra_drains/")
sewage <- shapefile(paste0(getwd(), "/shapefiles/waterways/", "accra_waterw_con_ed_level_4.shp"))
sewage <- spTransform(sewage, CRS("+proj=longlat +datum=WGS84"))
sewage <- sewage[order(sewage@data$id2), ]
neighbcoord <- read.csv(paste0(getwd(), "/data/", "points_coordinates_output.csv"), sep = ",")
ama <- shapefile(paste0(getwd(), "/shapefiles/neighborhood/", "AMA_projected.shp"))
ama <- spTransform(ama, CRS("+proj=longlat +datum=WGS84"))
line.length <- function(the.lines.projected, the.circles.projected) {
if (gIntersects(the.lines.projected, the.circles.projected)) {
lines_crp <- crop(the.lines.projected, the.circles.projected)
lines_crp_length <- gLength(lines_crp)
return(lines_crp_length)
} else {
return(0)
}
}
dat0 <- neighbcoord
the.points.sp <- SpatialPointsDataFrame(dat0[, c("lon", "lat")], data.frame(ID=seq(1:nrow(dat0))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
the.sewage.projected <- spTransform(sewage, CRS( "+init=epsg:32630" ))
dist2sewagedf <- data.frame(matrix(NA, nrow=1, ncol=4))
colnames(dist2sewagedf) <- c("distance", "lon", "lat", "ID")
for (i in 1:length(dat0[ ,1])) {
dist2sewagedf[i, ] <- rbind(dist2Line(dat0[i, c("lon", "lat")], sewage)) #coordinates of intersection
}
dist2sewage <- dist2sewagedf$distance
dist2sewagedf.adj <- dist2sewagedf %>% filter(!distance > 1500)
intersec.points <- SpatialPointsDataFrame(dist2sewagedf.adj[c("lon", "lat")],
data.frame(ID=seq(1:nrow(dist2sewagedf.adj))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
intersec.points.sp <- spTransform(intersec.points, CRS( "+init=epsg:32630" ))
dist2sewage
dist2sewagedf
View(dist2sewagedf)
points(intersec.points, col="green", cex=1)
plot(sewage, col = "blue", axes=TRUE)
points(intersec.points.sp, col="green", cex=1)
points(intersec.points, col="green", cex=1)
plot(sewage[sewage$level==1, ], col = "blue", axes=TRUE)
plot(sewage, col = "blue", axes=TRUE)
points(sewage[sewage$id==1, ], col = "blue", axes=TRUE)
points(the.points.sp[the.points.sp$id==1, ], col = "blue", axes=TRUE)
points(the.points.sp[the.points.sp$id==1, ], col = "blue")
plot(sewage, col = "blue", axes=TRUE)
points(the.points.sp[the.points.sp$id==1, ], col = "orange")
points(the.points.sp, col="red", cex=1)
points(intersec.points, col="green", cex=1)
plot(sewage, col = "blue", axes=TRUE)
points(intersec.points[intersec.points$id==1, ], col = "orange")
points(intersec.points@data$id==1, ], col = "orange")
points(intersec.points@data$id==1, col = "orange")
points(intersec.points@data$ID==1, col = "orange")
points(intersec.points[intersec.points$ID==1, ], col = "orange")
plot(sewage, col = "blue", axes=TRUE)
points(intersec.points, col="green", cex=1)
points(intersec.points[intersec.points$ID==1, ], col = "red")
points(intersec.points[intersec.points$ID==2, ], col = "red")
points(intersec.points[intersec.points$ID==3, ], col = "red")
points(intersec.points[intersec.points$ID==4, ], col = "red")
View(dist2sewagedf)
points(intersec.points[intersec.points$ID==31, ], col = "red")
View(dist2sewagedf)
dist2Line(dat0[i, c("lon", "lat")], sewage)
points(-0.2211793,5.530365, col="red", cex=1)
points(intersec.points[intersec.points$ID==1, ], col = "red")
intersec.points[intersec.points$ID==1, ]
points(intersec.points@data$ID==1, ], col = "red")
points(intersec.points@data$ID==1, col = "red")
points(intersec.points@data$ID==1, col = "yellow")
intersec.points@data$ID==1
intersec.points[intersec.points@data$ID==1, ]
points(intersec.points[intersec.points@data$ID==1 ], col = "yellow")
points(intersec.points[intersec.points@data==1 ], col = "yellow")
points(intersec.points[intersec.points@data==1 ], col = "green")
points(intersec.points, col = "green")
plot(sewage, col = "blue", axes=TRUE)
points(intersec.points, col = "green")
plot(sewage, col = "blue", axes=TRUE)
points(intersec.points[1], col = "green")
plot(sewage, col = "blue", axes=TRUE)
points(intersec.points[1,], col = "green")
View(dist2sewagedf)
intersec.points[1,]
points(-0.2299676,5.557315, col="red", cex=1)
points(intersec.points[2,], col = "green")
points(intersec.points[14,], col = "green")
points(intersec.points$ID==1, col = "green")
points(intersec.points$ID==2, col = "green")
points(intersec.points$ID==12, col = "green")
points(intersec.points$ID==31, col = "green")
plot(sewage[sewage$level==1, ], col = "blue", axes=TRUE)
plot(sewage[sewage$level==2, ], col = "green", axes=TRUE, add=TRUE)
plot(sewage[sewage$level==3, ], col = "brown", axes=TRUE, add=TRUE)
plot(sewage[sewage$level==1, ], col = "blue", axes=TRUE)
plot(sewage[sewage$id2==1, ], col = "red", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2==31, ], col = "orange", axes=TRUE, add=TRUE)
points(intersec.points$ID==31, col = "green")
points(-0.2299676,5.557315, col="red", cex=1)
intersec.points
intersec.points$ID
points(intersec.points$ID==48, col = "green")
intersec.points$ID==48
points(intersec.points[intersec.points$ID==48, }, col = "green")
points(-0.2299676,5.557315, col="red", cex=1)
points(intersec.points[intersec.points$ID==48, ], col = "green")
points(intersec.points[intersec.points$ID==1, ], col = "green")
points(-0.2299676,5.557315, col="red", cex=1)
points(-0.2299676,5.557315, col="red", cex=1)
points(intersec.points[intersec.points$ID==2, ], col = "green")
points(intersec.points[intersec.points$ID==5, ], col = "green")
points(intersec.points[intersec.points$ID==6, ], col = "green")
points(intersec.points[intersec.points$ID==8, ], col = "green")
points(intersec.points[intersec.points$ID==10, ], col = "green")
points(intersec.points[intersec.points$ID==10, ], col = "blue")
points(intersec.points[intersec.points$ID==11, ], col = "blue")
points(intersec.points[intersec.points$ID==48, ], col = "blue")
points(intersec.points[intersec.points$ID==47, ], col = "blue")
points(intersec.points[intersec.points$ID==30, ], col = "blue")
points(intersec.points[intersec.points$ID==36, ], col = "blue")
points(intersec.points[intersec.points$ID==38, ], col = "blue")
points(intersec.points[intersec.points$ID==28, ], col = "blue")
intersec.points[intersec.points$ID==28, ]
points(-0.2212972,5.531113, col="red", cex=1) #ID 28
points(intersec.points[intersec.points$ID==28, ], col = "blue")
points(-0.2212972,5.531113, col="red", cex=1) #ID 28
points(intersec.points[intersec.points$ID==28, ], col = "blue", cex=0)
points(-0.221109, 5.530075, cex=1) #endpoint
points(intersec.points[intersec.points$ID==27, ], col = "blue")
points(intersec.points[intersec.points$ID==25, ], col = "blue")
points(intersec.points[intersec.points$ID==24, ], col = "blue")
points(intersec.points[intersec.points$ID==23, ], col = "blue")
points(intersec.points[intersec.points$ID==22, ], col = "blue")
points(intersec.points[intersec.points$ID==21, ], col = "blue")
points(intersec.points[intersec.points$ID==20, ], col = "blue")
points(intersec.points[intersec.points$ID==18, ], col = "blue")
points(intersec.points[intersec.points$ID==19, ], col = "blue")
points(intersec.points[intersec.points$ID==17, ], col = "blue")
points(intersec.points[intersec.points$ID==16, ], col = "blue")
points(intersec.points[intersec.points$ID==15, ], col = "blue")
points(intersec.points, col = "blue")
with(intersec.points, text(labels = intersec.points$ID)))
with(intersec.points, text(labels = intersec.points$ID))
with(intersec.points, text(intersec.points, labels = intersec.points$ID))
plot(sewage[sewage$level==1, ], col = "blue", axes=TRUE)
with(intersec.points, text(intersec.points, labels = intersec.points$ID))
points(intersec.points[intersec.points$ID==45, ], col = "blue")
plot(sewage[sewage$level==1, ], col = "blue", axes=TRUE)
points(intersec.points[intersec.points$ID==45, ], col = "blue")
intersec.points[intersec.points$ID==45, ]
points(-0.2196986,5.538641, col="red", cex=1) #ID 45
points(-0.221109, 5.530075, cex=1) #endpoint
endpoint <- data.frame("lon" = c(-0.221109, -0.2196986), "lat" = c(5.530075, 5.538641))
test.points <- data.frame("lon" = c(-0.221109, -0.2196986), "lat" = c(5.530075, 5.538641))
View(test.points)
test.points <- data.frame("lon" = c(-0.221109, -0.2196986), "lat" = c(5.530075, 5.538641), "id" = c("end", "45"))
View(test.points)
test.points <- data.frame("lon" = c(-0.221109, -0.2196986), "lat" = c(5.530075, 5.538641), "id" = c("end", "45"))
test.points <- SpatialPointsDataFrame(endpoint[c("lon", "lat")],
data.frame(ID=seq(1:nrow(endpoint))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
test.points <- spTransform(endpoint.proj, CRS( "+init=epsg:32630" ))
test.points.sp <- spTransform(test.points, CRS( "+init=epsg:32630" ))
test.points.sp[1,]
test.points.sp[1]
test.points.sp[1,]
gDistance(test.points.sp[1,], test.points.sp[2,])
test.points <- data.frame("lon" = c(-0.221109, -0.2196986), "lat" = c(5.530075, 5.538641), "id" = c("end", "45"))
test.points <- SpatialPointsDataFrame(test.points[c("lon", "lat")],
data.frame(ID=seq(1:nrow(test.points))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
test.points.sp <- spTransform(test.points, CRS( "+init=epsg:32630" ))
gDistance(test.points.sp[1,], test.points.sp[2,])
d11 <- gDistance(test.points.sp[1,], test.points.sp[2,])
test.points.sp[ ,1]
1:length(test.points.sp[ ,1])
the.circles.projected <- gBuffer( test.points.sp[2,], width=d11, byid=TRUE)
points(the.circles.projected, col="red", cex=1)
the.circles.projected
test.points.sp
test.points
d11 <- gDistance(test.pointsp[1,], test.points[2,])
d11 <- gDistance(test.points[1,], test.points[2,])
sewage.length <- c()
test.points.projected <- spTransform(test.points.sp[2, ], CRS( "+init=epsg:32630" ))
test.points.projected
test.circles.projected <- gBuffer( test.points.projected[2,], width=d11, byid=TRUE)
test.points.projected <- spTransform(test.points.sp, CRS( "+init=epsg:32630" ))
test.circles.projected <- gBuffer(test.points.projected[2,], width=d11, byid=TRUE)
test.circles.projected
sewage.length <- line.length(the.sewage.projected, test.circles.projected)
sewage.length
d11
test.points <- data.frame("lon" = c(-0.221109, -0.2196986), "lat" = c(5.530075, 5.538641), "id" = c("end", "45"))
test.points <- SpatialPointsDataFrame(test.points[c("lon", "lat")],
data.frame(ID=seq(1:nrow(test.points))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
test.points.sp <- spTransform(test.points, CRS( "+init=epsg:32630" ))
d11 <- gDistance(test.points.sp[1,], test.points.sp[2,])
sewage.length <- c()
test.points.projected <- spTransform(test.points.sp, CRS( "+init=epsg:32630" ))
test.circles.projected <- gBuffer(test.points.projected[2,], width=d11, byid=TRUE)
sewage.length <- line.length(the.sewage.projected, test.circles.projected)
sewage.length
test.points <- data.frame("lon" = c(-0.221109, -0.2196986), "lat" = c(5.530075, 5.538641), "id" = c("end", "45"))
test.points <- SpatialPointsDataFrame(test.points[c("lon", "lat")],
data.frame(ID=seq(1:nrow(test.points))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
test.points.sp <- spTransform(test.points, CRS( "+init=epsg:32630" ))
d11 <- gDistance(test.points.sp[1,], test.points.sp[2,])
sewage.length <- c()
test.points.projected <- spTransform(test.points.sp, CRS( "+init=epsg:32630" ))
test.circles.projected <- gBuffer(test.points.projected[1,], width=d11, byid=TRUE)
sewage.length <- line.length(the.sewage.projected, test.circles.projected)
sewage.length
test.points
sewage
gIntersection(sewage[sewage$id2==1, ], sewage[sewage$id2==2, ])
i2 <- gIntersection(sewage[sewage$id2==1, ], sewage[sewage$id2==2, ])
point(i2, add=T)
points(i2, add=T)
plot(sewage[sewage$level==2, ], col = "green", axes=TRUE, add=TRUE)
i2
i2
i2 <- gIntersection(sewage[sewage$id2==1, ], sewage[sewage$id2==2, ])
i3 <- gIntersection(sewage[sewage$id2==2, ], sewage[sewage$id2==3, ])
points(i3, add=T)
points(i2)
points(i3)
d22 <- gDistance(i2, i3)
i2 <- spTransform(i2, CRS( "+init=epsg:32630" ))
i3 <- spTransform(i3, CRS( "+init=epsg:32630" ))
d22 <- gDistance(i2, i3)
d22
i2
i2 <- gIntersection(sewage[sewage$id2==1, ], sewage[sewage$id2==2, ])
i3 <- gIntersection(sewage[sewage$id2==2, ], sewage[sewage$id2==3, ])
i2
i3
test.points.sp
df <- rbind(i2, i3)
df <- SpatialPointsDataFrame(rbind(i2, i3))
df <- SpatialPointsDataFrame((i2, i3))
df <- SpatialPointsDataFrame(df)
df <- SpatialPointsDataFrame(df,
data.frame(ID=seq(1:nrow(df))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
df <- rbind.data.frame(i2, i3)
df <- rbind(i2, i3)
df <- SpatialPointsDataFrame(df,
data.frame(ID=seq(1:nrow(df))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
df <- SpatialPointsDataFrame(df,
# data.frame(ID=seq(1:nrow(df))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
df[1,]
test.points.projected <- spTransform(df, CRS( "+init=epsg:32630" ))
test.circles.projected <- gBuffer(test.points.projected[1,], width=d22, byid=TRUE)
sewage.length <- line.length(the.sewage.projected, test.circles.projected)
sewage.length
