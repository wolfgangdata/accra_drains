plot(sewage.part[sewage.part$iteration == 3, ] , col = "blue", axes=TRUE, add=TRUE)
plot(sewage.part[sewage.part$iteration == 1, ] , col = "blue", axes=TRUE, add=TRUE)
df[df$iteration == 1, ]
points(pts.neighb.sp[pts.neighb.sp$ID==1, ], col="blue", pch=20, cex=1)
points(pts.neigh.drain[pts.neigh.drain$ID==1, ], col="orange", pch=10, cex=1) #closest point to drain
plot(sewage, col = "lightblue", axes=TRUE)
points(pts.neighb.sp[pts.neighb.sp$ID==1, ], col="blue", pch=20, cex=1)
points(pts.neigh.drain[pts.neigh.drain$ID==1, ], col="orange", pch=10, cex=1) #closest point to drain
plot(circles.prj1[circles.prj1$iteration == 2, ], axes=TRUE, add=TRUE)
plot(circles.prj1[circles.prj1$iteration == 1, ], axes=TRUE, add=TRUE)
plot(sewage, col = "lightblue", axes=TRUE)
points(pts.neighb.sp[pts.neighb.sp$ID==1, ], col="blue", pch=20, cex=1)
points(pts.neigh.drain[pts.neigh.drain$ID==1, ], col="orange", pch=10, cex=1) #closest point to drain
plot(sewage.part[sewage.part$iteration == 2, ] , col = "blue", axes=TRUE, add=TRUE)
sewage.part$iteration
sewage.part <<- gIntersection(circles.prj1[1,], sewage[sewage$id2 == circles.prj1$ID[1], ], byid=c(TRUE, TRUE))
sewage.part$drainID <- pts.neigh.drain.sp$ID2[1]
sewage.part$iteration <- 1
d <- gDistance(pts.drain.end.prj[pts.neigh.drain.sp$ID2[i], ], pts.neigh.drain.sp[i, ])
circles.prj <- gBuffer(pts.drain.end.prj[pts.neigh.drain.sp$ID2[i],], width=d, byid=TRUE)
sewage.part.length.df[i, ] <- c(line.length(sewage.prj[pts.neigh.drain.sp$ID2[i], ], circles.prj),
pts.neigh.drain.sp$ID2[i], i)
circles.prj <- spTransform(circles.prj, CRS('+proj=longlat +datum=WGS84'))
circles.prj$iteration <- i
circles.prj1 <- rbind(circles.prj1, circles.prj)
line2 <- gIntersection(circles.prj1[2,], sewage[sewage$id2 == circles.prj1$ID[2], ], byid=c(TRUE, TRUE))
line2$drainID <- pts.neigh.drain.sp$ID2[2]
line2$iteration <- 2
sewage.part <- rbind(sewage.part, line2)
line2$iteration
sewage.part
sewage.part <<- gIntersection(circles.prj1[1,], sewage[sewage$id2 == circles.prj1$ID[1], ], byid=c(TRUE, TRUE))
sewage.part$drainID <- pts.neigh.drain.sp$ID2[1]
sewage.part$iteration <- 1
for (i in 1:length(pts.neigh.drain)){
d <- gDistance(pts.drain.end.prj[pts.neigh.drain.sp$ID2[i], ], pts.neigh.drain.sp[i, ])
circles.prj <- gBuffer(pts.drain.end.prj[pts.neigh.drain.sp$ID2[i],], width=d, byid=TRUE)
sewage.part.length.df[i, ] <- c(line.length(sewage.prj[pts.neigh.drain.sp$ID2[i], ], circles.prj),
pts.neigh.drain.sp$ID2[i], i)
circles.prj <- spTransform(circles.prj, CRS('+proj=longlat +datum=WGS84'))
circles.prj$iteration <- i
circles.prj1 <- rbind(circles.prj1, circles.prj)
line2 <- gIntersection(circles.prj1[i,], sewage[sewage$id2 == circles.prj1$ID[i], ], byid=c(TRUE, TRUE))
line2$drainID <- pts.neigh.drain.sp$ID2[i]
line2$iteration <- i
sewage.part <- rbind(sewage.part, line2)
}
sewage.part
sewage.part$iteration
sewage.part <<- gIntersection(circles.prj1[1,], sewage[sewage$id2 == circles.prj1$ID[1], ], byid=c(TRUE, TRUE))
sewage.part$drainID <- pts.neigh.drain.sp$ID2[1]
sewage.part$iteration <- 99
for (i in 1:length(pts.neigh.drain)){
d <- gDistance(pts.drain.end.prj[pts.neigh.drain.sp$ID2[i], ], pts.neigh.drain.sp[i, ])
circles.prj <- gBuffer(pts.drain.end.prj[pts.neigh.drain.sp$ID2[i],], width=d, byid=TRUE)
sewage.part.length.df[i, ] <- c(line.length(sewage.prj[pts.neigh.drain.sp$ID2[i], ], circles.prj),
pts.neigh.drain.sp$ID2[i], i)
circles.prj <- spTransform(circles.prj, CRS('+proj=longlat +datum=WGS84'))
circles.prj$iteration <- i
circles.prj1 <- rbind(circles.prj1, circles.prj)
line2 <- gIntersection(circles.prj1[i,], sewage[sewage$id2 == circles.prj1$ID[i], ], byid=c(TRUE, TRUE))
line2$drainID <- pts.neigh.drain.sp$ID2[i]
line2$iteration <- i
sewage.part <- rbind(sewage.part, line2)
}
sewage.part$iteration
sewage.part[-1,]
sewage.part[-c("99"),]
sewage.part[sewage.part$iteration = 99, ]
sewage.part[sewage.part$iteration == 99, ]
sewage.part[-sewage.part$iteration == 99, ]
sewage.part[sewage.part$iteration == -99, ]
sewage.part[sewage.part$iteration == 99, ]
sewage.part <- sewage.part[-1,]
sewage.part
plot(sewage.part[sewage.part$iteration == 2, ] , col = "blue", axes=TRUE, add=TRUE)
plot(sewage.part[sewage.part$iteration == 1, ] , col = "blue", axes=TRUE, add=TRUE)
df[df$iteration == 71, ]
plot(sewage, col = "lightblue", axes=TRUE)
points(pts.neighb.sp[pts.neighb.sp$ID==71, ], col="blue", pch=20, cex=1)
points(pts.neigh.drain[pts.neigh.drain$ID==71, ], col="orange", pch=10, cex=1) #closest point to drain
plot(circles.prj1[circles.prj1$iteration == 71, ], axes=TRUE, add=TRUE)
plot(sewage.part[sewage.part$iteration == 71, ] , col = "blue", axes=TRUE, add=TRUE)
plot(sewage.part[71, ], col = "blue", axes=TRUE, add=TRUE)
plot(sewage.part[70, ], col = "blue", axes=TRUE, add=TRUE)
plot(sewage, col = "lightblue", axes=TRUE)
points(pts.neighb.sp[pts.neighb.sp$ID==70, ], col="blue", pch=20, cex=1)
points(pts.neigh.drain[pts.neigh.drain$ID==70, ], col="orange", pch=10, cex=1) #closest point to drain
plot(circles.prj1[circles.prj1$iteration == 70, ], axes=TRUE, add=TRUE)
plot(sewage.part[sewage.part$iteration == 70, ] , col = "blue", axes=TRUE, add=TRUE)
plot(line2, add=T)
df[df$iteration == 1, ]
df[df$iteration == 12, ]
df[df$iteration == 12, ]
plot(sewage, col = "lightblue", axes=TRUE)
points(pts.neighb.sp[pts.neighb.sp$ID==12, ], col="blue", pch=20, cex=1)
points(pts.neigh.drain[pts.neigh.drain$ID==12, ], col="orange", pch=10, cex=1) #closest point to drain
plot(sewage.part[sewage.part$iteration == 12, ] , col = "blue", axes=TRUE, add=TRUE)
plot(sewage.part, col = "blue", axes=TRUE, add=TRUE)
df[df$iteration == 12, ]
plot(sewage, col = "lightblue", axes=TRUE)
points(pts.neighb.sp[pts.neighb.sp$ID==12, ], col="blue", pch=20, cex=1)
points(pts.neigh.drain[pts.neigh.drain$ID==12, ], col="orange", pch=10, cex=1) #closest point to drain
plot(sewage.part[sewage.part$iteration == 12, ] , col = "blue", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2 == 8, ], col = "blue", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2 == 7, ], col = "blue", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2 == 6, ], col = "blue", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2 == 5, ], col = "blue", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2 == 4, ], col = "blue", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2 == 3, ], col = "blue", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2 == 2, ], col = "blue", axes=TRUE, add=TRUE)
plot(sewage[sewage$id2 == 1, ], col = "blue", axes=TRUE, add=TRUE)
point <- 12
df[df$iteration == point, ]
plot(sewage, col = "lightblue", axes=TRUE)
points(pts.neighb.sp[pts.neighb.sp$ID==point, ], col="blue", pch=20, cex=1)
points(pts.neigh.drain[pts.neigh.drain$ID==point, ], col="orange", pch=10, cex=1) #closest point to drain
plot(sewage.part[sewage.part$iteration == point, ] , col = "blue", axes=TRUE, add=TRUE)
plot.lines <- df[df$iteration == point, ]$drain
plot.lines[-tail(plot.lines, 1)]
plot.lines[-tail(1)]
plot.lines[tail(1)]
plot.lines[head(1)]
plot.lines[-head(1)]
plot.lines[-head(1),]
plot.lines[head(-1),]
plot.lines[head(-1)]
plot.lines[tail(-1)]
plot.lines[length(-1)]
plot.lines[-length(1)]
plot.lines[-max(length(1))]
plot.lines[-max((1))]
plot.lines[max((1))]
plot.lines[max(())]
plot.lines[max]
plot.lines[max(plot.lines)]
max(plot.lines)
length(plot.lines)
max <- length(plot.lines)
plot.lines[max] <- NULL
tail(plot.lines)
plot.lines
tail(plot.lines, 1)
tail(plot.lines, -1)
plot.lines[-max]
plot.lines[-max]
plot.lines.reg <- plot.lines[-max]
for (i in plot.lines.reg){
plot(sewage[sewage$id2 == i, ], col = "blue", axes=TRUE, add=TRUE)
}
df[df$iteration == point, ]
plot.lines <- df[df$iteration == point, ]$drain
max <- length(plot.lines)
plot.lines.reg <- plot.lines[-max]
point <- 66
df[df$iteration == point, ]
plot.lines <- df[df$iteration == point, ]$drain
max <- length(plot.lines)
plot.lines.reg <- plot.lines[-max]
plot(sewage, col = "lightblue", axes=TRUE)
points(pts.neighb.sp[pts.neighb.sp$ID==point, ], col="blue", pch=20, cex=1)
points(pts.neigh.drain[pts.neigh.drain$ID==point, ], col="orange", pch=10, cex=1) #closest point to drain
plot(sewage.part[sewage.part$iteration == point, ] , col = "blue", axes=TRUE, add=TRUE)
for (i in plot.lines.reg){
plot(sewage[sewage$id2 == i, ], col = "blue", axes=TRUE, add=TRUE)
}
pts.neigh.drain
length(pts.neigh.drain)
for (i in 1:length(pts.neigh.drain)){
df[df$iteration == point, ]
plot.lines <- df[df$iteration == point, ]$drain
max <- length(plot.lines)
plot.lines.reg <- plot.lines[-max]
plot(sewage, col = "lightblue", axes=TRUE)
points(pts.neighb.sp[pts.neighb.sp$ID==point, ], col="blue", pch=20, cex=1)
points(pts.neigh.drain[pts.neigh.drain$ID==point, ], col="orange", pch=10, cex=1) #closest point to drain
plot(sewage.part[sewage.part$iteration == point, ] , col = "blue", axes=TRUE, add=TRUE)
for (i in plot.lines.reg){
plot(sewage[sewage$id2 == i, ], col = "blue", axes=TRUE, add=TRUE)
}
}
for (i in 1:length(pts.neigh.drain)){
point <- i
df[df$iteration == point, ]
plot.lines <- df[df$iteration == point, ]$drain
max <- length(plot.lines)
plot.lines.reg <- plot.lines[-max]
plot(sewage, col = "lightblue", axes=TRUE)
points(pts.neighb.sp[pts.neighb.sp$ID==point, ], col="blue", pch=20, cex=1)
points(pts.neigh.drain[pts.neigh.drain$ID==point, ], col="orange", pch=10, cex=1) #closest point to drain
plot(sewage.part[sewage.part$iteration == point, ] , col = "blue", axes=TRUE, add=TRUE)
for (i in plot.lines.reg){
plot(sewage[sewage$id2 == i, ], col = "blue", axes=TRUE, add=TRUE)
}
}
plot(sewage, col = "lightblue", axes=TRUE)
for (i in 1:length(pts.neigh.drain)){
point <- i
df[df$iteration == point, ]
plot.lines <- df[df$iteration == point, ]$drain
max <- length(plot.lines)
plot.lines.reg <- plot.lines[-max]
points(pts.neighb.sp[pts.neighb.sp$ID==point, ], col="blue", pch=20, cex=1)
points(pts.neigh.drain[pts.neigh.drain$ID==point, ], col="orange", pch=10, cex=1) #closest point to drain
plot(sewage.part[sewage.part$iteration == point, ] , col = "blue", axes=TRUE, add=TRUE)
for (i in plot.lines.reg){
plot(sewage[sewage$id2 == i, ], col = "blue", axes=TRUE, add=TRUE)
}
}
points(pts.neighb.sp[pts.neighb.sp$ID==point, ], col="blue", pch=20, cex=1)
points(pts.neigh.drain[pts.neigh.drain$ID==point, ], col="orange", pch=10, cex=1) #closest point to drain
plot(sewage.part[sewage.part$iteration == point, ] , col = "blue", axes=TRUE, add=TRUE)
plot(sewage, col = "lightblue", axes=TRUE)
for (i in 1:length(pts.neigh.drain)){
point <- i
df[df$iteration == point, ]
plot.lines <- df[df$iteration == point, ]$drain
max <- length(plot.lines)
plot.lines.reg <- plot.lines[-max]
points(pts.neighb.sp[pts.neighb.sp$ID==point, ], col="blue", pch=20, cex=1)
points(pts.neigh.drain[pts.neigh.drain$ID==point, ], col="orange", pch=10, cex=1) #closest point to drain
plot(sewage.part[sewage.part$iteration == point, ] , col = "blue", axes=TRUE, add=TRUE)
for (i in plot.lines.reg){
plot(sewage[sewage$id2 == i, ], col = "blue", axes=TRUE, add=TRUE)
}
}
dev.print(pdf, 'filename.pdf')
for (i in 1:length(pts.neigh.drain)){
point <- i
df[df$iteration == point, ]
plot.lines <- df[df$iteration == point, ]$drain
max <- length(plot.lines)
plot.lines.reg <- plot.lines[-max]
png(paste0(getwd(), "/plots/", paste0(map, i))))
plot(sewage, col = "lightblue", axes=TRUE)
points(pts.neighb.sp[pts.neighb.sp$ID==point, ], col="blue", pch=20, cex=1)
points(pts.neigh.drain[pts.neigh.drain$ID==point, ], col="orange", pch=10, cex=1) #closest point to drain
plot(sewage.part[sewage.part$iteration == point, ] , col = "blue", axes=TRUE, add=TRUE)
for (i in plot.lines.reg){
plot(sewage[sewage$id2 == i, ], col = "blue", axes=TRUE, add=TRUE)
}
dev.off()
}
paste0(getwd(), "/plots/", paste0(map, i, ".png") )
paste0(getwd(), "/plots/", paste0("map", i, ".png") )
png(paste0(getwd(), "/plots/", paste0("map_", i, ".png") ))
dev.off()
for (i in 1:length(pts.neigh.drain)){
point <- i
df[df$iteration == point, ]
plot.lines <- df[df$iteration == point, ]$drain
max <- length(plot.lines)
plot.lines.reg <- plot.lines[-max]
png(paste0(getwd(), "/plots/", paste0("map_", i, ".png") ))
plot(sewage, col = "lightblue", axes=TRUE)
points(pts.neighb.sp[pts.neighb.sp$ID==point, ], col="blue", pch=20, cex=1)
points(pts.neigh.drain[pts.neigh.drain$ID==point, ], col="orange", pch=10, cex=1) #closest point to drain
plot(sewage.part[sewage.part$iteration == point, ] , col = "blue", axes=TRUE, add=TRUE)
for (i in plot.lines.reg){
plot(sewage[sewage$id2 == i, ], col = "blue", axes=TRUE, add=TRUE)
}
dev.off()
}
point <- 7
df[df$iteration == point, ]
plot.lines <- df[df$iteration == point, ]$drain
max <- length(plot.lines)
plot.lines.reg <- plot.lines[-max]
png(paste0(getwd(), "/plots/", paste0("map_", i, ".png") ))
dev.off()
plot(sewage, col = "lightblue", axes=TRUE)
points(pts.neighb.sp[pts.neighb.sp$ID==point, ], col="blue", pch=20, cex=1)
points(pts.neigh.drain[pts.neigh.drain$ID==point, ], col="orange", pch=10, cex=1) #closest point to drain
plot(sewage.part[sewage.part$iteration == point, ] , col = "blue", axes=TRUE, add=TRUE)
linepoints
linepoins[7]
linepoints[7]
linepoints[7][1,]
l7 <- linepoints[7]
l7[1,]
l7[1]
l7[,1]
l7[1]
points(-0.2212054, 5.599419, add=T)
point <- 8
df[df$iteration == point, ]
plot.lines <- df[df$iteration == point, ]$drain
max <- length(plot.lines)
plot.lines.reg <- plot.lines[-max]
plot(sewage, col = "lightblue", axes=TRUE)
points(pts.neighb.sp[pts.neighb.sp$ID==point, ], col="blue", pch=20, cex=1)
points(pts.neigh.drain[pts.neigh.drain$ID==point, ], col="orange", pch=10, cex=1) #closest point to drain
plot(sewage.part[sewage.part$iteration == point, ] , col = "blue", axes=TRUE, add=TRUE)
point <- 7
df[df$iteration == point, ]
plot.lines <- df[df$iteration == point, ]$drain
max <- length(plot.lines)
plot.lines.reg <- plot.lines[-max]
plot(sewage, col = "lightblue", axes=TRUE)
points(pts.neighb.sp[pts.neighb.sp$ID==point, ], col="blue", pch=20, cex=1)
points(pts.neigh.drain[pts.neigh.drain$ID==point, ], col="orange", pch=10, cex=1) #closest point to drain
points(-0.2212054, 5.599419)
l8 <- linepoints[8]
l8
points(-0.2268842 5.613721)
points(-0.2268842, 5.613721)
points(-0.2289952, 5.629334)
pts.drain.end <- data.frame("lon" = c(NA), "lat" = c(NA))
for (i in 1:length(linepoints)) {
if (i == 15 | i == 25 | i == 8){
pts.drain.end[i, ] <- head(data.frame(linepoints[i]), 1)
} else {
pts.drain.end[i, ] <- tail(data.frame(linepoints[i]), 1)
}
}
pts.drain.end$drain <- c(1:31)
rownames(pts.drain.end) <- c(1:31)
df <- point2end(neighbcoord)
point <- 7
df[df$iteration == point, ]
plot.lines <- df[df$iteration == point, ]$drain
max <- length(plot.lines)
plot.lines.reg <- plot.lines[-max]
plot(sewage, col = "lightblue", axes=TRUE)
points(pts.neighb.sp[pts.neighb.sp$ID==point, ], col="blue", pch=20, cex=1)
points(pts.neigh.drain[pts.neigh.drain$ID==point, ], col="orange", pch=10, cex=1) #closest point to drain
plot(sewage.part[sewage.part$iteration == point, ] , col = "blue", axes=TRUE, add=TRUE)
sewage.part[sewage.part$iteration == point, ]
pts.drain.start <- data.frame("lon" = c(-NA), "lat" = c(NA))
for (i in 1:length(linepoints)) {
if (i == 15 | i == 25){
pts.drain.start[i, ] <- tail(data.frame(linepoints[i]), 1)
} else {
pts.drain.start[i, ] <- head(data.frame(linepoints[i]), 1)
}
}
pts.drain.start <- data.frame("lon" = c(-NA), "lat" = c(NA))
for (i in 1:length(linepoints)) {
if (i == 15 | i == 25 | i == 8){
pts.drain.start[i, ] <- tail(data.frame(linepoints[i]), 1)
} else {
pts.drain.start[i, ] <- head(data.frame(linepoints[i]), 1)
}
}
pts.drain.start$drain <- c(1:31)
rownames(pts.drain.start) <- c(1:31)
pts.drain.end.sp <- SpatialPointsDataFrame(pts.drain.end[c("lon", "lat")],
data.frame(ID=seq(1:nrow(pts.drain.end))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
pts.drain.end.prj <- spTransform(pts.drain.end.sp, CRS("+init=epsg:32630"))
pts.drain.start.sp <- SpatialPointsDataFrame(pts.drain.start[c("lon", "lat")],
data.frame(ID=seq(1:nrow(pts.drain.start))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
pts.drain.start.prj <- spTransform(pts.drain.start.sp, CRS("+init=epsg:32630"))
sewage.length.df <- data.frame("length" = c(NA), "drain" = c(NA))
for (i in 1:length(sewage.prj)){
d <- gDistance(pts.drain.end.prj[i, ], pts.drain.start.prj[i, ]) #d of beg and end point of drain
circles.prj <- gBuffer(pts.drain.end.prj[i,], width=d, byid=TRUE)
sewage.length.df[i, ] <- c(line.length(sewage.prj[i, ], circles.prj), i)
}
a <- c(1:12)
b <- c(13:27)
c <- c(28:31)
drain.levels <- data.frame("drain"=c(a,b,c),
"level"=c(rep(1,length(a)),rep(2,length(b)), rep(3,length(c))))
sewage.length.df <- left_join(sewage.length.df, drain.levels, by="drain")
rm(a,b,c)
plot(sewage.part[sewage.part$iteration == point, ] , col = "blue", axes=TRUE, add=TRUE)
df <- point2end(neighbcoord)
point <- 7
plot(sewage, col = "lightblue", axes=TRUE)
points(pts.neighb.sp[pts.neighb.sp$ID==point, ], col="blue", pch=20, cex=1)
points(pts.neigh.drain[pts.neigh.drain$ID==point, ], col="orange", pch=10, cex=1) #closest point to drain
plot(sewage.part[sewage.part$iteration == point, ] , col = "blue", axes=TRUE, add=TRUE)
sewage.part[sewage.part$iteration == point, ]
df[df$iteration == point, ]$drain
pts.neighb.sp[pts.neighb.sp$ID==point, ]
plot(sewage.part[sewage.part$ID == 7, ], col = "blue", axes=TRUE, add=TRUE)
plot(sewage.part[sewage.part$ID == 8, ], col = "blue", axes=TRUE, add=TRUE)
plot(sewage, col = "lightblue", axes=TRUE)
source(paste0(getwd(), "/", "02_preset_analysis_options.R"))
source(paste0(getwd(), "/", "03_function.R"))
df <- point2end(neighbcoord)
plot(sewage, col = "lightblue", axes=TRUE)
points(pts.neighb.sp[pts.neighb.sp$ID==point, ], col="blue", pch=20, cex=1)
points(pts.neigh.drain[pts.neigh.drain$ID==point, ], col="orange", pch=10, cex=1) #closest point to drain
plot(sewage.part[sewage.part$iteration == point, ] , col = "blue", axes=TRUE, add=TRUE)
sewage.part$iteration
linepoints[8]
points(-0.2268842, 5.613721)
points(-0.2289952, 5.629334)
head(data.frame(linepoints[i]), 1)
head(data.frame(linepoints[8]), 1)
points(-0.2268842, 5.613721)
head(data.frame(linepoints[25]), 1)
print(head(data.frame(linepoints[25]), 1))
points(head(data.frame(linepoints[25]), 1))
linepoints[25]
points(tail(data.frame(linepoints[25]), 1))
plot(sewage, col = "lightblue", axes=TRUE)
points(head(data.frame(linepoints[25]), 1))
points(tail(data.frame(linepoints[25]), 1))
points(head(data.frame(linepoints[8]), 1))
points(tail(data.frame(linepoints[8]), 1))
plot(sewage, col = "lightblue", axes=TRUE)
points(head(data.frame(linepoints[8]), 1))
points(head(data.frame(linepoints[25]), 1))
points(tail(data.frame(linepoints[8]), 1))
points(tail(data.frame(linepoints[25]), 1))
plot(circles.prj1[circles.prj1$iteration == 7, ], axes=TRUE, add=TRUE)
point <- 7
df[df$iteration == point, ]
plot.lines <- df[df$iteration == point, ]$drain
max <- length(plot.lines)
plot.lines.reg <- plot.lines[-max]
plot(sewage, col = "lightblue", axes=TRUE)
points(pts.neighb.sp[pts.neighb.sp$ID==point, ], col="blue", pch=20, cex=1)
points(pts.neigh.drain[pts.neigh.drain$ID==point, ], col="orange", pch=10, cex=1) #closest point to drain
plot(circles.prj1[circles.prj1$iteration == 7, ], axes=TRUE, add=TRUE)
source(paste0(getwd(), "/", "02_preset_analysis_options.R"))
source(paste0(getwd(), "/", "03_function.R"))
df <- point2end(neighbcoord)
plot(sewage, col = "lightblue", axes=TRUE)
plot(circles.prj1[circles.prj1$iteration == 7, ], axes=TRUE, add=TRUE)
plot(circles.prj1[circles.prj1$iteration == 8, ], axes=TRUE, add=TRUE)
df[df$iteration == point, ]
points(pts.neighb.sp[pts.neighb.sp$ID==point, ]
points(pts.neighb.sp[pts.neighb.sp$ID==point, ], col="blue", pch=20, cex=1)
points(pts.neigh.drain[pts.neigh.drain$ID==point, ], col="orange", pch=10, cex=1) #closest point to drain
source(paste0(getwd(), "/", "02_preset_analysis_options.R"))
source(paste0(getwd(), "/", "03_function.R"))
df <- point2end(neighbcoord)
plot(sewage, col = "lightblue", axes=TRUE)
plot(circles.prj1[circles.prj1$iteration == 8, ], axes=TRUE, add=TRUE)
plot(circles.prj1[circles.prj1$iteration == 7, ], axes=TRUE, add=TRUE)
plot(sewage.part[sewage.part$iteration == point, ] , col = "blue", axes=TRUE, add=TRUE)
setwd("H:/GitHub/accra_drains/")
source(paste0(getwd(), "/", "01_helper_length_calc.R"))
sewage <- shapefile(paste0(getwd(), "/shapefiles/waterways/", "accra_waterw_con_ed_level_4.shp"))
sewage <- spTransform(sewage, CRS("+proj=longlat +datum=WGS84"))
sewage <- sewage[order(sewage@data$id2), ]
sewage.prj <- spTransform(sewage, CRS("+init=epsg:32630"))
neighb <- read.csv(paste0(getwd(), "/data/", "neighborhoods_all_clean.csv"), sep = ",")
neighbcoord <- read.csv(paste0(getwd(), "/data/", "points_coordinates_output.csv"), sep = ",")
source(paste0(getwd(), "/", "02_preset_analysis_options.R"))
source(paste0(getwd(), "/", "03_function.R"))
df <- point2end(neighbcoord)
plot(sewage, col = "lightblue", axes=TRUE)
points(pts.neighb.sp, col="red", pch=20, cex=1)
points(pts.neigh.drain, col="green", pch=10, cex=1) #closest point to drain
plot(sewage, col = "lightblue", axes=TRUE)
points(pts.neighb.sp[pts.neighb.sp$ID==1, ], col="blue", pch=20, cex=1)
points(pts.neigh.drain[pts.neigh.drain$ID==1, ], col="orange", pch=10, cex=1) #closest point to drain
plot(sewage.part[sewage.part$ID == 2, ], col = "blue", axes=TRUE, add=TRUE)
points(pts.neighb.sp[pts.neighb.sp$iteration==1, ], col="blue", pch=20, cex=1)
circles.prj1 <- gBuffer(pts.drain.end.prj[pts.neigh.drain.sp$ID2[1],], width=d, byid=TRUE)
sewage.part.length.df <- data.frame("length" = c(NA), "drain" = c(NA), "iteration" = c(NA))
circles.prj1 <- gBuffer(pts.drain.end.prj[pts.neigh.drain.sp$ID2[1],], width=d, byid=TRUE)
circles.prj1 <- spTransform(circles.prj1, CRS('+proj=longlat +datum=WGS84'))
circles.prj1$iteration <- 99
sewage.part <<- gIntersection(circles.prj1[1,], sewage[sewage$id2 == circles.prj1$ID[1], ], byid=c(TRUE, TRUE))
sewage.part$drainID <- pts.neigh.drain.sp$ID2[1]
sewage.part$iteration <- 99
for (i in 1:length(pts.neigh.drain)){
d <- gDistance(pts.drain.end.prj[pts.neigh.drain.sp$ID2[i], ], pts.neigh.drain.sp[i, ])
circles.prj <- gBuffer(pts.drain.end.prj[pts.neigh.drain.sp$ID2[i],], width=d, byid=TRUE)
sewage.part.length.df[i, ] <- c(line.length(sewage.prj[pts.neigh.drain.sp$ID2[i], ], circles.prj),
pts.neigh.drain.sp$ID2[i], i)
circles.prj <- spTransform(circles.prj, CRS('+proj=longlat +datum=WGS84'))
circles.prj$iteration <- i
circles.prj1 <- rbind(circles.prj1, circles.prj)
line2 <- gIntersection(circles.prj1[i,], sewage[sewage$id2 == circles.prj1$ID[i], ], byid=c(TRUE, TRUE))
line2$drainID <- pts.neigh.drain.sp$ID2[i]
line2$iteration <- i
sewage.part <- rbind(sewage.part, line2)
}
circles.prj1 <- circles.prj1[-1,]
sewage.part <- sewage.part[-1,]
sewage.part.length.df <- left_join(sewage.part.length.df, drain.levels, by="drain")
sewage.part.length.df$iteration <- NULL
plot(circles.prj1[circles.prj1$iteration == 7, ], axes=TRUE, add=TRUE)
points(pts.neighb.sp[pts.neighb.sp$ID==point, ], col="blue", pch=20, cex=1)
point <- 7
df[df$iteration == point, ]
plot.lines <- df[df$iteration == point, ]$drain
max <- length(plot.lines)
plot.lines.reg <- plot.lines[-max]
plot(sewage, col = "lightblue", axes=TRUE)
points(pts.neighb.sp[pts.neighb.sp$ID==point, ], col="blue", pch=20, cex=1)
points(pts.neigh.drain[pts.neigh.drain$ID==point, ], col="orange", pch=10, cex=1) #closest point to drain
plot(sewage.part[sewage.part$iteration == point, ] , col = "blue", axes=TRUE, add=TRUE)
sewage.part[sewage.part$iteration == point, ]
plot(sewage.part[sewage.part$iteration == point, ] , col = "blue", axes=TRUE, add=TRUE)
plot(sewage.part[sewage.part$iteration == 8, ] , col = "blue", axes=TRUE, add=TRUE)
plot(sewage.part, add=T)
plot(sewage, col = "lightblue", axes=TRUE)
point <- i
df[df$iteration == point, ]
plot.lines <- df[df$iteration == point, ]$drain
max <- length(plot.lines)
plot.lines.reg <- plot.lines[-max]
plot(sewage, col = "lightblue", axes=TRUE)
points(pts.neighb.sp[pts.neighb.sp$ID==point, ], col="blue", pch=20, cex=1)
points(pts.neigh.drain[pts.neigh.drain$ID==point, ], col="orange", pch=10, cex=1) #closest point to drain
plot(sewage.part[sewage.part$iteration == 8, ] , col = "blue", axes=TRUE, add=TRUE)
plot(circles.prj1[circles.prj1$iteration == point, ], axes=TRUE, add=TRUE)
plot(sewage.part[sewage.part$iteration == point, ] , col = "blue", axes=TRUE, add=TRUE)
plot(sewage.part[sewage.part$iteration == 70, ] , col = "blue", axes=TRUE, add=TRUE)
plot(sewage.part[sewage.part$iteration == 72, ] , col = "blue", axes=TRUE, add=TRUE)
1:length(pts.neigh.drain
)
sewage.part[sewage.part$iteration == point, ]
