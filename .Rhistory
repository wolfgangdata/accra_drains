file <- "accra_ghana_osm_waterways_con_edited"
path <- paste0(getwd(), "/shapefiles/waterways/")
file <- "accra_ghana_osm_waterways_con_edited"
drain <- line2network(path = path, layer = file, reproject = proj)
path <- paste0(getwd(), "/shapefiles/waterways/")
file <- "accra_ghana_osm_waterways_con_edited"
proj <- ("+proj=longlat +datum=WGS84")
drain <- line2network(path = path, layer = file, reproject = proj)
path
file <- "accra_ghana_osm_waterways_con_edited.shp"
proj <- ("+proj=longlat +datum=WGS84")
drain <- line2network(path = path, layer = file, reproject = proj)
file <- "accra_ghana_osm_waterways_con_edited"
proj <- ("+proj=longlat +datum=WGS84")
drain <- line2network(path = path, layer = file, reproject = proj)
path <- paste0(getwd(), "/shapefiles/waterways/", "accra_ghana_osm_waterways_con_edited.shp")
drain <- line2network(path = path, reproject = proj)
drain <- line2network(path = path, layer = "accra_ghana_osm_waterways_con_edited", reproject = proj)
View(dist2sewagedf)
intersec.points <- dist2sewagedf[c("lon", "lat")]
intersec.points <- spTransform(intersec.points[i, ], CRS( "+init=epsg:32630" ))
intersec.points.proj <- spTransform(intersec.points[i, ], CRS( "+init=epsg:32630" ))
intersec.points.proj <- spTransform(intersec.points, CRS( "+init=epsg:32630" ))
library(rgdal)
library(raster)
library(rgeos)
library(geosphere)
intersec.points.proj <- spTransform(intersec.points, CRS( "+init=epsg:32630" ))
intersec.points.proj[i] <- spTransform(intersec.points, CRS( "+init=epsg:32630" ))
intersec.points.proj[1] <- spTransform(intersec.points[1], CRS( "+init=epsg:32630" ))
intersec.points <- SpatialPointsDataFrame(dist2sewagedf[c("lon", "lat")],
data.frame(ID=seq(1:nrow(dist2sewagedf))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
plot(waterways, col = "blue")
plot(the.points.sp)
plot(waterways, col = "blue", add = TRUE)
plot(waterways, col = "blue")
points(the.points.sp, col="red", cex=1)
lines(the.circles.projected)
points(-0.2299676, 5.557315, cex=1)
points(intersec.points, col="green", cex=1)
View(dist2sewagedf)
points(intersec.points, col="green", cex=1, axes=TRUE)
plot(waterways, col = "blue", axes=TRUE)
points(the.points.sp, col="red", cex=1)
lines(the.circles.projected)
points(intersec.points, col="green", cex=1)
library(dplyr)
View(dist2sewagedf)
dist2sewagedf %>% !filter(distance > 2000)
dist2sewagedf %>% filter(!distance > 2000)
dist2sewagedf.adj <- dist2sewagedf %>% filter(!distance > 1500)
intersec.points <- SpatialPointsDataFrame(dist2sewagedf.adj[c("lon", "lat")],
data.frame(ID=seq(1:nrow(dist2sewagedf.adj))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
plot(waterways, col = "blue", axes=TRUE)
points(the.points.sp, col="red", cex=1)
points(intersec.points, col="green", cex=1)
View(dist2sewagedf.adj)
sewage
head(sewage)
View(dist2sewagedf.adj)
points(-0.221109, 5.530075, cex=1)
endpoint <- c(-0.221109, 5.530075)
points(endpoint, cex=1, col = "yellow")
plot(waterways, col = "blue", axes=TRUE)
points(endpoint, cex=1, col = "yellow")
points(-0.2299676, 5.557315, cex=1)
endpoint
points(endpoint, col = "yellow")
points(endpoint, col = "brown", cex=1, )
points(endpoint, col = "brown", cex=1)
points(endpoint, cex=1)
points(-0.221109, 5.530075, cex=1)
endpoint.proj <- SpatialPointsDataFrame(endpoint, proj4string=CRS("+proj=longlat +datum=WGS84"))
View(dat0)
endpoint <- data.frame(c("lon", "lat"), c(-0.221109, 5.530075))
View(endpoint)
View(endpoint)
endpoint <- data.frame(c("lon", 0.221109), c("lat", 5.530075))
View(endpoint)
endpoint <- data.frame(c("lon"= 0.221109), c("lat"= 5.530075))
View(endpoint)
endpoint <- data.frame("lon" = c("lon", 0.221109), "lat" = c("lat", 5.530075))
endpoint <- data.frame("lon" = c(0.221109), "lat" = c(5.530075))
endpoint.proj <- SpatialPointsDataFrame(endpoint, proj4string=CRS("+proj=longlat +datum=WGS84"))
endpoint.proj <- SpatialPointsDataFrame(endpoint,
data.frame(ID=seq(1:nrow(endpoint))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
plot(waterways, col = "blue", axes=TRUE)
points(endpoint.proj, cex=1)
endpoint.proj <- spTransform(endpoint, CRS( "+init=epsg:32630" ))
endpoint <- c("lon" = c(0.221109), "lat" = c(5.530075))
endpoint
endpoint.proj <- spTransform(endpoint, CRS( "+init=epsg:32630" ))
endpoint.proj <- SpatialPointsDataFrame(endpoint,
data.frame(ID=seq(1:nrow(endpoint))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
endpoint <- data.frame("lon" = c(0.221109), "lat" = c(5.530075))
endpoint.proj <- SpatialPointsDataFrame(endpoint,
data.frame(ID=seq(1:nrow(endpoint))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
endpoint.proj <- spTransform(endpoint.proj, CRS( "+init=epsg:32630" ))
plot(waterways, col = "blue", axes=TRUE)
points(endpoint.proj, cex=1)
plot(waterways, col = "blue", axes=TRUE)
points(intersec.points, col="green", cex=1)
points(-0.2299676, 5.557315, cex=1)
points(endpoint.proj, cex=1)
points(-0.221109, 5.530075, cex=1)
intersec.points
endpoint.proj
endpoint.proj <- SpatialPointsDataFrame(endpoint,
data.frame(ID=seq(1:nrow(endpoint))))
plot(waterways, col = "blue", axes=TRUE)
points(endpoint.proj, cex=1)
points(-0.221109, 5.530075, cex=1)
endpoint.proj <- SpatialPointsDataFrame(endpoint,
data.frame(ID=seq(1:nrow(endpoint))))
endpoint.proj <- spTransform(endpoint.proj, CRS( "+init=epsg:32630" ))
endpoint.proj <- SpatialPointsDataFrame(endpoint[c("lon", "lat")],
data.frame(ID=seq(1:nrow(endpoint))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
endpoint.proj <- spTransform(endpoint.proj, CRS( "+init=epsg:32630" ))
plot(waterways, col = "blue", axes=TRUE)
points(endpoint.proj, cex=1)
endpoint.proj <- SpatialPointsDataFrame(endpoint[c("lon", "lat")],
data.frame(ID=seq(1:nrow(endpoint))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
points(endpoint.proj, cex=1)
endpoint <- data.frame("lon" = c(0.221109), "lat" = c(5.530075))
endpoint.proj <- SpatialPointsDataFrame(endpoint[c("lon", "lat")],
data.frame(ID=seq(1:nrow(endpoint))),
proj4string=CRS("+proj=longlat +datum=WGS84 +init=epsg:32630"))
points(endpoint.proj, cex=1)
dist2sewagedf.adj
endpoint
endpoint <- data.frame("lon" = c(-0.221109), "lat" = c(5.530075))
endpoint.proj <- SpatialPointsDataFrame(endpoint[c("lon", "lat")],
data.frame(ID=seq(1:nrow(endpoint))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
plot(waterways, col = "blue", axes=TRUE)
points(endpoint.proj, cex=1)
points(the.points.sp, col="red", cex=1)
points(intersec.points, col="green", cex=1)
points(endpoint.proj, cex=1)
dist2sewagedf.adj
gLength(endpoint.proj, intersec.points[1])
gIntersects(intersec.points[1], waterways)
gIntersects(intersec.points[1], drains)
gIntersects(intersec.points[1], drain)
gIntersects(intersec.points[1], sewage)
intersec.points[1]
intersec.points[1,]
gIntersects(intersec.points[1,], sewage)
plot(waterways, col = "blue", axes=TRUE)
points(intersec.points[1,], col="green", cex=1)
intersec.points
View(dist2sewagedf.adj)
plot(waterways, col = "blue", axes=TRUE)
points(the.points.sp, col="red", cex=1)
points(intersec.points, col="green")
points(intersec.points, col="green", cex=0)
gDistance(endpoint.proj, intersec.points[1])
gDistance(endpoint.proj, intersec.points[1,])
endpoint.proj <- spTransform(endpoint.proj, CRS( "+init=epsg:32630" ))
gDistance(endpoint.proj, intersec.points[1,])
intersec.points[1,]
endpoint.proj
endpoint.proj
endpoint.proj <- SpatialPointsDataFrame(endpoint[c("lon", "lat")],
data.frame(ID=seq(1:nrow(endpoint))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
endpoint.proj
gDistance(endpoint.proj, intersec.points[1,])
endpoint.proj
intersec.points <- SpatialPointsDataFrame(dist2sewagedf.adj[c("lon", "lat")],
data.frame(ID=seq(1:nrow(dist2sewagedf.adj))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
intersec.points
endpoint.proj <- SpatialPointsDataFrame(endpoint[c("lon", "lat")],
data.frame(ID=seq(1:nrow(endpoint))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
endpoint.proj
gDistance(endpoint.proj)
intersec.points <- spTransform(intersec.points, CRS( "+init=epsg:32630" ))
endpoint.proj <- spTransform(endpoint.proj, CRS( "+init=epsg:32630" ))
gDistance(endpoint.proj, intersec.points[1,])
gLength(endpoint.proj, intersec.points[1,])
data.frame(waterways)
line.distance(endpoint.proj, intersec.points[1,])
library(RGeostats)
install.packages("RGeostats")
install.packages("RGeostats")
library(rgdal)
library(raster)
library(rgeos)
library(geosphere)
library(RGeostats)
library(dplyr)
library(dplyr)
setwd("H:/GitHub/accra_drains/")
waterways <- shapefile(paste0(getwd(), "/shapefiles/waterways/", "accra_ghana_osm_waterways_con_edited1.shp"))
waterways <- spTransform(waterways, CRS("+proj=longlat +datum=WGS84"))
sewage <- waterways
neighbcoord <- read.csv(paste0(getwd(), "/data/", "points_coordinates_output.csv"), sep = ",")
ama <- shapefile(paste0(getwd(), "/shapefiles/neighborhood/", "AMA_projected.shp"))
ama <- spTransform(ama, CRS("+proj=longlat +datum=WGS84"))
plot(waterways, col = "blue", axes=TRUE)
points(the.points.sp, col="red", cex=1)
points(intersec.points, col="green", cex=1)
line.length <- function(the.lines.projected, the.circles.projected) {
if (gIntersects(the.lines.projected, the.circles.projected)) {
lines_crp <- crop(the.lines.projected, the.circles.projected)
lines_crp_length <- gLength(lines_crp)
return(lines_crp_length)
} else {
return(0)
}
}
dat0 <- neighbcoord
the.points.sp <- SpatialPointsDataFrame(dat0[, c("lon", "lat")], data.frame(ID=seq(1:nrow(dat0))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
the.sewage.projected <- spTransform(sewage, CRS( "+init=epsg:32630" ))
sewage.length <- c()
for (i in 1:length(the.points.sp[ ,1])) {
the.points.projected <- spTransform(the.points.sp[i, ], CRS( "+init=epsg:32630" ))
the.circles.projected <- gBuffer(the.points.projected, width=100, byid=TRUE)
sewage.length[i] <- line.length(the.sewage.projected, the.circles.projected)
}
dist2sewagedf <- data.frame(matrix(NA, nrow=1, ncol=4))
colnames(dist2sewagedf) <- c("distance", "lon", "lat", "ID")
for (i in 1:length(dat0[ ,1])) {
dist2sewagedf[i, ] <- rbind(dist2Line(dat0[i, c("lon", "lat")], sewage)) #coordinates of intersection
}
dist2sewage <- dist2sewagedf$distance
dist2sewagedf.adj <- dist2sewagedf %>% filter(!distance > 1500)
intersec.points <- SpatialPointsDataFrame(dist2sewagedf.adj[c("lon", "lat")],
data.frame(ID=seq(1:nrow(dist2sewagedf.adj))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
intersec.points <- spTransform(intersec.points, CRS( "+init=epsg:32630" ))
endpoint <- data.frame("lon" = c(-0.221109), "lat" = c(5.530075))
endpoint.proj <- SpatialPointsDataFrame(endpoint[c("lon", "lat")],
data.frame(ID=seq(1:nrow(endpoint))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
endpoint.proj <- spTransform(endpoint.proj, CRS( "+init=epsg:32630" ))
plot(waterways, col = "blue", axes=TRUE)
points(the.points.sp, col="red", cex=1)
points(intersec.points, col="green", cex=1)
intersec.points <- SpatialPointsDataFrame(dist2sewagedf.adj[c("lon", "lat")],
data.frame(ID=seq(1:nrow(dist2sewagedf.adj))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
dist2sewagedf.adj <- dist2sewagedf %>% filter(!distance > 1500)
intersec.points <- SpatialPointsDataFrame(dist2sewagedf.adj[c("lon", "lat")],
data.frame(ID=seq(1:nrow(dist2sewagedf.adj))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
intersec.points.sp <- spTransform(intersec.points, CRS( "+init=epsg:32630" ))
endpoint <- data.frame("lon" = c(-0.221109), "lat" = c(5.530075))
endpoint.proj <- SpatialPointsDataFrame(endpoint[c("lon", "lat")],
data.frame(ID=seq(1:nrow(endpoint))),
proj4string=CRS("+proj=longlat +datum=WGS84"))
endpoint.proj.sp <- spTransform(endpoint.proj, CRS( "+init=epsg:32630" ))
plot(waterways, col = "blue", axes=TRUE)
points(the.points.sp, col="red", cex=1)
points(intersec.points, col="green", cex=1)
points(endpoint.proj, cex=1)
gIntersects(intersec.points[1,], sewage)
gIntersects(intersec.points.sp[1,], sewage)
sewage
plot(waterways, col = "blue", axes=TRUE)
points(intersec.points[1,], col="green", cex=1)
waterways
points(intersec.points, bg=rev(heat.colors(5))[cut(waterways$length,breaks=c(0,100,200,300,400,Inf))],
col="green", cex=1)
points(intersec.points, bg=rev(heat.colors(5))[cut(waterways$length,breaks=c(0,100,200,300,400,Inf))],
cex=1)
waterways$length
library("grDevices", lib.loc="~/R/R-3.4.0/library")
points(intersec.points, bg=rev(heat.colors(5))[cut(waterways$length,breaks=c(0,100,200,300,400,Inf))],
cex=1)
points(intersec.points, bg=rev(heat.colors(5))[cut(waterways$length,breaks=c(0,100,200,300,400,Inf))],
cex=1)
points(intersec.points, bg=rev(heat.colors(5))[cut(waterways$length,breaks=c(0,100,200,300,400,Inf))])
points(intersec.points, bg=rev(heat.colors(5))[cut(waterways$length,breaks=c(0,100,200,300,400,Inf))],
col="grey",main="Lead Distribution", pch=21, axes=TRUE)
plot(waterways, col = "blue", axes=TRUE, bg=rev(heat.colors(5))[cut(waterways$length,breaks=c(0,100,200,300,400,Inf))],
col="grey", pch=21, axes=TRUE
points(the.points.sp, col="red", cex=1)
points(intersec.points, col="green", cex=1)
points(endpoint.proj, cex=1)
# intersec.points.proj[1] <- spTransform(intersec.points[1], CRS( "+init=epsg:32630" ))
gIntersects(intersec.points[1,], sewage)
lines_crp <- crop(the.lines.projected, the.circles.projected)
lines_crp_length <- gLength(lines_crp)
# distance NOT along the drain
gDistance(endpoint.proj, intersec.points[1,])
line.distance(endpoint.proj, intersec.points[1,])
SpacialLines()
data.frame(waterways)
plot(waterways, col = "blue", axes=TRUE, bg=rev(heat.colors(5))[cut(waterways$length,breaks=c(0,100,200,300,400,Inf))])
plot(waterways, col = "blue", bg=rev(heat.colors(5))[cut(waterways$length,breaks=c(0,100,200,300,400,Inf))])
plot(waterways, bg=rev(heat.colors(5))[cut(waterways$length,breaks=c(0,100,200,300,400,Inf))])
plot(waterways, col = "blue", axes=TRUE)
plot(waterways, col=rev(heat.colors(5))[cut(waterways$length,breaks=c(0,100,200,300,400,Inf))])
boxplot(waterways$length)
quarters(waterways$length)
quantile(waterways$length)
plot(waterways, col=rev(heat.colors(5))[cut(waterways$length,breaks=c(12,90, 959, 4944, 5468))])
plot(waterways, col=rev(heat.colors(5))[cut(waterways$length)])
plot(waterways, col=rev(heat.colors(5))[(waterways$length)])
plot(waterways, col=(waterways$length))
plot(waterways, col = waterways$length)
waterways <- shapefile(paste0(getwd(), "/shapefiles/waterways/", "accra_ghana_osm_waterways_con_edited.shp"))
waterways <- spTransform(waterways, CRS("+proj=longlat +datum=WGS84"))
sewage <- waterways
plot(waterways, col = "blue", axes=TRUE)
plot(waterways, col = waterways$length)
plot(waterways, col = "blue", axes=TRUE)
plot(waterways, col = "blue", axes=TRUE)
plot(waterways, col = waterways$length)
points(the.points.sp, col="red", cex=1)
points(intersec.points, col="green", cex=1)
plot(waterways, col = "blue", axes=TRUE)
points(the.points.sp, col="red", cex=1)
points(intersec.points, col="green", cex=1)
points(endpoint.proj, cex=1)
plot(ama, col="lightgrey")
plot(ama, col=palette())
ctr <- c(-77, -8)
x <- runif(n=20, min=ctr[1] - 1, max=ctr[1] + 1)
y <- runif(n=20, min=ctr[2] - 1, max=ctr[2] + 1)
mygps_df <- data.frame(long=x, lat=y)
head(mygps_df)
mygps_spdf <- SpatialPoints(mygps_df)
mygps_spdf
ctr <- c(-0.2, 5.5)
x <- runif(n=20, min=ctr[1] - 1, max=ctr[1] + 1)
y <- runif(n=20, min=ctr[2] - 1, max=ctr[2] + 1)
mygps_df <- data.frame(long=x, lat=y)
head(mygps_df)
ctr <- c(-0.2, 5.5)
x <- runif(n=20, min=ctr[1] - .1, max=ctr[1] + .1)
y <- runif(n=20, min=ctr[2] - .1, max=ctr[2] + .1)
mygps_df <- data.frame(long=x, lat=y)
head(mygps_df)
mygps_spdf <- SpatialPoints(mygps_df)
mygps_spdf
demPeru <- getData('SRTM', lon=-77, lat=-8, download=TRUE)
my_ext <- extent(-0.2,-0.1,-5.5,-6.5)
demCentralPeru <- crop(demPeru, my_ext)
rm(demPeru)  ## we don't need this big raster anymore so lets get the memory back
demPeru <- getData('SRTM', lon=-0.2, lat=5.5, download=TRUE)
demPeru
my_ext <- extent(-0.2,-0.1,5.5,6.5)
demCentralPeru <- crop(demPeru, my_ext)
rm(demPeru)  ## we don't need this big raster anymore so lets get the memory back
plot(demCentralPeru)
peruSlope <- terrain(demCentralPeru, opt="slope")
peruAspect <- terrain(demCentralPeru, opt="aspect")
peruHill <- hillShade(peruSlope, peruAspect, 40,270)
plot(peruHill, col=grey(0:100/100), legend=FALSE)
steepSlope <- raster(peruSlope)
steepSlope[peruSlope > 0.5] <- 1
plot(demCentralPeru)
plot(steepSlope, col="red", add=TRUE, legend=FALSE)
demCentralPeruUTM <- projectRaster(demCentralPeru, crs=CRS("+proj=utm +south +zone=18 +ellps=WGS84"))
demCentralPeruUTM
demPeru <- getData('SRTM', lon=-0.2, lat=5.5, download=TRUE)
demPeru
my_ext <- extent(-0.8,-0.1,5.4,5.7)
demCentralPeru <- crop(demPeru, my_ext)
rm(demPeru)  ## we don't need this big raster anymore so lets get the memory back
plot(demCentralPeru)
my_ext <- extent(-0.2, 0.1, 5.4, 5.7)
demCentralPeru <- crop(demPeru, my_ext)
demPeru <- getData('SRTM', lon=-0.2, lat=5.5, download=TRUE)
demPeru
my_ext <- extent(-0.2, 0.1, 5.4, 5.7)
demCentralPeru <- crop(demPeru, my_ext)
plot(demCentralPeru)
my_ext <- extent(-0.2, 0.1, 5.5, 5.9)
demCentralPeru <- crop(demPeru, my_ext)
plot(demCentralPeru)
points(intersec.points, col="green", cex=1)
my_ext <- extent(-0.2, 0.1, 5.45, 5.55)
demCentralPeru <- crop(demPeru, my_ext)
plot(demCentralPeru)
demPeru <- getData('SRTM', lon=-0.2, lat=5.5, download=TRUE)
my_ext <- extent(-0.2, 0.1, 5.45, 5.55)
demCentralPeru <- crop(demPeru, my_ext)
plot(demCentralPeru)
my_ext <- extent(-0.2, 0.1, 5.5, 5.9)
demCentralPeru <- crop(demPeru, my_ext)
plot(demCentralPeru)
my_ext <- extent(-0.2, 0.1, 5.5, 5.6)
demCentralPeru <- crop(demPeru, my_ext)
plot(demCentralPeru)
my_ext <- extent(-0.2, 0.1, 5.5, 5.7)
demCentralPeru <- crop(demPeru, my_ext)
plot(demCentralPeru)
points(endpoint.proj, cex=1)
plot(demPeru)
my_ext <- extent(-0.5, 0.1, 5.5, 5.7)
demCentralPeru <- crop(demPeru, my_ext)
plot(demCentralPeru)
points(endpoint.proj, cex=1)
my_ext <- extent(-0.3, -0.1, 5.5, 5.7)
demCentralPeru <- crop(demPeru, my_ext)
plot(demCentralPeru)
points(endpoint.proj, cex=1)
points(intersec.points, col="green", cex=1)
peruSlope <- terrain(demCentralPeru, opt="slope")
peruAspect <- terrain(demCentralPeru, opt="aspect")
peruHill <- hillShade(peruSlope, peruAspect, 40,270)
plot(peruHill, col=grey(0:100/100), legend=FALSE)
steepSlope <- raster(peruSlope)
steepSlope[peruSlope > 0.5] <- 1
plot(demCentralPeru)
plot(steepSlope, col="red", add=TRUE, legend=FALSE)
demCentralPeruUTM <- projectRaster(demCentralPeru, crs=CRS("+proj=utm +north +zone=30 +ellps=WGS84"))
demCentralPeruUTM
demCentralPeru1km <- aggregate(demCentralPeruUTM, fact=11, fun=mean)
demCentralPeru1km
plot(demCentralPeruUTM, xlim=c(250000,300000), ylim=c(9100000,9150000))
plot(demCentralPeru1km, xlim=c(250000,300000), ylim=c(9100000,9150000))
demCentralPeruUTM <- projectRaster(demCentralPeru, crs=CRS("+proj=longlat +datum=WGS84"))
demCentralPeruUTM
demCentralPeru1km <- aggregate(demCentralPeruUTM, fact=11, fun=mean)
demCentralPeru1km
plot(demCentralPeruUTM, xlim=c(250000,300000), ylim=c(9100000,9150000))
plot(demCentralPeru1km, xlim=c(250000,300000), ylim=c(9100000,9150000))
plot(demCentralPeruUTM, xlim=c(250000,300000), ylim=c(9100000,9150000))
plot(demCentralPeru)
plot(mygps_spdf, pch=16, col="red", add=TRUE)
plot(the.points.sp, pch=16, col="red", add=TRUE)
plot(demCentralPeru)
plot(the.points.sp, pch=16, col="red", add=TRUE)
plot(demCentralPeru)
points(the.points.sp, col="red", cex=1)
points(intersec.points, col="green", cex=1)
points(endpoint.proj, cex=1)
plot(demCentralPeru)
plot(waterways, col = "blue", axes=TRUE)
plot(demCentralPeru)
plot(waterways, col = "blue", add=TRUE)
points(the.points.sp, col="red", cex=1)
points(intersec.points, col="green", cex=1)
points(endpoint.proj, cex=1)
plot(demCentralPeru)
plot(waterways, col = "blue", add=TRUE)
line.distance(endpoint.proj, intersec.points[1,])
gDistance(endpoint.proj, intersec.points[1,])
gDistance(endpoint.proj.sp, intersec.points.sp[1,])
points(the.points.sp[1,], col="red", cex=1)
points(intersec.points, col="green", cex=1)
plot(demCentralPeru)
points(the.points.sp[1,], col="red", cex=1)
points(intersec.points[1,], col="green", cex=1)
points(endpoint.proj, cex=1)
plot(waterways, col = "blue", axes=TRUE)
points(the.points.sp, col="red", cex=1)
points(intersec.points, col="green", cex=1)
plot(waterways, col = "blue", axes=TRUE)
points(the.points.sp, col="red", cex=1)
points(intersec.points, col="green", cex=1)
gIntersects(intersec.points[1,], sewage)
sewage <- union(sewage)
sewage <- gUnion(sewage)
plot(sewage, col = "blue", axes=TRUE)
points(the.points.sp, col="red", cex=1)
points(intersec.points, col="green", cex=1)
plot(sewage[1,], col = "blue", axes=TRUE)
points(intersec.points[1,], col="green", cex=1)
plot(sewage, col = "blue", axes=TRUE)
points(intersec.points[1,], col="green", cex=1)
plot(sewage[6,], col = "blue", axes=TRUE)
points(intersec.points[1,], col="green", cex=1)
plot(sewage, col = "blue", axes=TRUE)
points(intersec.points[1,], col="green", cex=1)
plot(sewage[3,], col = "blue", axes=TRUE)
points(intersec.points[1,], col="green", cex=1)
plot(sewage, col = "blue", axes=TRUE)
sewage[3,]
intersec.points[1,]
sewage
plot(sewage[id==3], col = "blue", axes=TRUE)
plot(sewage[sewage$id==3], col = "blue", axes=TRUE)
plot(sewage[sewage$id==3, ], col = "blue", axes=TRUE)
points(intersec.points[1,], col="green", cex=1)
intersec.points[1,]
plot(sewage[sewage$id==6, ], col = "blue", axes=TRUE)
points(intersec.points[1,], col="green", cex=1)
gIntersects(intersec.points[1,], sewage[sewage$id==6, ])
gIntersects(sewage[sewage$id==6, ], sewage[sewage$id==60, ])
plot(waterways)
myLine <- plot(waterways)
myPSP <- as.psp(myLine)
library(spatstat)
install.packages("spatstat")
library("spatstat.utils", lib.loc="~/R/R-3.4.0/library")
myLine <- plot(waterways)
myPSP <- as.psp(myLine)
myLine <- (waterways)
myPSP <- as.psp(myLine)
install.packages("spatstat")
install.packages("spatstat")
library("spatstat", lib.loc="~/R/R-3.4.0/library")
myPSP <- as.psp(myLine)
myPSP <- as.psp(myLine)
library("spatstat.utils", lib.loc="~/R/R-3.4.0/library")
myPSP <- as.psp(myLine)
myPoints <- pointsOnLines(myPSP, 10000)
