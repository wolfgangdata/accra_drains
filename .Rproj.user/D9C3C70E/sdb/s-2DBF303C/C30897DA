{
    "collab_server" : "",
    "contents" : "#***********************************************************************************************\n# Plotting for Accra Ghana Drain Simulation\n#***********************************************************************************************\n#  [1] summarize pathogen count for the 5 stations\n#       write: plot_stations_new.csv\n#  [2] create gif animation for pathogen count per station\n#       save: pathog_station.gif\n#  [3] create gif animation for time series pathogen count per station\n#       save: station_timeplot_100days.gif\n#  [4] create multiple maps and plots\n#\n#***********************************************************************************************\nsetwd(\"H:/GitHub/accra_drains/\")\n\n# libraries\nlibrary(dplyr)\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(ggmap)\nlibrary(gganimate)\n# devtools::install_github(\"dgrtwo/gganimate\")\n# library(\"gganimate\", lib.loc=\"~/R/R-3.4.0/library\")\nlibrary(raster)\nlibrary(broom)\nlibrary(RColorBrewer)\n#***********************************************************************************************\n\n\n# load/ manipulate data\npathog.drains <- read.csv(paste0(getwd(), \"/data/\", \"pahtogens_drain_all_new.csv\"))\n\n# sewage shape file\nsewage <- shapefile(paste0(getwd(), \"/shapefiles/waterways/\", \"accra_waterw_con_ed_level_4.shp\"))\nsewage <- spTransform(sewage, CRS(\"+proj=longlat +datum=WGS84\"))\nsewage <- sewage[order(sewage@data$id2), ]\n\n\n# neighborhood shape file\nama <- shapefile(paste0(getwd(), \"/shapefiles/neighborhood/\", \"AMA_projected.shp\"))\nama <- spTransform(ama, CRS(\"+proj=longlat +datum=WGS84\"))\nama <- ama[order(ama$LOC_NAME), ]\nama$ID <- 1:71\n\n# classification of neighborhoods\na <- c(6,8,9,17,28,33,34,35,67,68)\nb <- c(1,30,39,45,62,71)\nc <- c(2,3,4,5,7,11,13,14,15,19,21,23,31,38,48,51,53,66,70)\nd <- c(10,16,29,32,42,52,57,58,59)\ne <- c(12,24,25,36,37,40,41,46,50,55,60)\n\nama1.fort <- fortify(ama, region = \"ID\")\nama1.fort$color <- ifelse(ama1.fort$id %in% a, 1, \n                          ifelse(ama1.fort$id %in% b, 2,\n                                 ifelse(ama1.fort$id %in% c, 3,\n                                        ifelse(ama1.fort$id %in% d, 4,\n                                               ifelse(ama1.fort$id %in% e, 5, NA)))))\n\ndetach(\"package:raster\", unload=TRUE) #because of interferance with dplyr syntax\n\n#\ndrain.endpoints <- read.csv(paste0(getwd(), \"/data/\", \"drain_endpoints.csv\"))\n\n#\nneighbcoord <- read.csv(paste0(getwd(), \"/data/\", \"points_coordinates_output.csv\"), sep = \",\")\nneighbcoord$FID <- 1:71\n#***********************************************************************************************\n\n\n# pathogen in drain per day\nsummary <- pathog.drains %>% dplyr::select(-c(point, time, meters, iteration) ) %>% group_by(drain) %>%\n        filter(!drain==0) %>% summarise_each(funs(sum))\n\n\nplot.df <- data.frame(t(summary))\nplot.df <- melt(summary, id=\"drain\")\nplot.df$variable <- substring(plot.df$variable, 2)\nplot.df$variable <- as.numeric(plot.df$variable)\n#***********************************************************************************************\n\n\nplot.df1 <- plot.df %>% filter(variable >= 1 & variable <= 100)\n# plot.df1 <- plot.df  #all 1000 days\n\n# create sampling stations: A, B, C, D, E\nplot.df1A <- plot.df1 %>% filter(drain %in% c(1)) %>% select(-drain) %>% \n        group_by(variable) %>% summarise(value = sum(value)) %>% mutate(station = \"A\")\nplot.df1B <- plot.df1 %>% filter(drain %in% c(14)) %>% select(-drain) %>% \n        group_by(variable) %>% summarise(value = sum(value)) %>% mutate(station = \"B\")\nplot.df1C <- plot.df1 %>% filter(drain %in% c(15)) %>% select(-drain) %>% \n        group_by(variable) %>% summarise(value = sum(value)) %>% mutate(station = \"C\")\nplot.df1D <- plot.df1 %>% filter(drain %in% c(5)) %>% select(-drain) %>% \n        group_by(variable) %>% summarise(value = sum(value)) %>% mutate(station = \"D\")\nplot.df1E <- plot.df1 %>% filter(drain %in% c(16)) %>% select(-drain) %>% \n        group_by(variable) %>% summarise(value = sum(value)) %>% mutate(station = \"E\")\n\nplot.stations <- bind_rows(plot.df1A, plot.df1B)\nplot.stations <- bind_rows(plot.stations, plot.df1C)\nplot.stations <- bind_rows(plot.stations, plot.df1D)\nplot.stations <- bind_rows(plot.stations, plot.df1E)\nlevels(plot.stations) <- unique(plot.stations$station)\nrm(plot.df1A, plot.df1B, plot.df1C, plot.df1D, plot.df1E)\n#***********************************************************************************************\n\nwrite.csv(plot.stations, paste0(getwd(), \"/data/\", \"plot_stations_new.csv\"), row.names = F)\n#***********************************************************************************************\n\n\nminimum <- 10^7\np <- ggplot(plot.stations, aes(x = station, y = value, frame=variable)) + # , frame=variable ... for gganimate\n        geom_hline(yintercept = c(minimum), col = \"snow4\", linetype = 2) +\n        geom_line(aes(group = variable)) +\n        geom_point(shape = 21, colour = \"white\", size = 8, stroke = 2, \n                   aes(fill = value <= minimum, group = variable)) +\n        theme_classic()  +\n        scale_y_log10() +\n        labs(title = \"Pathogen Count per Station - Day\",\n             x = \"Stations\", y = \"Pathogen Count (log10)\") +\n        theme(panel.grid.major.x= element_line(colour = \"grey\"),\n              legend.position=\"none\",\n              plot.title=element_text(face=\"bold\",size=25, hjust = 0.5), #title\n              axis.text=element_text(size=14), #font size of labels\n              axis.title=element_text(size=16))\np\n\ngganimate(p, filename=paste0(getwd(), \"/plots_animation/\", \"pathog_station_100.gif\"), \n          ani.width=600, ani.height=600, dpi=1000, interval = .5)\n#***********************************************************************************************\n\n\n# # plot pathogen levels for all drains\n# ggplot(plot.df1, aes(x = factor(drain), y = value)) + # , frame=variable ... for gganimate\n#         geom_hline(yintercept = c(minimum), col = \"grey\", linetype = 2) +\n#         geom_line(aes(group=variable)) +\n#         geom_point(shape = 21, colour = \"white\", size = 5, stroke = 2,\n#                    aes(fill = value >= minimum, group = variable)) +\n#         theme_classic()  +\n#         # scale_y_continuous(trans=\"log10\") +\n#         labs(title = \"Pathogen Count per Drain - Day\",\n#              caption = \"Simulation for Accra, Ghana\",\n#              x = \"Drains\", y = \"# Pathogen\") +\n#         theme(legend.position=\"none\")\n#***********************************************************************************************\n\n\n# animation\n# time series for each station\n# ggplot(data=plot.stations[plot.stations$station == \"A\", ], aes(x=variable, y=value, color=station)) +\nplot.stations1 <- filter(plot.stations, variable <= 100)\n\ntimeplot <- ggplot(data=plot.stations1, \n                   aes(x=variable, y=value, color=station, group=1, frame=variable)) + #, frame=variable\n        geom_path(aes(cumulative = TRUE, group = 1)) + #cumulative = TRUE,\n        geom_point() +\n        geom_hline(yintercept = c(minimum), col = \"snow4\", linetype = 2) +\n        scale_y_log10() +\n        theme_bw() +\n        scale_color_brewer(palette=\"Set2\") +\n        facet_wrap(~station) +\n        labs(title = \"Pathogen Count per Station - Day\",\n             x = \"Days\", y = \"Pathogen Count (log10)\") +\n        theme(legend.position=\"none\",\n              plot.title=element_text(face=\"bold\",size=25, hjust = 0.5), #title\n              strip.text = element_text(size=12), #font size of facet wrap titles\n              axis.text=element_text(size=12), #font size of labels\n              axis.title=element_text(size=16))\n\ngganimate(timeplot, filename=paste0(getwd(), \"/plots_animation/\", \"station_timeplot_100days.gif\"), \n          ani.width=600, ani.height=600, dpi=1000, interval = .5)\n\n## static graphs\nggplot(data=plot.stations1, \n       aes(x=variable, y=value, color=station, group=1)) + \n        geom_path() + \n        geom_hline(yintercept = c(minimum), col = \"snow4\", linetype = 2) +\n        # geom_text(aes(0, minimum, label = \"10^7\", hjust=-0.2, vjust = -1), color=\"black\") +\n        scale_y_log10() +\n        theme_bw() +\n        facet_wrap(~station) +\n        scale_color_brewer(palette=\"Set2\") +\n        labs(title = \"Pathogen Count per Station - Simulation\", \n             x = \"Days\", y = \"Pathogen Count (log10)\") +\n        theme(legend.position=\"none\",\n              plot.title=element_text(face=\"bold\",size=25, hjust = 0.5), #title\n              strip.text = element_text(size=12), #font size of facet wrap titles\n              axis.text=element_text(size=12), #font size of labels\n              axis.title=element_text(size=16))\n\nggsave(filename = paste0(getwd(), \"/plots_misc/\", \"survaillance_stations_timeseries_100days_new.png\"),\n       plot = last_plot(), width = 9.5, height = 6.5, dpi=350)\n#***********************************************************************************************\n\n\n# bloxplot\nggplot(plot.stations, aes(x=station, y=value)) + # \n        # geom_point(shape = 21, colour = \"white\", size = 2, stroke = 2, aes(fill=factor(station), group=variable)) +\n        # geom_point() + \n        theme_classic()  +\n        scale_x_discrete(limits = rev(levels(plot.stations))) +\n        labs(title = \"Pathogen Count per Station - Day\",\n             caption = \"Simulation for Accra, Ghana\", \n             x = \"Stations\", y = \"# Pathogen\") +\n        theme(legend.position=\"none\") + \n        geom_boxplot(aes(fill = station))\n#***********************************************************************************************\n\n\n# basemap <- (get_map(unlist(geocode(\"Accra\")), zoom=13))\nbasemap <- get_map(location = c(long=-0.2169639, lat=5.585909), zoom=12) # define center point on map\nbasemap_bw <- get_map(location = c(long=-0.2169639, lat=5.585909), zoom=12, color = \"bw\") # define center point on map\nbasemap_big <- get_map(location = c(long=-0.2169639, lat=5.585909), zoom=6) # define center point on map\nbasemap_big2 <- get_map(location = c(long=-0.2169639, lat=5.585909), zoom=4) # define center point on map\n#***********************************************************************************************\n\n\n# map - blank\nggmap(basemap) + coord_map() +\n        theme_bw() +\n        labs(title = \"Accra, Ghana\",\n             x = \"Longitude\", y = \"Latitude\") +\n        theme(plot.title = element_text(hjust = 0.5))\n\n\nggsave(filename = paste0(getwd(), \"/plots_misc/\", \"map_blank.png\"),\n       plot = last_plot(), width = 6, height = 6, units = 'in', dpi = 400)\n#***********************************************************************************************\n\n\n# map - blank - zoomed out\nggmap(basemap_big2) + coord_map() +\n        theme_bw() +\n        labs(title = \"Gulf of Guinea\",\n             x = \"Longitude\", y = \"Latitude\") +\n        theme(plot.title = element_text(hjust = 0.5))\n\n\nggsave(filename = paste0(getwd(), \"/plots_misc/\", \"map_blank_w_africa.png\"),\n       plot = last_plot(), width = 6, height = 6, units = 'in', dpi = 400)\n#***********************************************************************************************\n\n\n# map - neighb color\nggmap(basemap) +\n        geom_polygon(data=ama1.fort, aes(x=long, y=lat, fill=factor(id), group=group),\n                     colour=\"white\", alpha=.7) +\n        # geom_point(data=neighbcoord, aes(x=lon, y=lat), color=\"grey\") +\n        # geom_path(data=sewage, aes(x=long, y=lat, group=group), color=\"darkblue\", size=1) +\n        coord_map() +\n        theme_bw() +\n        labs(title = \"Neighborhoods - Accra, Ghana\",\n             x = \"Longitude\", y = \"Latitude\") +\n        theme(legend.position=\"none\",\n              plot.title = element_text(hjust = 0.5))\n\nggsave(filename = paste0(getwd(), \"/plots_misc/\", \"map_neighb.png\"),\n       plot = last_plot(), width = 6, height = 6, units = 'in', dpi = 400)\n#***********************************************************************************************\n\n\n# map - neighb color + neighb name\nggmap(basemap) +\n        geom_polygon(data=ama1.fort, aes(x=long, y=lat, fill=factor(id), group=group),\n                     colour=\"white\", alpha=.7) +\n        geom_text(data=neighbcoord, aes(label=FID),hjust=.5, vjust=0) +\n        coord_map() +\n        theme_bw() +\n        labs(title = \"Neighborhoods - Accra, Ghana\",\n             x = \"Longitude\", y = \"Latitude\") +\n        theme(legend.position=\"none\",\n              plot.title = element_text(hjust = 0.5))\n\nggsave(filename = paste0(getwd(), \"/plots_misc/\", \"map_neighb_name.png\"),\n       plot = last_plot(), width = 6, height = 6, units = 'in', dpi = 400)\n#***********************************************************************************************\n\n\n# map - neighb color\nggmap(basemap) +\n        geom_path(data=sewage, aes(x=long, y=lat, group=group), color=\"darkblue\", size=1) +\n        coord_map() +\n        theme_bw() +\n        labs(title = \"Drain Network - Accra, Ghana\",\n             x = \"Longitude\", y = \"Latitude\") +\n        theme(legend.position=\"none\",\n              plot.title = element_text(hjust = 0.5))\n\n\nggsave(filename = paste0(getwd(), \"/plots_misc/\", \"map_drain.png\"),\n       plot = last_plot(), width = 6, height = 6, units = 'in', dpi = 400)\n#***********************************************************************************************\n\n\n# map - neighb color + drain\nggmap(basemap_bw) +\n        geom_polygon(data=ama1.fort, aes(x=long, y=lat, fill=factor(color), group=group),\n                     colour=\"white\", alpha=.7) +\n        geom_path(data=sewage, aes(x=long, y=lat, group=group), color=\"darkblue\", size=1) +\n        scale_fill_brewer(palette=\"Set2\", name=\"Neighb.\",\n                          labels=c(\"A\",\"B\",\"C\",\"D\",\"E\", \"\")) +\n        coord_map() +\n        theme_bw() +\n        # theme(legend.position=\"none\") +\n        labs(title = \"Neighborhoods and Drain Network - Accra, Ghana\",\n             x = \"Longitude\", y = \"Latitude\") +\n        theme(plot.title = element_text(hjust = 0.5))\n\nggsave(filename = paste0(getwd(), \"/plots_misc/\", \"map_neighb_drain.png\"),\n       plot = last_plot(), width = 6, height = 6, units = 'in', dpi = 400)\n#***********************************************************************************************\n\n# neighb color + drain\nggmap(basemap_bw) +\n        geom_polygon(data=ama1.fort, aes(x=long, y=lat, fill=factor(id), group=group),\n                     colour=\"white\", alpha=.7) +\n        geom_point(data=neighbcoord, aes(x=lon, y=lat), color=\"black\") +\n        geom_path(data=sewage, aes(x=long, y=lat, group=group), color=\"darkblue\", size=1) +\n        # scale_fill_brewer(palette=\"Set2\", name=\"Neighb.\",\n                          # labels=c(\"A\",\"B\",\"C\",\"D\",\"E\", \"\")) +\n        coord_map() +\n        theme_bw() +\n        theme(legend.position=\"none\") +\n        labs(title = \"Neighborhoods and Drain Network - Accra, Ghana\",\n             x = \"Longitude\", y = \"Latitude\") +\n        theme(plot.title = element_text(hjust = 0.5))\n\n\nggsave(filename = paste0(getwd(), \"/plots_misc/\", \"map_neighb_drain_mean.png\"),\n       plot = last_plot(), width = 6, height = 6, units = 'in', dpi = 400)\n#***********************************************************************************************\n\n\n# neighb color + drain\nggplot() +\n        geom_polygon(data=ama1.fort, aes(x=long, y=lat, fill=factor(color), group=group),\n                     colour=\"white\", alpha=.7) +\n        # geom_point(data=neighbcoord, aes(x=lon, y=lat), color=\"grey\") +\n        geom_path(data=sewage, aes(x=long, y=lat, group=group), color=\"darkblue\", size=1) +\n        scale_fill_brewer(palette=\"Set2\", name=\"Neighb.\",\n                          labels=c(\"A\",\"B\",\"C\",\"D\",\"E\", \"\")) +\n        coord_map() +\n        theme_bw() +\n        # theme(legend.position=\"none\") +\n        labs(title = \"Neighborhoods and Drain Network - Accra, Ghana\",\n             x = \"Longitude\", y = \"Latitude\") +\n        theme(plot.title = element_text(hjust = 0.5))\n\n\nggsave(filename = paste0(getwd(), \"/plots_misc/\", \"map1_neighb_drain.png\"),\n       plot = last_plot(), width = 6, height = 6, units = 'in', dpi = 400)\n#***********************************************************************************************\n\n\n# neighb color + drain + neigh point\nggplot() +\n        geom_polygon(data=ama1.fort, aes(x=long, y=lat, fill=factor(color), group=group),\n                     colour=\"black\", alpha=.7) +\n        geom_point(data=neighbcoord, aes(x=lon, y=lat), color=\"black\") +\n        geom_path(data=sewage, aes(x=long, y=lat, group=group), color=\"darkblue\", size=1) +\n        scale_fill_brewer(palette=\"Set2\", name=\"Neighb.\",\n                          labels=c(\"A\",\"B\",\"C\",\"D\",\"E\", \"\")) +\n        coord_map() +\n        theme_bw() +\n        # theme(legend.position=\"none\") +\n        labs(title = \"Neighborhoods and Drain Network - Accra, Ghana\",\n             x = \"Longitude\", y = \"Latitude\") +\n        theme(plot.title = element_text(hjust = 0.5))\n\n\nggsave(filename = paste0(getwd(), \"/plots_misc/\", \"map1_neighb_drain_mean.png\"),\n       plot = last_plot(), width = 6, height = 6, units = 'in', dpi = 400)\n#***********************************************************************************************\n\nneighbcoord1 <- neighbcoord %>% filter(!FID %in% c(18,54,64,69,61,22,65,49,56,20,43,63,44,26,47,27))\n# neighb color + drain + neigh point + clean\nggplot() +\n        geom_polygon(data=ama1.fort, aes(x=long, y=lat, fill=factor(color), group=group),\n                     colour=\"white\", alpha=.7) +\n        geom_point(data=neighbcoord1, aes(x=lon, y=lat), color=\"black\") +\n        geom_path(data=sewage, aes(x=long, y=lat, group=group), color=\"darkblue\", size=1) +\n        scale_fill_brewer(palette=\"Set2\", name=\"Neighb.\",\n                          labels=c(\"A\",\"B\",\"C\",\"D\",\"E\", \"\")) +\n        coord_map() +\n        theme_bw() +\n        # theme(legend.position=\"none\") +\n        labs(title = \"Neighborhoods and Drain Network - Accra, Ghana\",\n             x = \"Longitude\", y = \"Latitude\") +\n        theme(plot.title = element_text(hjust = 0.5))\n\n\nggsave(filename = paste0(getwd(), \"/plots_misc/\", \"map1_neighb_drain_mean_clean.png\"),\n       plot = last_plot(), width = 6, height = 6, units = 'in', dpi = 400)\n#***********************************************************************************************\n#***********************************************************************************************\n#***********************************************************************************************\n#***********************************************************************************************\n\n#population density\nneighb <- read.csv(paste0(getwd(), \"/data/\", \"neighborhoods_all_clean.csv\"), sep = \",\")\n\nama1.fort$id <- as.numeric(ama1.fort$id)\nneighb <- neighb[order(neighb$Region), ]\nneighb$id <- 1:71\n\nneighb1 <- select(neighb, id, Neighborhood, waste_liquid_sewage)\nama1.fort11 <- left_join(ama1.fort, neighb1, by=\"id\")\n\n\nggplot() +\n        geom_polygon(data=ama1.fort11, aes(x=long, y=lat, group=group, fill=(waste_liquid_sewage)),\n                     colour=\"white\", alpha=.7)\n",
    "created" : 1518631039286.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1732741567",
    "id" : "C30897DA",
    "lastKnownWriteTime" : 1506455511,
    "last_content_update" : 1506455511,
    "path" : "H:/GitHub/accra_drains/06_ggplot_plotting.R",
    "project_path" : "06_ggplot_plotting.R",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}